<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>并发编程 - Phaser</title>
      <link href="post/concurrent-phaser.html"/>
      <url>post/concurrent-phaser.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p><strong>Phaser</strong>:</p><p><code>Phaser</code> 是 <code>JDK 1.7</code> 新增的一个同步辅助类，在功能上跟 <code>CyclicBarrier</code> 和 <code>CountDownLatch</code> 差不多，但支持更丰富的用法。与 <code>JUC</code> 中多数同步类不同，它并不是通过 <code>AQS</code> 来实现的，而是用了另外一种同步机制。<br />我们可以将 <code>Phaser</code> 看成一个一个的阶段，每个阶段都有需要执行的线程任务，任务执行完毕就进入下一个阶段。所以 <code>Phaser</code> 特别适合使用在重复执行或者重用的情况。</p><table><thead><tr><th>同步器</th><th>作用</th></tr></thead><tbody><tr><td><code>CountDownLatch</code></td><td>倒数计数器，初始时设定计数器值，线程可以在计数器上等待，当计数器值归<strong>0</strong>后，所有等待的线程继续执行</td></tr><tr><td><code>CyclicBarrier</code></td><td>循环栅栏，初始时设定参与线程数，当线程到达栅栏后，会等待其它线程的到达，当到达栅栏的总数满足指定数后，所有等待的线程继续执行</td></tr><tr><td><code>Phaser</code></td><td>多阶段栅栏，可以在初始时设定参与线程数，也可以中途注册/注销参与者，当到达的参与者数量满足栅栏设定的数量后，会进行阶段升级（<code>advance</code>）</td></tr></tbody></table></div><h2 id="phase"><a class="markdownIt-Anchor" href="#phase"></a> phase</h2><p>在 <code>CyclicBarrier</code> 中，只有一个栅栏，线程在到达栅栏后会等待其它线程的到达。</p><blockquote><p><code>Phaser</code> 也有栅栏，在 <code>Phaser</code> 中，栅栏的名称叫做 <code>phase</code>(阶段)，在任意时间点，<code>Phaser</code> 只处于某一个 <code>phase</code>(阶段)，初始阶段为<strong>0</strong>，最大达到 <code>Integer.MAX_VALUE</code>，然后再次归零。当所有 <code>parties</code> 参与者都到达后，<code>phase</code> 值会递增。</p></blockquote><h2 id="parties"><a class="markdownIt-Anchor" href="#parties"></a> parties</h2><p><code>parties</code>(参与者)其实就是 <code>CyclicBarrier</code> 中的参与线程的概念。</p><blockquote><p><code>CyclicBarrier</code> 中的参与者在初始构造指定后就不能变更，而 <code>Phaser</code> 既可以在初始构造时指定参与者的数量，也可以中途通过<code>register</code>、<code>bulkRegister</code>、<code>arriveAndDeregister</code>等方法注册/注销参与者。</p></blockquote><h2 id="arriveadvance"><a class="markdownIt-Anchor" href="#arriveadvance"></a> arrive/advance</h2><blockquote><p><code>Phaser</code> 注册完 <code>parties</code>（参与者）之后，参与者的初始状态是 <code>unarrived</code> 的，当参与者到达（<code>arrive</code>）当前阶段（<code>phase</code>）后，状态就会变成 <code>arrived</code>。当阶段的到达参与者数满足条件后（注册的数量等于到达的数量），阶段就会发生进阶（<code>advance</code>）——也就是 <code>phase</code> 值 <strong>+1</strong>。</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://segmentfault.com/img/bVbfk33?w=335&amp;h=526" alt="arrive/advance" /></p><h2 id="termination"><a class="markdownIt-Anchor" href="#termination"></a> termination</h2><p>代表当前 <code>Phaser</code> 对象达到终止状态，有点类似于 <code>CyclicBarrier</code> 中的栅栏被破坏的概念。</p><h2 id="tiering"><a class="markdownIt-Anchor" href="#tiering"></a> tiering</h2><blockquote><p><code>Phaser</code> 支持分层（<code>Tiering</code>） —— 一种树形结构，通过构造函数可以指定当前待构造的 <code>Phaser</code> 对象的父结点。之所以引入 <code>Tiering</code>，是因为当一个 <code>Phaser</code> 有大量参与者（<code>parties</code>）的时候，内部的同步操作会使性能急剧下降，而分层可以降低竞争，从而减小因同步导致的额外开销。<br />在一个分层 <code>Phasers</code> 的树结构中，注册和撤销子 <code>Phaser</code> 或父 <code>Phaser</code> 是自动被管理的。当一个 <code>Phaser</code> 的参与者（<code>parties</code>）数量变成0时，如果有该 <code>Phaser</code> 有父结点，就会将它从父结点中溢移除。</p></blockquote><h2 id="核心属性"><a class="markdownIt-Anchor" href="#核心属性"></a> 核心属性</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Primary state representation, holding four bit-fields:</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * unarrived  -- the number of parties yet to hit barrier (bits  0-15)</span></span><br><span class="line"><span class="comment"> * parties    -- the number of parties to wait            (bits 16-31)</span></span><br><span class="line"><span class="comment"> * phase      -- the generation of the barrier            (bits 32-62)</span></span><br><span class="line"><span class="comment"> * terminated -- set if barrier is terminated             (bit  63 / sign)</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Except that a phaser with no registered parties is</span></span><br><span class="line"><span class="comment"> * distinguished by the otherwise illegal state of having zero</span></span><br><span class="line"><span class="comment"> * parties and one unarrived parties (encoded as EMPTY below).</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * To efficiently maintain atomicity, these values are packed into</span></span><br><span class="line"><span class="comment"> * a single (atomic) long. Good performance relies on keeping</span></span><br><span class="line"><span class="comment"> * state decoding and encoding simple, and keeping race windows</span></span><br><span class="line"><span class="comment"> * short.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * All state updates are performed via CAS except initial</span></span><br><span class="line"><span class="comment"> * registration of a sub-phaser (i.e., one with a non-null</span></span><br><span class="line"><span class="comment"> * parent).  In this (relatively rare) case, we use built-in</span></span><br><span class="line"><span class="comment"> * synchronization to lock while first registering with its</span></span><br><span class="line"><span class="comment"> * parent.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * The phase of a subphaser is allowed to lag that of its</span></span><br><span class="line"><span class="comment"> * ancestors until it is actually accessed -- see method</span></span><br><span class="line"><span class="comment"> * reconcileState.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">volatile</span> <span class="keyword">long</span> state;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The parent of this phaser, or null if none</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> Phaser parent;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The root of phaser tree. Equals this if not in a tree.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> Phaser root;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Heads of Treiber stacks for waiting threads. To eliminate</span></span><br><span class="line"><span class="comment"> * contention when releasing some threads while adding others, we</span></span><br><span class="line"><span class="comment"> * use two of them, alternating across even and odd phases.</span></span><br><span class="line"><span class="comment"> * Subphasers share queues with root to speed up releases.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> AtomicReference&lt;QNode&gt; evenQ;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> AtomicReference&lt;QNode&gt; oddQ;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Unsafe mechanics</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> sun.misc.Unsafe UNSAFE;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> stateOffset;</span><br></pre></td></tr></table></figure><ol><li><strong>state</strong> <code>Phaser</code> 使用一个 <code>long</code> 型 <code>state</code> 值来标识内部状态：<ul><li><strong>unarrived</strong>(低<strong>0-15</strong>位) 表示未到达 <code>barrier</code> 的 <code>parties</code> 数</li><li><strong>parties</strong>(中<strong>16-31</strong>位) 表示等待的 <code>parties</code> 数</li><li><strong>phase</strong>(中<strong>32-62</strong>位) 表示 <code>phase</code> 当前的 <code>Generation</code></li><li><strong>terminated</strong>(高<strong>63</strong>位) 表示当前 <code>phaser</code> 的终止状态。</li></ul></li><li><strong>parent</strong> 表示当前 <code>phaser</code> 的父 <code>phaser</code>, 可能为空</li><li><strong>root</strong> 表示当前 <code>phaser</code> 数的根 <code>phaser</code></li><li><strong>evenQ/oddQ</strong> 等待线程的栈顶元素,根据 <code>phase</code> 取模定义为一个奇数 <code>header</code> 和一个偶数 <code>header</code></li><li><strong>UNSAFE</strong> <code>Unsafe</code> 类实例,用于操作内存</li><li><strong>stateOffset</strong> <code>state</code> 变量的内存偏移量</li></ol><h2 id="qnode"><a class="markdownIt-Anchor" href="#qnode"></a> QNode</h2><blockquote><p><code>QNode</code> 是 <code>Phaser</code> 定义的内部等待队列，用于在阻塞时记录等待线程及相关信息。实现了<code>ForkJoinPool</code> 的一个内部接口 <code>ManagedBlocker</code>。<br /><code>Phaser</code> 也可能被 <code>ForkJoinPool</code> 中的任务使用，这样在其他任务阻塞等待一个 <code>phase</code> 时可以保证足够的并行度来执行任务(通过内部实现方法 <code>isReleasable</code> 和 <code>block</code>)。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Wait nodes for Treiber stack representing wait queue</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">QNode</span> <span class="keyword">implements</span> <span class="title">ForkJoinPool</span>.<span class="title">ManagedBlocker</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 当前 phaser</span></span><br><span class="line">    <span class="keyword">final</span> Phaser phaser;</span><br><span class="line">    <span class="comment">// 当前的 phase 值</span></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> phase;</span><br><span class="line">    <span class="comment">// 是否可中断</span></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">boolean</span> interruptible;</span><br><span class="line">    <span class="comment">// 是否支持超时</span></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">boolean</span> timed;</span><br><span class="line">    <span class="comment">// 是否已中断</span></span><br><span class="line">    <span class="keyword">boolean</span> wasInterrupted;</span><br><span class="line">    <span class="comment">// 超时时长,单位纳秒</span></span><br><span class="line">    <span class="keyword">long</span> nanos;</span><br><span class="line">    <span class="comment">// 若支持超时,nanos 等于创建 QNode 的系统时间 + nanos,否则 nanos = 0</span></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">long</span> deadline;</span><br><span class="line">    <span class="comment">// 当前节点线程</span></span><br><span class="line">    <span class="keyword">volatile</span> Thread thread; <span class="comment">// nulled to cancel wait</span></span><br><span class="line">    <span class="comment">// QNode 是一个的单向链表,next 是该节点的后继节点</span></span><br><span class="line">    QNode next;</span><br><span class="line"></span><br><span class="line">    QNode(Phaser phaser, <span class="keyword">int</span> phase, <span class="keyword">boolean</span> interruptible,<span class="keyword">boolean</span> timed, <span class="keyword">long</span> nanos) &#123;</span><br><span class="line">        <span class="keyword">this</span>.phaser = phaser;</span><br><span class="line">        <span class="keyword">this</span>.phase = phase;</span><br><span class="line">        <span class="keyword">this</span>.interruptible = interruptible;</span><br><span class="line">        <span class="keyword">this</span>.nanos = nanos;</span><br><span class="line">        <span class="keyword">this</span>.timed = timed;</span><br><span class="line">        <span class="keyword">this</span>.deadline = timed ? System.nanoTime() + nanos : <span class="number">0L</span>;</span><br><span class="line">        thread = Thread.currentThread();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isReleasable</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (thread == <span class="keyword">null</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (phaser.getPhase() != phase) &#123;</span><br><span class="line">            thread = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (Thread.interrupted())</span><br><span class="line">            wasInterrupted = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (wasInterrupted &amp;&amp; interruptible) &#123;</span><br><span class="line">            thread = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (timed) &#123;</span><br><span class="line">            <span class="keyword">if</span> (nanos &gt; <span class="number">0L</span>) &#123;</span><br><span class="line">                nanos = deadline - System.nanoTime();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (nanos &lt;= <span class="number">0L</span>) &#123;</span><br><span class="line">                thread = <span class="keyword">null</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">block</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (isReleasable())</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (!timed)</span><br><span class="line">            LockSupport.park(<span class="keyword">this</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (nanos &gt; <span class="number">0L</span>)</span><br><span class="line">            LockSupport.parkNanos(<span class="keyword">this</span>, nanos);</span><br><span class="line">        <span class="keyword">return</span> isReleasable();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="构造函数"><a class="markdownIt-Anchor" href="#构造函数"></a> 构造函数</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Creates a new phaser with no initially registered parties, no</span></span><br><span class="line"><span class="comment"> * parent, and initial phase number 0. Any thread using this</span></span><br><span class="line"><span class="comment"> * phaser will need to first register for it.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Phaser</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> <span class="keyword">this</span>(<span class="keyword">null</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Creates a new phaser with the given number of registered</span></span><br><span class="line"><span class="comment"> * unarrived parties, no parent, and initial phase number 0.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> parties the number of parties required to advance to the</span></span><br><span class="line"><span class="comment"> * next phase</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> IllegalArgumentException if parties less than zero</span></span><br><span class="line"><span class="comment"> * or greater than the maximum number of parties supported</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Phaser</span><span class="params">(<span class="keyword">int</span> parties)</span> </span>&#123;</span><br><span class="line"> <span class="keyword">this</span>(<span class="keyword">null</span>, parties);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Equivalent to &#123;<span class="doctag">@link</span> #Phaser(Phaser, int) Phaser(parent, 0)&#125;.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> parent the parent phaser</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Phaser</span><span class="params">(Phaser parent)</span> </span>&#123;</span><br><span class="line"> <span class="keyword">this</span>(parent, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Creates a new phaser with the given parent and number of</span></span><br><span class="line"><span class="comment">* registered unarrived parties.  When the given parent is non-null</span></span><br><span class="line"><span class="comment">* and the given number of parties is greater than zero, this</span></span><br><span class="line"><span class="comment">* child phaser is registered with its parent.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> parent the parent phaser</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> parties the number of parties required to advance to the</span></span><br><span class="line"><span class="comment">* next phase</span></span><br><span class="line"><span class="comment">* <span class="doctag">@throws</span> IllegalArgumentException if parties less than zero</span></span><br><span class="line"><span class="comment">* or greater than the maximum number of parties supported</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Phaser</span><span class="params">(Phaser parent, <span class="keyword">int</span> parties)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (parties &gt;&gt;&gt; PARTIES_SHIFT != <span class="number">0</span>) <span class="comment">// 无符号右移 16 位,不为 0 说明 parties 超出了最大限制</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">&quot;Illegal number of parties&quot;</span>);</span><br><span class="line">    <span class="keyword">int</span> phase = <span class="number">0</span>; <span class="comment">// 初始 phase 为 0</span></span><br><span class="line">    <span class="keyword">this</span>.parent = parent;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果 parent 不为空</span></span><br><span class="line">    <span class="keyword">if</span> (parent != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">final</span> Phaser root = parent.root; <span class="comment">// 获取 phaser 的根节点</span></span><br><span class="line">        <span class="keyword">this</span>.root = root; <span class="comment">// 将 root 指向根节点</span></span><br><span class="line">        <span class="keyword">this</span>.evenQ = root.evenQ; <span class="comment">// 共用根节点的偶数&quot;无锁栈&quot;</span></span><br><span class="line">        <span class="keyword">this</span>.oddQ = root.oddQ; <span class="comment">// 共用根节点的奇数&quot;无锁栈&quot;</span></span><br><span class="line">        <span class="keyword">if</span> (parties != <span class="number">0</span>) <span class="comment">// 如果注册的 parties 不为零</span></span><br><span class="line">            phase = parent.doRegister(<span class="number">1</span>); <span class="comment">// 向父节点注册 1 个 party 表示自己</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 不存在父节点,说明当前节点作为根节点注册</span></span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.root = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">this</span>.evenQ = <span class="keyword">new</span> AtomicReference&lt;QNode&gt;();</span><br><span class="line">        <span class="keyword">this</span>.oddQ = <span class="keyword">new</span> AtomicReference&lt;QNode&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 计算并更新 state</span></span><br><span class="line">    <span class="keyword">this</span>.state = (parties == <span class="number">0</span>) ? (<span class="keyword">long</span>)EMPTY :</span><br><span class="line">        ((<span class="keyword">long</span>)phase &lt;&lt; PHASE_SHIFT) |</span><br><span class="line">        ((<span class="keyword">long</span>)parties &lt;&lt; PARTIES_SHIFT) |</span><br><span class="line">        ((<span class="keyword">long</span>)parties);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="核心方法"><a class="markdownIt-Anchor" href="#核心方法"></a> 核心方法</h2><h3 id="register"><a class="markdownIt-Anchor" href="#register"></a> register</h3><blockquote><p>在 <code>CyclicBarrier</code>、<code>CountDownLatch</code> 中，我们使用计数器来控制程序的顺序执行，同样的在 <code>Phaser</code> 中也是通过计数器来控制。<br />在 <code>Phaser</code> 中计数器叫做 <code>parties</code>， 我们可以通过 <code>Phaser</code> 的构造函数或者 <code>register()</code> 方法来注册。<br />通过调用 <code>register()</code> 方法，我们可以动态的控制 <code>phaser</code> 的个数。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Adds a new unarrived party to this phaser.  If an ongoing</span></span><br><span class="line"><span class="comment"> * invocation of &#123;<span class="doctag">@link</span> #onAdvance&#125; is in progress, this method</span></span><br><span class="line"><span class="comment"> * may await its completion before returning.  If this phaser has</span></span><br><span class="line"><span class="comment"> * a parent, and this phaser previously had no registered parties,</span></span><br><span class="line"><span class="comment"> * this child phaser is also registered with its parent. If</span></span><br><span class="line"><span class="comment"> * this phaser is terminated, the attempt to register has</span></span><br><span class="line"><span class="comment"> * no effect, and a negative value is returned.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> the arrival phase number to which this registration</span></span><br><span class="line"><span class="comment"> * applied.  If this value is negative, then this phaser has</span></span><br><span class="line"><span class="comment"> * terminated, in which case registration has no effect.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> IllegalStateException if attempting to register more</span></span><br><span class="line"><span class="comment"> * than the maximum supported number of parties</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">register</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> doRegister(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Adds the given number of new unarrived parties to this phaser.</span></span><br><span class="line"><span class="comment"> * If an ongoing invocation of &#123;<span class="doctag">@link</span> #onAdvance&#125; is in progress,</span></span><br><span class="line"><span class="comment"> * this method may await its completion before returning.  If this</span></span><br><span class="line"><span class="comment"> * phaser has a parent, and the given number of parties is greater</span></span><br><span class="line"><span class="comment"> * than zero, and this phaser previously had no registered</span></span><br><span class="line"><span class="comment"> * parties, this child phaser is also registered with its parent.</span></span><br><span class="line"><span class="comment"> * If this phaser is terminated, the attempt to register has no</span></span><br><span class="line"><span class="comment"> * effect, and a negative value is returned.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> parties the number of additional parties required to</span></span><br><span class="line"><span class="comment"> * advance to the next phase</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> the arrival phase number to which this registration</span></span><br><span class="line"><span class="comment"> * applied.  If this value is negative, then this phaser has</span></span><br><span class="line"><span class="comment"> * terminated, in which case registration has no effect.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> IllegalStateException if attempting to register more</span></span><br><span class="line"><span class="comment"> * than the maximum supported number of parties</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> IllegalArgumentException if &#123;<span class="doctag">@code</span> parties &lt; 0&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">bulkRegister</span><span class="params">(<span class="keyword">int</span> parties)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (parties &lt; <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException();</span><br><span class="line">    <span class="keyword">if</span> (parties == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> getPhase();</span><br><span class="line">    <span class="keyword">return</span> doRegister(parties);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>register</code> 和 <code>bulkRegister</code> 都是可以动态注册指定数量的 <code>Phaser</code>,其核心都由 <code>doRegister</code> 实现。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Implementation of register, bulkRegister</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> registrations number to add to both parties and</span></span><br><span class="line"><span class="comment"> * unarrived fields. Must be greater than zero.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">doRegister</span><span class="params">(<span class="keyword">int</span> registrations)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// adjustment to state</span></span><br><span class="line">    <span class="comment">// 首先计算注册后当前State要调整的值adjust</span></span><br><span class="line">    <span class="keyword">long</span> adjust = ((<span class="keyword">long</span>)registrations &lt;&lt; PARTIES_SHIFT) | registrations;</span><br><span class="line">    <span class="keyword">final</span> Phaser parent = <span class="keyword">this</span>.parent;</span><br><span class="line">    <span class="keyword">int</span> phase;</span><br><span class="line">    <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">        <span class="keyword">long</span> s = (parent == <span class="keyword">null</span>) ? state : reconcileState(); <span class="comment">// reconcileState()调整当前 Phaser 的 State 与root一致</span></span><br><span class="line">        <span class="keyword">int</span> counts = (<span class="keyword">int</span>)s;</span><br><span class="line">        <span class="keyword">int</span> parties = counts &gt;&gt;&gt; PARTIES_SHIFT;                 <span class="comment">// 参与者数目</span></span><br><span class="line">        <span class="keyword">int</span> unarrived = counts &amp; UNARRIVED_MASK;                <span class="comment">// 未到达的数目</span></span><br><span class="line">        <span class="keyword">if</span> (registrations &gt; MAX_PARTIES - parties)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(badRegister(s));</span><br><span class="line">        phase = (<span class="keyword">int</span>)(s &gt;&gt;&gt; PHASE_SHIFT);                       <span class="comment">// 当前Phaser所处的阶段phase </span></span><br><span class="line">        <span class="keyword">if</span> (phase &lt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span> (counts != EMPTY) &#123;                                  <span class="comment">// CASE1: 当前Phaser已经注册过参与者</span></span><br><span class="line">            <span class="keyword">if</span> (parent == <span class="keyword">null</span> || reconcileState() == s) &#123;</span><br><span class="line">                 <span class="comment">// 参与者已全部到达栅栏, 当前 Phaser 正在 Advance, 需要阻塞等待这一过程完成</span></span><br><span class="line">                <span class="keyword">if</span> (unarrived == <span class="number">0</span>)             <span class="comment">// wait out advance</span></span><br><span class="line">                    root.internalAwaitAdvance(phase, <span class="keyword">null</span>);</span><br><span class="line">                <span class="comment">// 否则,直接更新 State</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (UNSAFE.compareAndSwapLong(<span class="keyword">this</span>, stateOffset,</span><br><span class="line">                                                    s, s + adjust))</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// CASE2: 当前 Phaser 未注册过参与者（第一次注册）,且没有父结点</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (parent == <span class="keyword">null</span>) &#123;              <span class="comment">// 1st root registration</span></span><br><span class="line">            <span class="keyword">long</span> next = ((<span class="keyword">long</span>)phase &lt;&lt; PHASE_SHIFT) | adjust;</span><br><span class="line">            <span class="comment">// CAS更新当前 Phaser 的 state 值</span></span><br><span class="line">            <span class="keyword">if</span> (UNSAFE.compareAndSwapLong(<span class="keyword">this</span>, stateOffset, s, next))</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// CASE3: 当前 Phaser 未注册过参与者（第一次注册）,且有父结点</span></span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (<span class="keyword">this</span>) &#123;               <span class="comment">// 1st sub registration</span></span><br><span class="line">                <span class="keyword">if</span> (state == s) &#123;               <span class="comment">// recheck under lock</span></span><br><span class="line">                    phase = parent.doRegister(<span class="number">1</span>); <span class="comment">// 向父结点注册一个参与者</span></span><br><span class="line">                    <span class="keyword">if</span> (phase &lt; <span class="number">0</span>)</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="comment">// finish registration whenever parent registration</span></span><br><span class="line">                    <span class="comment">// succeeded, even when racing with termination,</span></span><br><span class="line">                    <span class="comment">// since these are part of the same &quot;transaction&quot;.</span></span><br><span class="line">                    <span class="keyword">while</span> (!UNSAFE.compareAndSwapLong</span><br><span class="line">                            (<span class="keyword">this</span>, stateOffset, s,</span><br><span class="line">                            ((<span class="keyword">long</span>)phase &lt;&lt; PHASE_SHIFT) | adjust)) &#123;</span><br><span class="line">                        s = state;</span><br><span class="line">                        phase = (<span class="keyword">int</span>)(root.state &gt;&gt;&gt; PHASE_SHIFT);</span><br><span class="line">                        <span class="comment">// assert (int)s == EMPTY;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> phase;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>如果当前操作不是首次注册，那么直接在当前 <code>phaser</code> 上更新注册 <code>parties</code> 数  (如果当前未到达数为<strong>0</strong>，说明上一代 <code>phase</code> 正在进行到达操作，此时调用 <code>internalAwaitAdvance()</code> 方法等待其他任务完成到达操作)</li><li>如果是首次注册，并且当前 <code>phaser</code> 没有父节点，说明是 <code>root</code> 节点注册，直接更新 <code>phase</code></li><li>如果当前操作是首次注册，并且当前 <code>phaser</code> 由父节点，则注册操作交由父节点，并更新当前 <code>phaser</code> 的 <code>phase</code>。由于子 <code>Phaser</code> 的 <code>phase</code> 在没有被真正使用之前，允许滞后于它的 <code>root</code> 节点。非首次注册时，如果 <code>Phaser</code> 有父节点，则调用 <code>reconcileState()</code>方法解决 <code>root</code> 节点的 <code>phase</code> 延迟传递问题。</li></ol><h3 id="reconcilestate"><a class="markdownIt-Anchor" href="#reconcilestate"></a> reconcileState</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Resolves lagged phase propagation from root if necessary.</span></span><br><span class="line"><span class="comment"> * Reconciliation normally occurs when root has advanced but</span></span><br><span class="line"><span class="comment"> * subphasers have not yet done so, in which case they must finish</span></span><br><span class="line"><span class="comment"> * their own advance by setting unarrived to parties (or if</span></span><br><span class="line"><span class="comment"> * parties is zero, resetting to unregistered EMPTY state).</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> reconciled state</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">long</span> <span class="title">reconcileState</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> Phaser root = <span class="keyword">this</span>.root;</span><br><span class="line">    <span class="keyword">long</span> s = state;</span><br><span class="line">    <span class="keyword">if</span> (root != <span class="keyword">this</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> phase, p;</span><br><span class="line">        <span class="comment">// CAS to root phase with current parties, tripping unarrived</span></span><br><span class="line">        <span class="keyword">while</span> ((phase = (<span class="keyword">int</span>)(root.state &gt;&gt;&gt; PHASE_SHIFT)) !=</span><br><span class="line">                (<span class="keyword">int</span>)(s &gt;&gt;&gt; PHASE_SHIFT) &amp;&amp;</span><br><span class="line">                !UNSAFE.compareAndSwapLong</span><br><span class="line">                (<span class="keyword">this</span>, stateOffset, s,</span><br><span class="line">                s = (((<span class="keyword">long</span>)phase &lt;&lt; PHASE_SHIFT) |</span><br><span class="line">                        ((phase &lt; <span class="number">0</span>) ? (s &amp; COUNTS_MASK) :</span><br><span class="line">                        (((p = (<span class="keyword">int</span>)s &gt;&gt;&gt; PARTIES_SHIFT) == <span class="number">0</span>) ? EMPTY :</span><br><span class="line">                        ((s &amp; PARTIES_MASK) | p))))))</span><br><span class="line">            s = state;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当 <code>root</code> 节点的 <code>phase</code> 已经 <code>advance</code> 到下一代，但是子节点 <code>phaser</code> 还没有，这种情况下它们必须通过更新未到达 <code>parties</code> 数 完成它们自己的 <code>advance</code> 操作(如果 <code>parties</code> 为<strong>0</strong>，重置为 <code>EMPTY</code> 状态)。</p><h3 id="internalawaitadvance"><a class="markdownIt-Anchor" href="#internalawaitadvance"></a> internalAwaitAdvance</h3><blockquote><p><code>internalAwaitAdvance</code> 的主要逻辑就是：当前参与者线程等待 <code>Phaser</code> 进入下一个阶段(就是 <code>phase</code> 值变化).</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Possibly blocks and waits for phase to advance unless aborted.</span></span><br><span class="line"><span class="comment"> * Call only on root phaser.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> phase current phase</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> node if non-null, the wait node to track interrupt and timeout;</span></span><br><span class="line"><span class="comment"> * if null, denotes noninterruptible wait</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> current phase 返回新的阶段</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">internalAwaitAdvance</span><span class="params">(<span class="keyword">int</span> phase, QNode node)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// assert root == this;</span></span><br><span class="line">    <span class="comment">// 清空不用的Treiber Stack（奇偶Stack交替使用）</span></span><br><span class="line">    releaseWaiters(phase-<span class="number">1</span>);          <span class="comment">// ensure old queue clean</span></span><br><span class="line">    <span class="comment">// 入队标识</span></span><br><span class="line">    <span class="keyword">boolean</span> queued = <span class="keyword">false</span>;           <span class="comment">// true when node is enqueued</span></span><br><span class="line">    <span class="keyword">int</span> lastUnarrived = <span class="number">0</span>;            <span class="comment">// to increase spins upon change</span></span><br><span class="line">    <span class="keyword">int</span> spins = SPINS_PER_ARRIVAL;</span><br><span class="line">    <span class="keyword">long</span> s;</span><br><span class="line">    <span class="keyword">int</span> p;</span><br><span class="line">    <span class="keyword">while</span> ((p = (<span class="keyword">int</span>)((s = state) &gt;&gt;&gt; PHASE_SHIFT)) == phase) &#123;</span><br><span class="line">        <span class="keyword">if</span> (node == <span class="keyword">null</span>) &#123;           <span class="comment">// spinning in noninterruptible mode</span></span><br><span class="line">            <span class="keyword">int</span> unarrived = (<span class="keyword">int</span>)s &amp; UNARRIVED_MASK;</span><br><span class="line">            <span class="keyword">if</span> (unarrived != lastUnarrived &amp;&amp;</span><br><span class="line">                (lastUnarrived = unarrived) &lt; NCPU)</span><br><span class="line">                spins += SPINS_PER_ARRIVAL;</span><br><span class="line">            <span class="keyword">boolean</span> interrupted = Thread.interrupted();</span><br><span class="line">            <span class="keyword">if</span> (interrupted || --spins &lt; <span class="number">0</span>) &#123; <span class="comment">// need node to record intr</span></span><br><span class="line">                node = <span class="keyword">new</span> QNode(<span class="keyword">this</span>, phase, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="number">0L</span>);</span><br><span class="line">                node.wasInterrupted = interrupted;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 已完成或中止</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (node.isReleasable()) <span class="comment">// done or aborted</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="comment">// 将结点压入栈顶</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (!queued) &#123;           <span class="comment">// push onto queue</span></span><br><span class="line">            AtomicReference&lt;QNode&gt; head = (phase &amp; <span class="number">1</span>) == <span class="number">0</span> ? evenQ : oddQ;</span><br><span class="line">            QNode q = node.next = head.get();</span><br><span class="line">            <span class="keyword">if</span> ((q == <span class="keyword">null</span> || q.phase == phase) &amp;&amp;</span><br><span class="line">                (<span class="keyword">int</span>)(state &gt;&gt;&gt; PHASE_SHIFT) == phase) <span class="comment">// avoid stale enq</span></span><br><span class="line">                queued = head.compareAndSet(q, node);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">// 阻塞等待</span></span><br><span class="line">                ForkJoinPool.managedBlock(node);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException ie) &#123;</span><br><span class="line">                node.wasInterrupted = <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (node != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (node.thread != <span class="keyword">null</span>)</span><br><span class="line">            node.thread = <span class="keyword">null</span>;       <span class="comment">// avoid need for unpark()</span></span><br><span class="line">        <span class="keyword">if</span> (node.wasInterrupted &amp;&amp; !node.interruptible)</span><br><span class="line">            Thread.currentThread().interrupt();</span><br><span class="line">        <span class="keyword">if</span> (p == phase &amp;&amp; (p = (<span class="keyword">int</span>)(state &gt;&gt;&gt; PHASE_SHIFT)) == phase)</span><br><span class="line">            <span class="keyword">return</span> abortWait(phase); <span class="comment">// possibly clean up on abort</span></span><br><span class="line">    &#125;</span><br><span class="line">    releaseWaiters(phase);</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二个参数 <code>node</code>，如果不为空，则说明等待线程需要追踪<strong>中断状态</strong>或<strong>超时状态</strong>。以 <code>doRegister</code> 中的调用为例，不考虑线程争用，<code>internalAwaitAdvance</code> 大概流程如下：</p><ol><li>首先调用 <code>releaseWaiters</code> 唤醒上一代所有等待线程，确保旧队列中没有遗留的等待线程。</li><li>循环 <code>SPINS_PER_ARRIVAL</code> 指定的次数或者当前线程被中断，创建 <code>node</code> 记录等待线程及相关信息。</li><li>继续循环调用 <code>ForkJoinPool.managedBlock</code> 运行被阻塞的任务</li><li>继续循环，阻塞任务运行成功被释放，跳出循环</li><li>最后唤醒当前 <code>phase</code> 的线程</li></ol><h3 id="arrive"><a class="markdownIt-Anchor" href="#arrive"></a> arrive</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Arrives at this phaser, without waiting for others to arrive.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;It is a usage error for an unregistered party to invoke this</span></span><br><span class="line"><span class="comment"> * method.  However, this error may result in an &#123;<span class="doctag">@code</span></span></span><br><span class="line"><span class="comment"> * IllegalStateException&#125; only upon some subsequent operation on</span></span><br><span class="line"><span class="comment"> * this phaser, if ever.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> the arrival phase number, or a negative value if terminated</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> IllegalStateException if not terminated and the number</span></span><br><span class="line"><span class="comment"> * of unarrived parties would become negative</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">arrive</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> doArrive(ONE_ARRIVAL);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Main implementation for methods arrive and arriveAndDeregister.</span></span><br><span class="line"><span class="comment"> * Manually tuned to speed up and minimize race windows for the</span></span><br><span class="line"><span class="comment"> * common case of just decrementing unarrived field.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> adjust value to subtract from state;</span></span><br><span class="line"><span class="comment"> *               ONE_ARRIVAL for arrive,</span></span><br><span class="line"><span class="comment"> *               ONE_DEREGISTER for arriveAndDeregister</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">doArrive</span><span class="params">(<span class="keyword">int</span> adjust)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> Phaser root = <span class="keyword">this</span>.root;</span><br><span class="line">    <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">        <span class="keyword">long</span> s = (root == <span class="keyword">this</span>) ? state : reconcileState();</span><br><span class="line">        <span class="keyword">int</span> phase = (<span class="keyword">int</span>)(s &gt;&gt;&gt; PHASE_SHIFT);</span><br><span class="line">        <span class="keyword">if</span> (phase &lt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> phase;</span><br><span class="line">        <span class="keyword">int</span> counts = (<span class="keyword">int</span>)s;</span><br><span class="line">        <span class="keyword">int</span> unarrived = (counts == EMPTY) ? <span class="number">0</span> : (counts &amp; UNARRIVED_MASK);</span><br><span class="line">        <span class="keyword">if</span> (unarrived &lt;= <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(badArrive(s));</span><br><span class="line">        <span class="keyword">if</span> (UNSAFE.compareAndSwapLong(<span class="keyword">this</span>, stateOffset, s, s-=adjust)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (unarrived == <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">long</span> n = s &amp; PARTIES_MASK;  <span class="comment">// base of next state</span></span><br><span class="line">                <span class="keyword">int</span> nextUnarrived = (<span class="keyword">int</span>)n &gt;&gt;&gt; PARTIES_SHIFT;</span><br><span class="line">                <span class="keyword">if</span> (root == <span class="keyword">this</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (onAdvance(phase, nextUnarrived))</span><br><span class="line">                        n |= TERMINATION_BIT;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span> (nextUnarrived == <span class="number">0</span>)</span><br><span class="line">                        n |= EMPTY;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        n |= nextUnarrived;</span><br><span class="line">                    <span class="keyword">int</span> nextPhase = (phase + <span class="number">1</span>) &amp; MAX_PHASE;</span><br><span class="line">                    n |= (<span class="keyword">long</span>)nextPhase &lt;&lt; PHASE_SHIFT;</span><br><span class="line">                    UNSAFE.compareAndSwapLong(<span class="keyword">this</span>, stateOffset, s, n);</span><br><span class="line">                    releaseWaiters(phase);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (nextUnarrived == <span class="number">0</span>) &#123; <span class="comment">// propagate deregistration</span></span><br><span class="line">                    phase = parent.doArrive(ONE_DEREGISTER);</span><br><span class="line">                    UNSAFE.compareAndSwapLong(<span class="keyword">this</span>, stateOffset,</span><br><span class="line">                                                s, s | EMPTY);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    phase = parent.doArrive(ONE_ARRIVAL);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> phase;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>arrive</code> 方法手动调整到达数，使当前线程到达 <code>phaser</code>。<code>arrive</code> 和 <code>arriveAndDeregister</code> 都调用了 <code>doArrive</code> 实现，大概流程如下：</p><ol><li>首先更新 <code>state</code>(state - adjust)</li><li>如果当前不是最后一个未到达的任务，直接返回 <code>phase</code></li><li>如果当前是最后一个未到达的任务<ul><li>如果当前是 <code>root</code> 节点，判断是否需要终止 <code>phaser</code>，<code>CAS</code> 更新 <code>phase</code>，最后释放等待的线程；</li><li>如果是分层结构，并且已经没有下一代未到达的parties，则交由父节点处理 <code>doArrive</code> 逻辑，然后更新 <code>state</code> 为 <code>EMPTY</code>。</li></ul></li></ol><h3 id="arriveandawaitadvance"><a class="markdownIt-Anchor" href="#arriveandawaitadvance"></a> arriveAndAwaitAdvance</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Arrives at this phaser and awaits others. Equivalent in effect</span></span><br><span class="line"><span class="comment"> * to &#123;<span class="doctag">@code</span> awaitAdvance(arrive())&#125;.  If you need to await with</span></span><br><span class="line"><span class="comment"> * interruption or timeout, you can arrange this with an analogous</span></span><br><span class="line"><span class="comment"> * construction using one of the other forms of the &#123;<span class="doctag">@code</span></span></span><br><span class="line"><span class="comment"> * awaitAdvance&#125; method.  If instead you need to deregister upon</span></span><br><span class="line"><span class="comment"> * arrival, use &#123;<span class="doctag">@code</span> awaitAdvance(arriveAndDeregister())&#125;.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;It is a usage error for an unregistered party to invoke this</span></span><br><span class="line"><span class="comment"> * method.  However, this error may result in an &#123;<span class="doctag">@code</span></span></span><br><span class="line"><span class="comment"> * IllegalStateException&#125; only upon some subsequent operation on</span></span><br><span class="line"><span class="comment"> * this phaser, if ever.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> the arrival phase number, or the (negative)</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@linkplain</span> #getPhase() current phase&#125; if terminated</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> IllegalStateException if not terminated and the number</span></span><br><span class="line"><span class="comment"> * of unarrived parties would become negative</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">arriveAndAwaitAdvance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Specialization of doArrive+awaitAdvance eliminating some reads/paths</span></span><br><span class="line">    <span class="keyword">final</span> Phaser root = <span class="keyword">this</span>.root;</span><br><span class="line">    <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">        <span class="keyword">long</span> s = (root == <span class="keyword">this</span>) ? state : reconcileState();</span><br><span class="line">        <span class="keyword">int</span> phase = (<span class="keyword">int</span>)(s &gt;&gt;&gt; PHASE_SHIFT);</span><br><span class="line">        <span class="keyword">if</span> (phase &lt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> phase;</span><br><span class="line">        <span class="keyword">int</span> counts = (<span class="keyword">int</span>)s;</span><br><span class="line">        <span class="keyword">int</span> unarrived = (counts == EMPTY) ? <span class="number">0</span> : (counts &amp; UNARRIVED_MASK); <span class="comment">// 获取未到达数</span></span><br><span class="line">        <span class="keyword">if</span> (unarrived &lt;= <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(badArrive(s));</span><br><span class="line">        <span class="keyword">if</span> (UNSAFE.compareAndSwapLong(<span class="keyword">this</span>, stateOffset, s,</span><br><span class="line">                                        s -= ONE_ARRIVAL)) &#123; <span class="comment">// 更新state</span></span><br><span class="line">            <span class="keyword">if</span> (unarrived &gt; <span class="number">1</span>)</span><br><span class="line">                <span class="keyword">return</span> root.internalAwaitAdvance(phase, <span class="keyword">null</span>); <span class="comment">// 阻塞等待其他任务</span></span><br><span class="line">            <span class="keyword">if</span> (root != <span class="keyword">this</span>)</span><br><span class="line">                <span class="keyword">return</span> parent.arriveAndAwaitAdvance(); <span class="comment">// 子Phaser交给父节点处理</span></span><br><span class="line">            <span class="keyword">long</span> n = s &amp; PARTIES_MASK;  <span class="comment">// base of next state</span></span><br><span class="line">            <span class="keyword">int</span> nextUnarrived = (<span class="keyword">int</span>)n &gt;&gt;&gt; PARTIES_SHIFT;</span><br><span class="line">            <span class="keyword">if</span> (onAdvance(phase, nextUnarrived)) <span class="comment">// 全部到达，检查是否可销毁</span></span><br><span class="line">                n |= TERMINATION_BIT;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (nextUnarrived == <span class="number">0</span>)</span><br><span class="line">                n |= EMPTY;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                n |= nextUnarrived;</span><br><span class="line">            <span class="keyword">int</span> nextPhase = (phase + <span class="number">1</span>) &amp; MAX_PHASE; <span class="comment">// 计算下一代phase</span></span><br><span class="line">            n |= (<span class="keyword">long</span>)nextPhase &lt;&lt; PHASE_SHIFT;</span><br><span class="line">            <span class="keyword">if</span> (!UNSAFE.compareAndSwapLong(<span class="keyword">this</span>, stateOffset, s, n)) <span class="comment">// 更新state</span></span><br><span class="line">                <span class="keyword">return</span> (<span class="keyword">int</span>)(state &gt;&gt;&gt; PHASE_SHIFT); <span class="comment">// terminated</span></span><br><span class="line">            releaseWaiters(phase); <span class="comment">// 释放等待phase的线程</span></span><br><span class="line">            <span class="keyword">return</span> nextPhase;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>使当前线程到达 <code>phaser</code> 并等待其他任务到达，等价于 <code>awaitAdvance(arrive())</code>。如果需要等待中断或超时，可以使用 <code>awaitAdvance</code> 方法完成一个类似的构造。如果需要在到达后取消注册，可以使用 <code>awaitAdvance(arriveAndDeregister())</code>。效果类似于<code>CyclicBarrier.await</code>。大概流程如下：</p></blockquote><ol><li>更新 <code>state(state - 1)</code>；</li><li>如果未到达数大于<strong>1</strong>，调用 <code>internalAwaitAdvance</code> 阻塞等待其他任务到达，返回当前 <code>phase</code></li><li>如果为分层结构，则交由父节点处理 <code>arriveAndAwaitAdvance</code> 逻辑</li><li>如果未到达数 <strong>&lt;=1</strong>，判断 <code>phaser</code> 终止状态，<code>CAS</code> 更新 <code>phase</code> 到下一代，最后释放等待当前 <code>phase</code> 的线程，并返回下一代 <code>phase</code>。</li></ol><h3 id="awaitadvance"><a class="markdownIt-Anchor" href="#awaitadvance"></a> awaitAdvance</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Awaits the phase of this phaser to advance from the given phase</span></span><br><span class="line"><span class="comment"> * value, returning immediately if the current phase is not equal</span></span><br><span class="line"><span class="comment"> * to the given phase value or this phaser is terminated.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> phase an arrival phase number, or negative value if</span></span><br><span class="line"><span class="comment"> * terminated; this argument is normally the value returned by a</span></span><br><span class="line"><span class="comment"> * previous call to &#123;<span class="doctag">@code</span> arrive&#125; or &#123;<span class="doctag">@code</span> arriveAndDeregister&#125;.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> the next arrival phase number, or the argument if it is</span></span><br><span class="line"><span class="comment"> * negative, or the (negative) &#123;<span class="doctag">@linkplain</span> #getPhase() current phase&#125;</span></span><br><span class="line"><span class="comment"> * if terminated</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">awaitAdvance</span><span class="params">(<span class="keyword">int</span> phase)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> Phaser root = <span class="keyword">this</span>.root;</span><br><span class="line">    <span class="keyword">long</span> s = (root == <span class="keyword">this</span>) ? state : reconcileState();</span><br><span class="line">    <span class="keyword">int</span> p = (<span class="keyword">int</span>)(s &gt;&gt;&gt; PHASE_SHIFT);</span><br><span class="line">    <span class="keyword">if</span> (phase &lt; <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> phase;</span><br><span class="line">    <span class="keyword">if</span> (p == phase)</span><br><span class="line">        <span class="keyword">return</span> root.internalAwaitAdvance(phase, <span class="keyword">null</span>);</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>awaitAdvance</code> 用于阻塞等待线程到达，直到 <code>phase</code> 前进到下一代，返回下一代的 <code>phase number</code>。方法很简单，不多赘述。<code>awaitAdvanceInterruptibly</code> 方法是响应中断版的 <code>awaitAdvance</code>，不同之处在于，调用阻塞时会记录线程的中断状态。</p><h2 id="示例"><a class="markdownIt-Anchor" href="#示例"></a> 示例</h2><blockquote><p>通过 <code>Phaser</code> 控制多个线程的执行时机：有时候我们希望所有线程到达指定点后再同时开始执行，我们可以利用<code>CyclicBarrier</code> 或 <code>CountDownLatch</code> 来实现，这里给出使用 <code>Phaser</code> 的版本。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Phaser phaser = <span class="keyword">new</span> Phaser();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; <span class="number">10</span>; index++) &#123;</span><br><span class="line">        phaser.register();                  <span class="comment">// 注册各个参与者线程</span></span><br><span class="line">        <span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">            <span class="keyword">int</span> phase = phaser.arriveAndAwaitAdvance();     <span class="comment">// 等待其它参与者线程到达</span></span><br><span class="line">            <span class="comment">// TODO do something</span></span><br><span class="line">            System.out.println(String.format(<span class="string">&quot;【%s】: 执行完任务，当前 phase = %s&quot;</span>, Thread.currentThread().getName(), phase));</span><br><span class="line">        &#125;, <span class="string">&quot;Thread-&quot;</span> + index).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上示例中，创建了<strong>10</strong>个线程，并通过 <code>register</code> 方法注册 <code>Phaser</code> 的参与者数量为 <strong>10</strong>。当某个线程调用<code>arriveAndAwaitAdvance</code> 方法后，<code>arrive</code> 数量会加<strong>1</strong>，如果数量没有满足总数（参与者数量<strong>10</strong>），当前线程就是一直等待，当最后一个线程到达后，所有线程都会继续往下执行。</p><div class="note warning flat"><p><strong>注意</strong>：<br /><code>arriveAndAwaitAdvance</code> 方法是不响应中断的，也就是说即使当前线程被中断，<code>arriveAndAwaitAdvance</code> 方法也不会返回或抛出异常，而是继续等待。如果希望能够响应中断，可以参考 <code>awaitAdvanceInterruptibly</code> 方法。</p></div><blockquote><p>通过 <code>Phaser</code> 实现开关。我们希望一些外部条件得到满足后，然后打开开关，线程才能继续执行</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SneakyThrows</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Phaser phaser = <span class="keyword">new</span> Phaser(<span class="number">1</span>);       <span class="comment">// 注册主线程,当外部条件满足时,由主线程打开开关</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        phaser.register();                      <span class="comment">// 注册各个参与者线程</span></span><br><span class="line">        <span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">            <span class="keyword">int</span> phase = phaser.arriveAndAwaitAdvance();     <span class="comment">// 等待其它参与者线程到达</span></span><br><span class="line">            <span class="comment">// TODO do something</span></span><br><span class="line">            System.out.println(String.format(<span class="string">&quot;【%s】: 执行完任务，当前 phase = %s&quot;</span>, Thread.currentThread().getName(), phase));</span><br><span class="line">        &#125;, <span class="string">&quot;Thread-&quot;</span> + i).start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 外部条件:等待用户输入命令</span></span><br><span class="line">    System.out.println(<span class="string">&quot;Press ENTER to continue&quot;</span>);</span><br><span class="line">    BufferedReader reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in));</span><br><span class="line">    reader.readLine();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 打开开关</span></span><br><span class="line">    phaser.arriveAndDeregister();</span><br><span class="line">    System.out.println(<span class="string">&quot;主线程打开了开关&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>Phaser</code> 支持分层功能，我们先来考虑下如何用利用 <code>Phaser</code> 的分层来实现高并发时的优化</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://segmentfault.com/img/bVbfk75?w=3206&amp;h=1136" alt="phaser" /></p><blockquote><p>如果任务数继续增大，那么同步产生的开销会非常大，利用 <code>Phaser</code> 分层的功能，我们可以限定每个 <code>Phaser</code> 对象的最大使用线程（任务数）</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://segmentfault.com/img/bVbfk9h?w=4371&amp;h=1751" alt="phaser" /></p><p>可以看到，上述 <code>Phasers</code> 其实构成了一颗多叉树，如果任务数继续增多，还可以将 <code>Phaser</code> 的叶子结点继续分裂，然后将分裂出的子结点供工作线程使用。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> repeats = <span class="number">3</span>;    <span class="comment">// 指定任务最多执行的次数</span></span><br><span class="line">    Phaser phaser = <span class="keyword">new</span> Phaser() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">onAdvance</span><span class="params">(<span class="keyword">int</span> phase, <span class="keyword">int</span> registeredParties)</span> </span>&#123;</span><br><span class="line">            System.out.println(String.format(</span><br><span class="line">                    <span class="string">&quot;---------------PHASE[%s],Parties[%s] ---------------&quot;</span>,</span><br><span class="line">                    phase, registeredParties));</span><br><span class="line">            <span class="keyword">return</span> phase + <span class="number">1</span> &gt;= repeats || registeredParties == <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    Runnable[] tasks = <span class="keyword">new</span> Runnable[<span class="number">10</span>];</span><br><span class="line">    build(tasks, <span class="number">0</span>, tasks.length, phaser);       <span class="comment">// 根据任务数,为每个任务分配 Phaser 对象</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; tasks.length; index++) &#123;</span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> Tasker(index, phaser)).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">build</span><span class="params">(Runnable[] taskers, <span class="keyword">int</span> lo, <span class="keyword">int</span> hi, Phaser phaser)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tasksPerPhaser = <span class="number">4</span>;      <span class="comment">// 每个Phaser对象对应的工作线程（任务）数</span></span><br><span class="line">    <span class="keyword">if</span> (hi - lo &gt; tasksPerPhaser) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = lo; i &lt; hi; i += tasksPerPhaser) &#123;</span><br><span class="line">            <span class="keyword">int</span> j = Math.min(i + tasksPerPhaser, hi);</span><br><span class="line">            build(taskers, i, j, <span class="keyword">new</span> Phaser(phaser));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = lo; i &lt; hi; ++i)</span><br><span class="line">            taskers[i] = () -&gt; &#123;</span><br><span class="line"></span><br><span class="line">            &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Tasker</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Phaser phaser;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> count;</span><br><span class="line"></span><br><span class="line">    Tasker(Phaser phaser) &#123;</span><br><span class="line">        <span class="keyword">this</span>.phaser = phaser;</span><br><span class="line">        <span class="keyword">this</span>.phaser.register();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Tasker(<span class="keyword">int</span> count, Phaser phaser) &#123;</span><br><span class="line">        <span class="keyword">this</span>(phaser);</span><br><span class="line">        <span class="keyword">this</span>.count = count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (!phaser.isTerminated()) &#123;   <span class="comment">//只要 Phaser 没有终止, 各个线程的任务就会一直执行</span></span><br><span class="line">            <span class="keyword">int</span> phase = phaser.arriveAndAwaitAdvance();     <span class="comment">// 等待其它参与者线程到达</span></span><br><span class="line">            <span class="comment">// TODO do something</span></span><br><span class="line">            System.out.println(String.format(<span class="string">&quot;【%s】: 执行完任务，当前 count = %s&quot;</span>, Thread.currentThread().getName(), count));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2><ul><li><a href="https://www.jianshu.com/p/e5794645ca8d">JUC源码分析-Phaser</a></li><li><a href="https://segmentfault.com/a/1190000015979879">Java多线程进阶—Phaser</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
          <category> concurrent </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> concurrent </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>并发编程 - Semaphore</title>
      <link href="post/concurrent-semaphore.html"/>
      <url>post/concurrent-semaphore.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p><strong>Semaphore</strong>:</p><blockquote><p>A counting semaphore.  Conceptually, a semaphore maintains a set of permits.  Each {@link #acquire} blocks if necessary until a permit is available, and then takes it.  Each {@link #release} adds a permit,potentially releasing a blocking acquirer.However, no actual permit objects are used; the {@code Semaphore} just keeps a count of the number available and acts accordingly.</p></blockquote><p>翻译过来就是:</p><blockquote><p>一个计数信号量。概念上来说,就是一个由信号量维护的一组许可证。每个 <code>acquire()</code> 都会阻塞直到许可证可用才能使用它。每个 <code>release()</code>添加许可证,潜在地释放阻塞获取方。但是,没有使用实际的许可证对象; <code>Semaphore</code> 只保留可用数量的计数，并相应地执行。信号量通常用于限制线程数，而不是访问某些（物理或逻辑）资源</p></blockquote></div><p><code>Semaphore</code> 通常用于限制只有特定数量的线程才能访问相同的资源。</p><h2 id="sync"><a class="markdownIt-Anchor" href="#sync"></a> Sync</h2><p><code>Semaphore</code> 内部实现基于<strong>公平</strong>和<strong>非公平</strong>竞争的 <code>AQS</code> 实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** All mechanics via AbstractQueuedSynchronizer subclass */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> Sync sync;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Synchronization implementation for semaphore.  Uses AQS state</span></span><br><span class="line"><span class="comment"> * to represent permits. Subclassed into fair and nonfair</span></span><br><span class="line"><span class="comment"> * versions.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Sync</span> <span class="keyword">extends</span> <span class="title">AbstractQueuedSynchronizer</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1192457210091910933L</span>;</span><br><span class="line"></span><br><span class="line">    Sync(<span class="keyword">int</span> permits) &#123;</span><br><span class="line">        setState(permits);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">final</span> <span class="keyword">int</span> <span class="title">getPermits</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> getState();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">final</span> <span class="keyword">int</span> <span class="title">nonfairTryAcquireShared</span><span class="params">(<span class="keyword">int</span> acquires)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">            <span class="keyword">int</span> available = getState();</span><br><span class="line">            <span class="keyword">int</span> remaining = available - acquires;</span><br><span class="line">            <span class="keyword">if</span> (remaining &lt; <span class="number">0</span> ||</span><br><span class="line">                compareAndSetState(available, remaining))</span><br><span class="line">                <span class="keyword">return</span> remaining;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">tryReleaseShared</span><span class="params">(<span class="keyword">int</span> releases)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">            <span class="keyword">int</span> current = getState();</span><br><span class="line">            <span class="keyword">int</span> next = current + releases;</span><br><span class="line">            <span class="keyword">if</span> (next &lt; current) <span class="comment">// overflow</span></span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> Error(<span class="string">&quot;Maximum permit count exceeded&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (compareAndSetState(current, next))</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">final</span> <span class="keyword">void</span> <span class="title">reducePermits</span><span class="params">(<span class="keyword">int</span> reductions)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">            <span class="keyword">int</span> current = getState();</span><br><span class="line">            <span class="keyword">int</span> next = current - reductions;</span><br><span class="line">            <span class="keyword">if</span> (next &gt; current) <span class="comment">// underflow</span></span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> Error(<span class="string">&quot;Permit count underflow&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (compareAndSetState(current, next))</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">final</span> <span class="keyword">int</span> <span class="title">drainPermits</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">            <span class="keyword">int</span> current = getState();</span><br><span class="line">            <span class="keyword">if</span> (current == <span class="number">0</span> || compareAndSetState(current, <span class="number">0</span>))</span><br><span class="line">                <span class="keyword">return</span> current;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * NonFair version</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">NonfairSync</span> <span class="keyword">extends</span> <span class="title">Sync</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = -<span class="number">2694183684443567898L</span>;</span><br><span class="line"></span><br><span class="line">    NonfairSync(<span class="keyword">int</span> permits) &#123;</span><br><span class="line">        <span class="keyword">super</span>(permits);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">int</span> <span class="title">tryAcquireShared</span><span class="params">(<span class="keyword">int</span> acquires)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> nonfairTryAcquireShared(acquires);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Fair version</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">FairSync</span> <span class="keyword">extends</span> <span class="title">Sync</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">2014338818796000944L</span>;</span><br><span class="line"></span><br><span class="line">    FairSync(<span class="keyword">int</span> permits) &#123;</span><br><span class="line">        <span class="keyword">super</span>(permits);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">int</span> <span class="title">tryAcquireShared</span><span class="params">(<span class="keyword">int</span> acquires)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">            <span class="keyword">if</span> (hasQueuedPredecessors())</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">int</span> available = getState();</span><br><span class="line">            <span class="keyword">int</span> remaining = available - acquires;</span><br><span class="line">            <span class="keyword">if</span> (remaining &lt; <span class="number">0</span> ||</span><br><span class="line">                compareAndSetState(available, remaining))</span><br><span class="line">                <span class="keyword">return</span> remaining;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Semaphore</code> 只实现了通过共享模式获取锁资源。<code>Semaphore</code> 同时支持<strong>公平</strong>和<strong>非公平</strong>方式获取资源。</p><ul><li><code>Semaphore</code> 默认使用 <strong>非公平</strong> 竞争</li><li><strong>非公平</strong>竞争下,调用的是 <code>Sync</code> 的 <code>nonfairTryAcquireShared</code></li><li><strong>公平</strong>竞争下,会首先调用 <code>AQS</code> 的 <code>hasQueuedPredecessors</code> 判断是否当前线程是等待时间最长</li></ul><h2 id="核心方法"><a class="markdownIt-Anchor" href="#核心方法"></a> 核心方法</h2><h3 id="acquire"><a class="markdownIt-Anchor" href="#acquire"></a> acquire</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Acquires a permit from this semaphore, blocking until one is</span></span><br><span class="line"><span class="comment"> * available, or the thread is &#123;<span class="doctag">@linkplain</span> Thread#interrupt interrupted&#125;.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Acquires a permit, if one is available and returns immediately,</span></span><br><span class="line"><span class="comment"> * reducing the number of available permits by one.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;If no permit is available then the current thread becomes</span></span><br><span class="line"><span class="comment"> * disabled for thread scheduling purposes and lies dormant until</span></span><br><span class="line"><span class="comment"> * one of two things happens:</span></span><br><span class="line"><span class="comment"> * &lt;ul&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;Some other thread invokes the &#123;<span class="doctag">@link</span> #release&#125; method for this</span></span><br><span class="line"><span class="comment"> * semaphore and the current thread is next to be assigned a permit; or</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;Some other thread &#123;<span class="doctag">@linkplain</span> Thread#interrupt interrupts&#125;</span></span><br><span class="line"><span class="comment"> * the current thread.</span></span><br><span class="line"><span class="comment"> * &lt;/ul&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;If the current thread:</span></span><br><span class="line"><span class="comment"> * &lt;ul&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;has its interrupted status set on entry to this method; or</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;is &#123;<span class="doctag">@linkplain</span> Thread#interrupt interrupted&#125; while waiting</span></span><br><span class="line"><span class="comment"> * for a permit,</span></span><br><span class="line"><span class="comment"> * &lt;/ul&gt;</span></span><br><span class="line"><span class="comment"> * then &#123;<span class="doctag">@link</span> InterruptedException&#125; is thrown and the current thread&#x27;s</span></span><br><span class="line"><span class="comment"> * interrupted status is cleared.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> InterruptedException if the current thread is interrupted</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">acquire</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    sync.acquireSharedInterruptibly(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>从 <code>Semaphore</code> 中获取一个通行证,该方法会阻塞,知道获取到通行证或线程被中断。</p></blockquote><h3 id="acquireuninterruptibly"><a class="markdownIt-Anchor" href="#acquireuninterruptibly"></a> acquireUninterruptibly</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Acquires a permit from this semaphore, blocking until one is</span></span><br><span class="line"><span class="comment"> * available.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Acquires a permit, if one is available and returns immediately,</span></span><br><span class="line"><span class="comment"> * reducing the number of available permits by one.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;If no permit is available then the current thread becomes</span></span><br><span class="line"><span class="comment"> * disabled for thread scheduling purposes and lies dormant until</span></span><br><span class="line"><span class="comment"> * some other thread invokes the &#123;<span class="doctag">@link</span> #release&#125; method for this</span></span><br><span class="line"><span class="comment"> * semaphore and the current thread is next to be assigned a permit.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;If the current thread is &#123;<span class="doctag">@linkplain</span> Thread#interrupt interrupted&#125;</span></span><br><span class="line"><span class="comment"> * while waiting for a permit then it will continue to wait, but the</span></span><br><span class="line"><span class="comment"> * time at which the thread is assigned a permit may change compared to</span></span><br><span class="line"><span class="comment"> * the time it would have received the permit had no interruption</span></span><br><span class="line"><span class="comment"> * occurred.  When the thread does return from this method its interrupt</span></span><br><span class="line"><span class="comment"> * status will be set.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">acquireUninterruptibly</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    sync.acquireShared(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>同 <code>acquire</code>,不同点是该方法会忽略线程中断操作。</p></blockquote><h3 id="tryacquire"><a class="markdownIt-Anchor" href="#tryacquire"></a> tryAcquire</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Acquires a permit from this semaphore, only if one is available at the</span></span><br><span class="line"><span class="comment"> * time of invocation.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Acquires a permit, if one is available and returns immediately,</span></span><br><span class="line"><span class="comment"> * with the value &#123;<span class="doctag">@code</span> true&#125;,</span></span><br><span class="line"><span class="comment"> * reducing the number of available permits by one.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;If no permit is available then this method will return</span></span><br><span class="line"><span class="comment"> * immediately with the value &#123;<span class="doctag">@code</span> false&#125;.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Even when this semaphore has been set to use a</span></span><br><span class="line"><span class="comment"> * fair ordering policy, a call to &#123;<span class="doctag">@code</span> tryAcquire()&#125; &lt;em&gt;will&lt;/em&gt;</span></span><br><span class="line"><span class="comment"> * immediately acquire a permit if one is available, whether or not</span></span><br><span class="line"><span class="comment"> * other threads are currently waiting.</span></span><br><span class="line"><span class="comment"> * This &amp;quot;barging&amp;quot; behavior can be useful in certain</span></span><br><span class="line"><span class="comment"> * circumstances, even though it breaks fairness. If you want to honor</span></span><br><span class="line"><span class="comment"> * the fairness setting, then use</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@link</span> #tryAcquire(long, TimeUnit) tryAcquire(0, TimeUnit.SECONDS) &#125;</span></span><br><span class="line"><span class="comment"> * which is almost equivalent (it also detects interruption).</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="doctag">@code</span> true&#125; if a permit was acquired and &#123;<span class="doctag">@code</span> false&#125;</span></span><br><span class="line"><span class="comment"> *         otherwise</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">tryAcquire</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> sync.nonfairTryAcquireShared(<span class="number">1</span>) &gt;= <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Acquires a permit from this semaphore, if one becomes available</span></span><br><span class="line"><span class="comment"> * within the given waiting time and the current thread has not</span></span><br><span class="line"><span class="comment"> * been &#123;<span class="doctag">@linkplain</span> Thread#interrupt interrupted&#125;.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Acquires a permit, if one is available and returns immediately,</span></span><br><span class="line"><span class="comment"> * with the value &#123;<span class="doctag">@code</span> true&#125;,</span></span><br><span class="line"><span class="comment"> * reducing the number of available permits by one.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;If no permit is available then the current thread becomes</span></span><br><span class="line"><span class="comment"> * disabled for thread scheduling purposes and lies dormant until</span></span><br><span class="line"><span class="comment"> * one of three things happens:</span></span><br><span class="line"><span class="comment"> * &lt;ul&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;Some other thread invokes the &#123;<span class="doctag">@link</span> #release&#125; method for this</span></span><br><span class="line"><span class="comment"> * semaphore and the current thread is next to be assigned a permit; or</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;Some other thread &#123;<span class="doctag">@linkplain</span> Thread#interrupt interrupts&#125;</span></span><br><span class="line"><span class="comment"> * the current thread; or</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;The specified waiting time elapses.</span></span><br><span class="line"><span class="comment"> * &lt;/ul&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;If a permit is acquired then the value &#123;<span class="doctag">@code</span> true&#125; is returned.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;If the current thread:</span></span><br><span class="line"><span class="comment"> * &lt;ul&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;has its interrupted status set on entry to this method; or</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;is &#123;<span class="doctag">@linkplain</span> Thread#interrupt interrupted&#125; while waiting</span></span><br><span class="line"><span class="comment"> * to acquire a permit,</span></span><br><span class="line"><span class="comment"> * &lt;/ul&gt;</span></span><br><span class="line"><span class="comment"> * then &#123;<span class="doctag">@link</span> InterruptedException&#125; is thrown and the current thread&#x27;s</span></span><br><span class="line"><span class="comment"> * interrupted status is cleared.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;If the specified waiting time elapses then the value &#123;<span class="doctag">@code</span> false&#125;</span></span><br><span class="line"><span class="comment"> * is returned.  If the time is less than or equal to zero, the method</span></span><br><span class="line"><span class="comment"> * will not wait at all.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> timeout the maximum time to wait for a permit</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> unit the time unit of the &#123;<span class="doctag">@code</span> timeout&#125; argument</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="doctag">@code</span> true&#125; if a permit was acquired and &#123;<span class="doctag">@code</span> false&#125;</span></span><br><span class="line"><span class="comment"> *         if the waiting time elapsed before a permit was acquired</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> InterruptedException if the current thread is interrupted</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">tryAcquire</span><span class="params">(<span class="keyword">long</span> timeout, TimeUnit unit)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> sync.tryAcquireSharedNanos(<span class="number">1</span>, unit.toNanos(timeout));</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>从 <code>Semaphore</code> 中获取一个通行证,该方法会立即返回是否成功获取到通信证。同时支持超时获取,若超时仍未获取到通行证会返回 <code>false</code>.</p></blockquote><h3 id="release"><a class="markdownIt-Anchor" href="#release"></a> release</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Releases the given number of permits, returning them to the semaphore.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Releases the given number of permits, increasing the number of</span></span><br><span class="line"><span class="comment"> * available permits by that amount.</span></span><br><span class="line"><span class="comment"> * If any threads are trying to acquire permits, then one</span></span><br><span class="line"><span class="comment"> * is selected and given the permits that were just released.</span></span><br><span class="line"><span class="comment"> * If the number of available permits satisfies that thread&#x27;s request</span></span><br><span class="line"><span class="comment"> * then that thread is (re)enabled for thread scheduling purposes;</span></span><br><span class="line"><span class="comment"> * otherwise the thread will wait until sufficient permits are available.</span></span><br><span class="line"><span class="comment"> * If there are still permits available</span></span><br><span class="line"><span class="comment"> * after this thread&#x27;s request has been satisfied, then those permits</span></span><br><span class="line"><span class="comment"> * are assigned in turn to other threads trying to acquire permits.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;There is no requirement that a thread that releases a permit must</span></span><br><span class="line"><span class="comment"> * have acquired that permit by calling &#123;<span class="doctag">@link</span> Semaphore#acquire acquire&#125;.</span></span><br><span class="line"><span class="comment"> * Correct usage of a semaphore is established by programming convention</span></span><br><span class="line"><span class="comment"> * in the application.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> permits the number of permits to release</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> IllegalArgumentException if &#123;<span class="doctag">@code</span> permits&#125; is negative</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">release</span><span class="params">(<span class="keyword">int</span> permits)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (permits &lt; <span class="number">0</span>) <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException();</span><br><span class="line">    sync.releaseShared(permits);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>release</code> 用于释放通行证。释放令牌的过程也就是通过<code>CAS</code> 把 <code>AQS</code> 的 <code>state</code> <strong>+1</strong></p></blockquote><h3 id="availablepermits"><a class="markdownIt-Anchor" href="#availablepermits"></a> availablePermits</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the current number of permits available in this semaphore.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;This method is typically used for debugging and testing purposes.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> the number of permits available in this semaphore</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">availablePermits</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> sync.getPermits();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>该方法会返回当前 <code>Semaphore</code> 中可用的通行证数量</p></blockquote><h3 id="drainpermits"><a class="markdownIt-Anchor" href="#drainpermits"></a> drainPermits</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Acquires and returns all permits that are immediately available.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> the number of permits acquired</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">drainPermits</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> sync.drainPermits();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>该方法会清空令牌把可用令牌数置为0，返回清空令牌的数量。</p></blockquote><h2 id="示例代码"><a class="markdownIt-Anchor" href="#示例代码"></a> 示例代码</h2><ol><li>停车场容纳总停车量<strong>10</strong>。</li><li>当一辆车进入停车场后，显示牌的剩余车位数响应的<strong>减1</strong>.</li><li>每有一辆车驶出停车场后，显示牌的剩余车位数响应的<strong>加1</strong>。</li><li>停车场剩余车位不足时，车辆只能在外面等待。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 停车场同时容纳的车辆 10</span></span><br><span class="line">    Semaphore semaphore = <span class="keyword">new</span> Semaphore(<span class="number">10</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">            String threadName = Thread.currentThread().getName();</span><br><span class="line">            System.out.println(String.format(<span class="string">&quot;====【%s】来到停车场===&quot;</span>, threadName));</span><br><span class="line">            <span class="keyword">if</span> (semaphore.availablePermits() == <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;车位不足，请耐心等待&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                semaphore.acquire();<span class="comment">// 获取令牌尝试进入停车场</span></span><br><span class="line">                System.out.println(String.format(<span class="string">&quot;【%s】成功进入停车场&quot;</span>, threadName));</span><br><span class="line">                Thread.sleep(<span class="keyword">new</span> Random().nextInt(<span class="number">10000</span>));<span class="comment">// 模拟车辆在停车场停留的时间</span></span><br><span class="line">                System.out.println(String.format(<span class="string">&quot;【%s】驶出停车场&quot;</span>, threadName));</span><br><span class="line">                semaphore.release();<span class="comment">//释放令牌，腾出停车场车位</span></span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, String.valueOf(i + <span class="number">1</span>)).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2><p><a href="https://zhuanlan.zhihu.com/p/98593407">Semaphore 使用及原理</a></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
          <category> concurrent </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> concurrent </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>并发编程 - CyclicBarrier</title>
      <link href="post/concurrent-cyclicbarrier.html"/>
      <url>post/concurrent-cyclicbarrier.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p><strong>CyclicBarrier</strong>:</p><p><code>CyclicBarrier</code> 是一个同步辅助类，允许一组线程互相等待，直到到达某个公共屏障点 (<strong>common barrier point</strong>)。如果一个程序中有固定的线程数，并且线程之间需要相互等待，这时候 <code>CyclicBarrier</code> 是一个很好的选择。之所以叫它 <code>cyclic</code>，是因为在释放等待线程之后，它可以被重用。还是那句话，开始之前你需要先了解 <code>AQS</code> 的实现机制。</p></div><p><code>CountDownLatch</code> 和 <code>CyclicBarrier</code> 的区别：</p><ul><li><code>CountDownLatch</code> 的作用是允许<strong>1</strong>或<strong>N</strong>个线程等待其他线程完成执行；而 <code>CyclicBarrier</code> 则是允许<strong>N</strong>个线程相互等待。</li><li><code>CountDownLatch</code> 的计数器无法被重置；<code>CyclicBarrier</code> 的计数器可以被重置后使用，因此它被称为是循环的 <code>barrier</code>。</li></ul><h2 id="核心属性"><a class="markdownIt-Anchor" href="#核心属性"></a> 核心属性</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Each use of the barrier is represented as a generation instance.</span></span><br><span class="line"><span class="comment"> * The generation changes whenever the barrier is tripped, or</span></span><br><span class="line"><span class="comment"> * is reset. There can be many generations associated with threads</span></span><br><span class="line"><span class="comment"> * using the barrier - due to the non-deterministic way the lock</span></span><br><span class="line"><span class="comment"> * may be allocated to waiting threads - but only one of these</span></span><br><span class="line"><span class="comment"> * can be active at a time (the one to which &#123;<span class="doctag">@code</span> count&#125; applies)</span></span><br><span class="line"><span class="comment"> * and all the rest are either broken or tripped.</span></span><br><span class="line"><span class="comment"> * There need not be an active generation if there has been a break</span></span><br><span class="line"><span class="comment"> * but no subsequent reset.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Generation</span> </span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span> broken = <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** The lock for guarding barrier entry */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> ReentrantLock lock = <span class="keyword">new</span> ReentrantLock();</span><br><span class="line"><span class="comment">/** Condition to wait on until tripped */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> Condition trip = lock.newCondition();</span><br><span class="line"><span class="comment">/** The number of parties */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> parties;</span><br><span class="line"><span class="comment">/* The command to run when tripped */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> Runnable barrierCommand;</span><br><span class="line"><span class="comment">/** The current generation */</span></span><br><span class="line"><span class="keyword">private</span> Generation generation = <span class="keyword">new</span> Generation();</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Number of parties still waiting. Counts down from parties to 0</span></span><br><span class="line"><span class="comment"> * on each generation.  It is reset to parties on each new</span></span><br><span class="line"><span class="comment"> * generation or when broken.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> count;</span><br></pre></td></tr></table></figure><ol><li><strong>lock</strong>: 守护 <code>barrier</code> 入口的锁, 关于 <code>ReentrantLock</code> 请查看 <a href="/post/concurrent-reentrantLock.html">并发编程 - ReentrantLock</a></li><li><strong>trip</strong>: 等待条件，直到所有线程到达 <code>barrier</code></li><li><strong>parties</strong>: 要屏障的线程数</li><li><strong>barrierCommand</strong>: 当线程都到达 <code>barrier</code>，运行的 <code>barrierCommand</code>。<code>CyclicBarrier</code> 的另一个特性是在所有参与线程到达 <code>barrier</code> 触发一个自定义函数，这个函数就是 <code>barrierCommand</code>，在 <code>CyclicBarrier</code> 的构造函数中初始化。</li><li><strong>generation</strong>: 每个使用中的 <code>barrier</code> 都表示为一个 <code>generation</code> 实例。当 <code>barrier</code> 触发 <code>trip</code> 条件或重置时 <code>generation</code> 随之改变。使用 <code>barrier</code> 时有很多 <code>generation</code> 与线程关联，由于不确定性的方式，锁可能分配给等待的线程。但是在同一时间只有一个是活跃的 <code>generation</code> (通过<strong>count</strong>变量确定)，并且其余的要么被销毁，要么被 <code>trip</code> 条件等待。如果有一个中断，但没有随后的重置，就不需要有活跃的 <code>generation</code>。<code>CyclicBarrier</code> 的可重用特性就是通过 <code>Generation</code> 来实现，每一次触发 <code>tripped</code> 都会 <code>new</code> 一个新的 <code>Generation</code></li><li><strong>count</strong>: 等待到达 <code>barrier</code> 的参与线程数量，<code>count=0 -&gt; tripped</code></li></ol><h2 id="构造函数"><a class="markdownIt-Anchor" href="#构造函数"></a> 构造函数</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Creates a new &#123;<span class="doctag">@code</span> CyclicBarrier&#125; that will trip when the</span></span><br><span class="line"><span class="comment"> * given number of parties (threads) are waiting upon it, and which</span></span><br><span class="line"><span class="comment"> * will execute the given barrier action when the barrier is tripped,</span></span><br><span class="line"><span class="comment"> * performed by the last thread entering the barrier.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> parties the number of threads that must invoke &#123;<span class="doctag">@link</span> #await&#125;</span></span><br><span class="line"><span class="comment"> *        before the barrier is tripped</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> barrierAction the command to execute when the barrier is</span></span><br><span class="line"><span class="comment"> *        tripped, or &#123;<span class="doctag">@code</span> null&#125; if there is no action</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> IllegalArgumentException if &#123;<span class="doctag">@code</span> parties&#125; is less than 1</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">CyclicBarrier</span><span class="params">(<span class="keyword">int</span> parties, Runnable barrierAction)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (parties &lt;= <span class="number">0</span>) <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException();</span><br><span class="line">    <span class="keyword">this</span>.parties = parties;</span><br><span class="line">    <span class="keyword">this</span>.count = parties;</span><br><span class="line">    <span class="keyword">this</span>.barrierCommand = barrierAction;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Creates a new &#123;<span class="doctag">@code</span> CyclicBarrier&#125; that will trip when the</span></span><br><span class="line"><span class="comment"> * given number of parties (threads) are waiting upon it, and</span></span><br><span class="line"><span class="comment"> * does not perform a predefined action when the barrier is tripped.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> parties the number of threads that must invoke &#123;<span class="doctag">@link</span> #await&#125;</span></span><br><span class="line"><span class="comment"> *        before the barrier is tripped</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> IllegalArgumentException if &#123;<span class="doctag">@code</span> parties&#125; is less than 1</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">CyclicBarrier</span><span class="params">(<span class="keyword">int</span> parties)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>(parties, <span class="keyword">null</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>parties</strong> 指定执行的线程数量,在 <code>barrier</code> 被 <code>trip</code> 之前必要有 <code>parties</code> 个线程调用 <code>await</code> 方法</li><li><strong>barrierAction</strong> 当 <code>barrier</code> 被 <code>trip</code> 时会执行该方法,可以为空</li></ul><h2 id="核心方法"><a class="markdownIt-Anchor" href="#核心方法"></a> 核心方法</h2><h3 id="await"><a class="markdownIt-Anchor" href="#await"></a> await</h3><p><code>await</code> 是 <code>CyclicBarrier</code> 的核心方法,执行 <code>await</code> 会调用内部方法 <code>dowait</code>,<code>await</code> 支持超时响应,当超过指定时间还未达到 <code>barrier</code>,就会抛出 <code>TimeoutException</code>.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">await</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException, BrokenBarrierException </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> dowait(<span class="keyword">false</span>, <span class="number">0L</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (TimeoutException toe) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> Error(toe); <span class="comment">// cannot happen</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">await</span><span class="params">(<span class="keyword">long</span> timeout, TimeUnit unit)</span></span></span><br><span class="line"><span class="function">    <span class="keyword">throws</span> InterruptedException,</span></span><br><span class="line"><span class="function">            BrokenBarrierException,</span></span><br><span class="line"><span class="function">            TimeoutException </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> dowait(<span class="keyword">true</span>, unit.toNanos(timeout));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>await</code> 的主要逻辑在 <code>dowait</code> 方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Main barrier code, covering the various policies.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">dowait</span><span class="params">(<span class="keyword">boolean</span> timed, <span class="keyword">long</span> nanos)</span> <span class="keyword">throws</span> InterruptedException, BrokenBarrierException, TimeoutException </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> ReentrantLock lock = <span class="keyword">this</span>.lock;</span><br><span class="line">    lock.lock();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">final</span> Generation g = generation;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (g.broken)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BrokenBarrierException();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (Thread.interrupted()) &#123;</span><br><span class="line">            breakBarrier();</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> InterruptedException();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> index = --count;</span><br><span class="line">        <span class="keyword">if</span> (index == <span class="number">0</span>) &#123;  <span class="comment">// tripped</span></span><br><span class="line">            <span class="keyword">boolean</span> ranAction = <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">final</span> Runnable command = barrierCommand;</span><br><span class="line">                <span class="keyword">if</span> (command != <span class="keyword">null</span>)</span><br><span class="line">                    command.run();</span><br><span class="line">                ranAction = <span class="keyword">true</span>;</span><br><span class="line">                nextGeneration();</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (!ranAction)</span><br><span class="line">                    breakBarrier();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// loop until tripped, broken, interrupted, or timed out</span></span><br><span class="line">        <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (!timed)</span><br><span class="line">                    trip.await();</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (nanos &gt; <span class="number">0L</span>)</span><br><span class="line">                    nanos = trip.awaitNanos(nanos);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException ie) &#123;</span><br><span class="line">                <span class="keyword">if</span> (g == generation &amp;&amp; ! g.broken) &#123;</span><br><span class="line">                    breakBarrier();</span><br><span class="line">                    <span class="keyword">throw</span> ie;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">// We&#x27;re about to finish waiting even if we had not</span></span><br><span class="line">                    <span class="comment">// been interrupted, so this interrupt is deemed to</span></span><br><span class="line">                    <span class="comment">// &quot;belong&quot; to subsequent execution.</span></span><br><span class="line">                    Thread.currentThread().interrupt();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (g.broken)</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> BrokenBarrierException();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (g != generation)</span><br><span class="line">                <span class="keyword">return</span> index;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (timed &amp;&amp; nanos &lt;= <span class="number">0L</span>) &#123;</span><br><span class="line">                breakBarrier();</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> TimeoutException();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        lock.unlock();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li><code>lock</code> 获取互斥锁,<code>lock</code> 操作会一直等待直到获取到锁资源</li><li>判断 <code>barrier</code> 是否已经 <code>broken</code>,如果 <code>broken</code> 就抛出 <code>BrokenBarrierException</code> 异常</li><li>判断线程是否已经中断,如果已经中断就抛出 <code>InterruptedException</code> 异常</li><li><code>count</code> 减 <strong>1</strong>, <code>count</code> 表示当前还未到达 <code>barrier</code> 的线程数量</li><li>如果 <code>count</code> 为 <strong>0</strong>, 表示所有线程都已到达 <code>barrier</code>,就是执行 <code>barrierCommand</code>,并重置 <code>Generation</code> 返回 <strong>0</strong></li><li>否则就会进入循环,直到 <code>trip</code>、<code>broken</code>、中断 或者超时跳出循环</li></ol><blockquote><p><code>nextGenerateion</code> 方法更新障碍的状态并唤醒所有线程。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Updates state on barrier trip and wakes up everyone.</span></span><br><span class="line"><span class="comment"> * Called only while holding lock.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">nextGeneration</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// signal completion of last generation</span></span><br><span class="line">    trip.signalAll();</span><br><span class="line">    <span class="comment">// set up next generation</span></span><br><span class="line">    count = parties;</span><br><span class="line">    generation = <span class="keyword">new</span> Generation();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>breakBarrier</code> 方法设置当前 <code>barrier</code> 的 <code>Genneration</code> 为 <code>broken</code> 并唤醒所有线程</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Sets current barrier generation as broken and wakes up everyone.</span></span><br><span class="line"><span class="comment"> * Called only while holding lock.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">breakBarrier</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    generation.broken = <span class="keyword">true</span>;</span><br><span class="line">    count = parties;</span><br><span class="line">    trip.signalAll();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="reset"><a class="markdownIt-Anchor" href="#reset"></a> reset</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Resets the barrier to its initial state.  If any parties are</span></span><br><span class="line"><span class="comment"> * currently waiting at the barrier, they will return with a</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@link</span> BrokenBarrierException&#125;. Note that resets &lt;em&gt;after&lt;/em&gt;</span></span><br><span class="line"><span class="comment"> * a breakage has occurred for other reasons can be complicated to</span></span><br><span class="line"><span class="comment"> * carry out; threads need to re-synchronize in some other way,</span></span><br><span class="line"><span class="comment"> * and choose one to perform the reset.  It may be preferable to</span></span><br><span class="line"><span class="comment"> * instead create a new barrier for subsequent use.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">reset</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> ReentrantLock lock = <span class="keyword">this</span>.lock;</span><br><span class="line">    lock.lock();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        breakBarrier();   <span class="comment">// break the current generation</span></span><br><span class="line">        nextGeneration(); <span class="comment">// start a new generation</span></span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        lock.unlock();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法就是与 <code>CountDownLatch</code> 区别的核心, <code>CountDownLatch</code> 只能使用一次,而 <code>CyclicBarrier</code> 可以无限 <code>reset</code> 重置 <code>barrier</code> 的状态,循环(<strong>Cyclic</strong>)使用。</p><h2 id="示例"><a class="markdownIt-Anchor" href="#示例"></a> 示例</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    CyclicBarrier cyclicBarrier = <span class="keyword">new</span> CyclicBarrier(<span class="number">10</span>, () -&gt; System.out.println(<span class="string">&quot;人都到齐了。&quot;</span>));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">// 假设每个人达到办公室的时间不一致</span></span><br><span class="line">                Thread.sleep((<span class="keyword">long</span>) (Math.random() * <span class="number">10_000</span>));</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(String.format(<span class="string">&quot;第【%s】个人到达会议室&quot;</span>,Thread.currentThread().getName()));</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                cyclicBarrier.await(<span class="number">1</span>, TimeUnit.SECONDS);</span><br><span class="line">                System.out.println(String.format(<span class="string">&quot;【%s】开始开会&quot;</span>,Thread.currentThread().getName()));</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException | BrokenBarrierException | TimeoutException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, String.valueOf(i + <span class="number">1</span>)).start();</span><br><span class="line">    &#125;</span><br><span class="line">    cyclicBarrier.reset();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2><p><a href="https://www.jianshu.com/p/1693b305326b">JUC源码分析-CyclicBarrier</a></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
          <category> concurrent </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> concurrent </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>并发编程 - CountDownLatch</title>
      <link href="post/concurrent-countdownlatch.html"/>
      <url>post/concurrent-countdownlatch.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p><strong>CountDownLatch</strong>:</p><ul><li><code>CountDownLatch</code> 是在 <code>java1.5</code> 被引入，存在于 <code>java.util.concurrent</code> 包下。跟它一起被引入的工具类还有 <code>CyclicBarrier</code>、<code>Semaphore</code>、<code>ConcurrentHashMap</code> 和 <code>BlockingQueue</code>。</li><li><code>CountDownLatch</code> 这个类使一个线程等待其他线程各自执行完毕后再执行。是通过一个计数器来实现的，计数器的初始值是线程的数量。每当一个线程执行完毕后，计数器的值就 <code>-1</code>，当计数器的值为0时，表示所有线程都执行完毕，然后在闭锁上等待的线程就可以恢复工作了。</li></ul></div><h2 id="sync"><a class="markdownIt-Anchor" href="#sync"></a> Sync</h2><p><code>Sync</code> 源码比较简单,内部实现通过 <code>AQS</code> 同步器,下面是 <code>CountDownLatch</code> 的 <code>AQS</code> 实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Synchronization control For CountDownLatch.</span></span><br><span class="line"><span class="comment"> * Uses AQS state to represent count.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Sync</span> <span class="keyword">extends</span> <span class="title">AbstractQueuedSynchronizer</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">4982264981922014374L</span>;</span><br><span class="line"></span><br><span class="line">    Sync(<span class="keyword">int</span> count) &#123;</span><br><span class="line">        setState(count);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">getCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> getState();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">int</span> <span class="title">tryAcquireShared</span><span class="params">(<span class="keyword">int</span> acquires)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (getState() == <span class="number">0</span>) ? <span class="number">1</span> : -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">tryReleaseShared</span><span class="params">(<span class="keyword">int</span> releases)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Decrement count; signal when transition to zero</span></span><br><span class="line">        <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">            <span class="keyword">int</span> c = getState();</span><br><span class="line">            <span class="keyword">if</span> (c == <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">int</span> nextc = c-<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (compareAndSetState(c, nextc))</span><br><span class="line">                <span class="keyword">return</span> nextc == <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li><code>tryAcquireShared</code> 返回当前状态是否为 <code>0</code> (如果状态为 <code>0</code> 表示所有线程都已结束任务)</li><li><code>tryReleaseShared</code> 当前状态 <code>-1</code> (每一个线程结束任务,状态 <code>-1</code>)</li></ol><blockquote><p><code>CountDownLatch</code> 有两个核心方法 <code>countDown</code> 和 <code>await</code></p></blockquote><h2 id="countdown"><a class="markdownIt-Anchor" href="#countdown"></a> countDown</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Decrements the count of the latch, releasing all waiting threads if</span></span><br><span class="line"><span class="comment"> * the count reaches zero.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;If the current count is greater than zero then it is decremented.</span></span><br><span class="line"><span class="comment"> * If the new count is zero then all waiting threads are re-enabled for</span></span><br><span class="line"><span class="comment"> * thread scheduling purposes.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;If the current count equals zero then nothing happens.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">countDown</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    sync.releaseShared(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>每个线程结束任务后调用 <code>countDown</code> 将状态 <code>-1</code></p><h2 id="await"><a class="markdownIt-Anchor" href="#await"></a> await</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Causes the current thread to wait until the latch has counted down to</span></span><br><span class="line"><span class="comment"> * zero, unless the thread is &#123;<span class="doctag">@linkplain</span> Thread#interrupt interrupted&#125;.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;If the current count is zero then this method returns immediately.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;If the current count is greater than zero then the current</span></span><br><span class="line"><span class="comment"> * thread becomes disabled for thread scheduling purposes and lies</span></span><br><span class="line"><span class="comment"> * dormant until one of two things happen:</span></span><br><span class="line"><span class="comment"> * &lt;ul&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;The count reaches zero due to invocations of the</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@link</span> #countDown&#125; method; or</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;Some other thread &#123;<span class="doctag">@linkplain</span> Thread#interrupt interrupts&#125;</span></span><br><span class="line"><span class="comment"> * the current thread.</span></span><br><span class="line"><span class="comment"> * &lt;/ul&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;If the current thread:</span></span><br><span class="line"><span class="comment"> * &lt;ul&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;has its interrupted status set on entry to this method; or</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;is &#123;<span class="doctag">@linkplain</span> Thread#interrupt interrupted&#125; while waiting,</span></span><br><span class="line"><span class="comment"> * &lt;/ul&gt;</span></span><br><span class="line"><span class="comment"> * then &#123;<span class="doctag">@link</span> InterruptedException&#125; is thrown and the current thread&#x27;s</span></span><br><span class="line"><span class="comment"> * interrupted status is cleared.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> InterruptedException if the current thread is interrupted</span></span><br><span class="line"><span class="comment"> *         while waiting</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">await</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    sync.acquireSharedInterruptibly(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Causes the current thread to wait until the latch has counted down to</span></span><br><span class="line"><span class="comment"> * zero, unless the thread is &#123;<span class="doctag">@linkplain</span> Thread#interrupt interrupted&#125;,</span></span><br><span class="line"><span class="comment"> * or the specified waiting time elapses.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;If the current count is zero then this method returns immediately</span></span><br><span class="line"><span class="comment"> * with the value &#123;<span class="doctag">@code</span> true&#125;.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;If the current count is greater than zero then the current</span></span><br><span class="line"><span class="comment"> * thread becomes disabled for thread scheduling purposes and lies</span></span><br><span class="line"><span class="comment"> * dormant until one of three things happen:</span></span><br><span class="line"><span class="comment"> * &lt;ul&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;The count reaches zero due to invocations of the</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@link</span> #countDown&#125; method; or</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;Some other thread &#123;<span class="doctag">@linkplain</span> Thread#interrupt interrupts&#125;</span></span><br><span class="line"><span class="comment"> * the current thread; or</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;The specified waiting time elapses.</span></span><br><span class="line"><span class="comment"> * &lt;/ul&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;If the count reaches zero then the method returns with the</span></span><br><span class="line"><span class="comment"> * value &#123;<span class="doctag">@code</span> true&#125;.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;If the current thread:</span></span><br><span class="line"><span class="comment"> * &lt;ul&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;has its interrupted status set on entry to this method; or</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;is &#123;<span class="doctag">@linkplain</span> Thread#interrupt interrupted&#125; while waiting,</span></span><br><span class="line"><span class="comment"> * &lt;/ul&gt;</span></span><br><span class="line"><span class="comment"> * then &#123;<span class="doctag">@link</span> InterruptedException&#125; is thrown and the current thread&#x27;s</span></span><br><span class="line"><span class="comment"> * interrupted status is cleared.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;If the specified waiting time elapses then the value &#123;<span class="doctag">@code</span> false&#125;</span></span><br><span class="line"><span class="comment"> * is returned.  If the time is less than or equal to zero, the method</span></span><br><span class="line"><span class="comment"> * will not wait at all.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> timeout the maximum time to wait</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> unit the time unit of the &#123;<span class="doctag">@code</span> timeout&#125; argument</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="doctag">@code</span> true&#125; if the count reached zero and &#123;<span class="doctag">@code</span> false&#125;</span></span><br><span class="line"><span class="comment"> *         if the waiting time elapsed before the count reached zero</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> InterruptedException if the current thread is interrupted</span></span><br><span class="line"><span class="comment"> *         while waiting</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">await</span><span class="params">(<span class="keyword">long</span> timeout, TimeUnit unit)</span></span></span><br><span class="line"><span class="function">    <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> sync.tryAcquireSharedNanos(<span class="number">1</span>, unit.toNanos(timeout));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>await</code> 方法等到所有线程执行完毕返回,也可以设置超时时间,超时也会返回。</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
          <category> concurrent </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> concurrent </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>并发编程 - ReentrantReadWriteLock</title>
      <link href="post/concurrent-reentrantreadwritelock.html"/>
      <url>post/concurrent-reentrantreadwritelock.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p><strong>ReentrantReadWriteLock</strong>:</p><p><code>ReentrantReadWriteLock</code> 是 <code>Lock</code> 的另一种实现方式，我们已经知道了 <code>ReentrantLock</code> 是一个排他锁，同一时间只允许一个线程&gt; 访问，而 <code>ReentrantReadWriteLock</code> 允许多个读线程同时访问，但不允许写线程和读线程、写线程和写线程同时访问。相对于排他锁，提&gt; 高了并发性。在实际应用中，大部分情况下对共享数据（如缓存）的访问都是读操作远多于写操作，这时 <code>ReentrantReadWriteLock</code> 能够&gt; 提供比排他锁更好的并发性和吞吐量。</p></div><h2 id="reentrantreadwritelock"><a class="markdownIt-Anchor" href="#reentrantreadwritelock"></a> ReentrantReadWriteLock</h2><p>​ 读写锁内部维护了两个锁，一个用于读操作，一个用于写操作。所有 <code>ReadWriteLock</code> 实现都必须保证 <code>writeLock</code> 操作的内存同步效果也要保持与相关 <code>readLock</code> 的联系。也就是说，成功获取读锁的线程会看到写入锁之前版本所做的所有更新。</p><ol><li>读写锁支持公平锁和非公平锁</li><li>读写锁是可重入锁,写锁可以继续获取写锁,也可以再获取读锁；但是读锁只能再获取读锁，不能再获取写锁</li><li>写锁可以降级到读锁–先获取读锁再释放写锁。但不支持从读锁升级到写锁</li><li>读锁和写锁都支持锁获取期间的中断</li><li>写锁支持 <code>Condition</code>,而读锁不支持</li></ol><h3 id="属性"><a class="markdownIt-Anchor" href="#属性"></a> 属性</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** Inner class providing readlock */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> ReentrantReadWriteLock.ReadLock readerLock;</span><br><span class="line"><span class="comment">/** Inner class providing writelock */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> ReentrantReadWriteLock.WriteLock writerLock;</span><br><span class="line"><span class="comment">/** Performs all synchronization mechanics */</span></span><br><span class="line"><span class="keyword">final</span> Sync sync;</span><br></pre></td></tr></table></figure><p><code>readerLock</code> 读锁、<code>writerLock</code> 写锁和 <code>Sync</code> 基于 <code>AQS</code> 的同步队列</p><h3 id="sync"><a class="markdownIt-Anchor" href="#sync"></a> Sync</h3><p><code>ReentrantReadWriteLock</code> 提供了两个 <code>Sync</code> 实现,分别是 <code>FairSync</code>(公平锁) 和 <code>NonfairSync</code> (非公平锁)</p><h4 id="readershouldblock"><a class="markdownIt-Anchor" href="#readershouldblock"></a> readerShouldBlock</h4><p><code>readerShouldBlock</code> 方法用于判断当前读操作是否应该被阻塞。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 公平锁</span></span><br><span class="line"><span class="function"><span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">readerShouldBlock</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> hasQueuedPredecessors();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 非公平锁</span></span><br><span class="line"><span class="function"><span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">readerShouldBlock</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">/* As a heuristic to avoid indefinite writer starvation,</span></span><br><span class="line"><span class="comment">     * block if the thread that momentarily appears to be head</span></span><br><span class="line"><span class="comment">     * of queue, if one exists, is a waiting writer.  This is</span></span><br><span class="line"><span class="comment">     * only a probabilistic effect since a new reader will not</span></span><br><span class="line"><span class="comment">     * block if there is a waiting writer behind other enabled</span></span><br><span class="line"><span class="comment">     * readers that have not yet drained from the queue.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">return</span> apparentlyFirstQueuedIsExclusive();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>FairSync</code>下判断当前读操作是否应该被阻塞,调用的是 <code>hasQueuedPredecessors</code>,返回当前节点是否为头节点。</p><p><code>NonfairSync</code> 下的实现是调用 <code>apparentlyFirstQueuedIsExclusive</code> 方法,判断头节点的后继节点是否为共享模式(读)</p><blockquote><p>As a heuristic to avoid indefinite writer starvation,block if the thread that momentarily appears to be head of queue, if one exists, is a waiting writer.  This is only a probabilistic effect since a new reader will not block if there is a waiting writer behind other enabled readers that have not yet drained from the queue.</p></blockquote><p>根据官方注释的翻译:</p><blockquote><p>这只是一种启发式地避免写锁无限等待的做法，它在遇到同步队列的 <code>head</code> 后继为写锁节点时，会让 <code>readerShouldBlock</code> 返回 <code>true</code>代表新来的读&gt; 锁（new reader）需要阻塞等待这个 <code>head</code> 后继。但只是一定概率下能起到作用，如果同步队列的 <code>head</code> 后继是一个读锁，之后才是写锁的话，&gt; <code>readerShouldBlock</code> 就肯定会返回 <code>false</code> 了。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns &#123;<span class="doctag">@code</span> true&#125; if the apparent first queued thread, if one</span></span><br><span class="line"><span class="comment"> * exists, is waiting in exclusive mode.  If this method returns</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@code</span> true&#125;, and the current thread is attempting to acquire in</span></span><br><span class="line"><span class="comment"> * shared mode (that is, this method is invoked from &#123;<span class="doctag">@link</span></span></span><br><span class="line"><span class="comment"> * #tryAcquireShared&#125;) then it is guaranteed that the current thread</span></span><br><span class="line"><span class="comment"> * is not the first queued thread.  Used only as a heuristic in</span></span><br><span class="line"><span class="comment"> * ReentrantReadWriteLock.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">apparentlyFirstQueuedIsExclusive</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Node h, s;</span><br><span class="line">    <span class="keyword">return</span> (h = head) != <span class="keyword">null</span> &amp;&amp;</span><br><span class="line">        (s = h.next)  != <span class="keyword">null</span> &amp;&amp;</span><br><span class="line">        !s.isShared()         &amp;&amp;</span><br><span class="line">        s.thread != <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里就是判断头节点的后继节点是否为非共享模式,且节点绑定的线程不为空。<br />也就是说头节点的后继节点如果不是共享模式就返回 <code>true</code>,表示当前读操作应该被阻塞。</p><p><code>new reader</code> 意思就是，线程第一次来尝试获取读锁。</p><div class="note info flat"><p><strong>写锁无限等待 indefinite writer starvation</strong></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200626092842656.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FubGlhbjUyMw==,size_16,color_FFFFFF,t_70" alt="" /></p><p>考虑 <code>readerShouldBlock</code> 的现有实现的话，写锁节点只需要等待线程 <code>AB</code> 释放读锁后，就可以获得到写锁了。而线程 <code>CDE</code> 作为 <code>new reader</code>，不会去尝试获取读锁，而是将自己包装成读锁节点排在写锁节点的后面。这个具体的流程，请查看 <code>ReentrantReadWriteLock</code> 源码解析的读锁的获取章节内容里面对 <code>fullTryAcquireShared</code> 函数的讲解，我们只需要知道 <code>readerShouldBlock</code> 返回了 <code>true</code>，代表读锁获取应该阻塞，如果这个读锁是个 <code>new reader</code>。</p></div><div class="note info flat"><p><strong>heuristic启发式地防止new reader</strong></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200626093736980.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FubGlhbjUyMw==,size_16,color_FFFFFF,t_70" alt="" /></p><p>但尽管 <code>readerShouldBlock</code> 是这样的非公平实现，也无法防止上图第二种情况的 <code>new reader</code> 的获取读锁动作，所以说这只是一定概率下防止 <code>new reader</code> 获取读锁，但有概率的防止总比啥都不做强。</p></div><h4 id="writershouldblock"><a class="markdownIt-Anchor" href="#writershouldblock"></a> writerShouldBlock</h4><p><code>writerShouldBlock</code> 方法用于判断当前写操作是否应该被阻塞。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 公平锁</span></span><br><span class="line"><span class="function"><span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">writerShouldBlock</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> hasQueuedPredecessors();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 非公平锁</span></span><br><span class="line"><span class="function"><span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">writerShouldBlock</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>; <span class="comment">// writers can always barge</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在非公平锁中直接返回 <code>false</code> 无需阻塞等待, 公平锁中也是调用 <code>hasQueuedPredecessors</code></p><h3 id="lock"><a class="markdownIt-Anchor" href="#lock"></a> lock</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 读锁</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">lock</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    sync.acquireShared(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 写锁</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">lock</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    sync.acquire(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>lock</code> 读锁通过共享模式获取锁资源,而写锁通过独占模式获取锁资源</p><blockquote><p>共享方式获取锁资源,<code>acquireShare</code> 调用 <code>tryAcquireShare</code> 尝试获取锁资源,如果获取失败再调用 <code>doAcquireShare</code>方法,下面是 <code>ReentrantReadWriteLock</code> 对 <code>tryAcquireShare</code> 的实现。</p></blockquote><h4 id="acquireshared"><a class="markdownIt-Anchor" href="#acquireshared"></a> acquireShared</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">final</span> <span class="keyword">int</span> <span class="title">tryAcquireShared</span><span class="params">(<span class="keyword">int</span> unused)</span> </span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * Walkthrough:</span></span><br><span class="line"><span class="comment">     * 1. If write lock held by another thread, fail.</span></span><br><span class="line"><span class="comment">     * 2. Otherwise, this thread is eligible for</span></span><br><span class="line"><span class="comment">     *    lock wrt state, so ask if it should block</span></span><br><span class="line"><span class="comment">     *    because of queue policy. If not, try</span></span><br><span class="line"><span class="comment">     *    to grant by CASing state and updating count.</span></span><br><span class="line"><span class="comment">     *    Note that step does not check for reentrant</span></span><br><span class="line"><span class="comment">     *    acquires, which is postponed to full version</span></span><br><span class="line"><span class="comment">     *    to avoid having to check hold count in</span></span><br><span class="line"><span class="comment">     *    the more typical non-reentrant case.</span></span><br><span class="line"><span class="comment">     * 3. If step 2 fails either because thread</span></span><br><span class="line"><span class="comment">     *    apparently not eligible or CAS fails or count</span></span><br><span class="line"><span class="comment">     *    saturated, chain to version with full retry loop.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    Thread current = Thread.currentThread();</span><br><span class="line">    <span class="keyword">int</span> c = getState();</span><br><span class="line">    <span class="keyword">if</span> (exclusiveCount(c) != <span class="number">0</span> &amp;&amp;</span><br><span class="line">        getExclusiveOwnerThread() != current)</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> r = sharedCount(c);</span><br><span class="line">    <span class="keyword">if</span> (!readerShouldBlock() &amp;&amp;</span><br><span class="line">        r &lt; MAX_COUNT &amp;&amp;</span><br><span class="line">        compareAndSetState(c, c + SHARED_UNIT)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (r == <span class="number">0</span>) &#123;</span><br><span class="line">            firstReader = current;</span><br><span class="line">            firstReaderHoldCount = <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (firstReader == current) &#123;</span><br><span class="line">            firstReaderHoldCount++;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            HoldCounter rh = cachedHoldCounter;</span><br><span class="line">            <span class="keyword">if</span> (rh == <span class="keyword">null</span> || rh.tid != getThreadId(current))</span><br><span class="line">                cachedHoldCounter = rh = readHolds.get();</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (rh.count == <span class="number">0</span>)</span><br><span class="line">                readHolds.set(rh);</span><br><span class="line">            rh.count++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> fullTryAcquireShared(current);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>1、如果有其他线程持有写锁，获取锁资源失败.<br />2、如果读操作无需阻塞,且当前持有锁数量相遇最大限制(65536),且 <code>CAS</code> 修改状态成功,返回 <code>1</code><br />* 若当前节点状态为 <code>0</code>,设置当前节点为头节点,设置头结点持有锁数量为 <code>1</code><br />* 若当前节点为头节点,头节点持有锁数量 <code>+1</code><br />* 否则,获取当前线程的持有计数器,并将计数器持有数量 <code>+1</code><br />3、调用 <code>fullTryAcquireSHared</code> 方法获取锁资源。</p></blockquote><h4 id="fulltryacquireshared"><a class="markdownIt-Anchor" href="#fulltryacquireshared"></a> fullTryAcquireShared</h4><p>完整版本的获取读取，可处理 <code>tryAcquireShared</code> 中未处理的 <code>CAS</code> 丢失和可重入读取</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Full version of acquire for reads, that handles CAS misses</span></span><br><span class="line"><span class="comment"> * and reentrant reads not dealt with in tryAcquireShared.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">final</span> <span class="keyword">int</span> <span class="title">fullTryAcquireShared</span><span class="params">(Thread current)</span> </span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * This code is in part redundant with that in</span></span><br><span class="line"><span class="comment">     * tryAcquireShared but is simpler overall by not</span></span><br><span class="line"><span class="comment">     * complicating tryAcquireShared with interactions between</span></span><br><span class="line"><span class="comment">     * retries and lazily reading hold counts.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    HoldCounter rh = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">        <span class="keyword">int</span> c = getState();</span><br><span class="line">        <span class="keyword">if</span> (exclusiveCount(c) != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (getExclusiveOwnerThread() != current)</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            <span class="comment">// else we hold the exclusive lock; blocking here</span></span><br><span class="line">            <span class="comment">// would cause deadlock.</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (readerShouldBlock()) &#123;</span><br><span class="line">            <span class="comment">// Make sure we&#x27;re not acquiring read lock reentrantly</span></span><br><span class="line">            <span class="keyword">if</span> (firstReader == current) &#123;</span><br><span class="line">                <span class="comment">// assert firstReaderHoldCount &gt; 0;</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (rh == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    rh = cachedHoldCounter;</span><br><span class="line">                    <span class="keyword">if</span> (rh == <span class="keyword">null</span> || rh.tid != getThreadId(current)) &#123;</span><br><span class="line">                        rh = readHolds.get();</span><br><span class="line">                        <span class="keyword">if</span> (rh.count == <span class="number">0</span>)</span><br><span class="line">                            readHolds.remove();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (rh.count == <span class="number">0</span>)</span><br><span class="line">                    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (sharedCount(c) == MAX_COUNT)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Error(<span class="string">&quot;Maximum lock count exceeded&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (compareAndSetState(c, c + SHARED_UNIT)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (sharedCount(c) == <span class="number">0</span>) &#123;</span><br><span class="line">                firstReader = current;</span><br><span class="line">                firstReaderHoldCount = <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (firstReader == current) &#123;</span><br><span class="line">                firstReaderHoldCount++;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (rh == <span class="keyword">null</span>)</span><br><span class="line">                    rh = cachedHoldCounter;</span><br><span class="line">                <span class="keyword">if</span> (rh == <span class="keyword">null</span> || rh.tid != getThreadId(current))</span><br><span class="line">                    rh = readHolds.get();</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (rh.count == <span class="number">0</span>)</span><br><span class="line">                    readHolds.set(rh);</span><br><span class="line">                rh.count++;</span><br><span class="line">                cachedHoldCounter = rh; <span class="comment">// cache for release</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法与 <code>tryAcquireShared</code> 部分冗余，但总体上更简单. 由于没有 <code>retried</code> 和 <code>lazily</code> 读取持有计数之间的复杂交互</p><blockquote><p>独占模式获取锁资源,<code>acquire</code> 调用 <code>tryAcquire</code> 尝试获取锁资源,如果获取失败再调用 <code>acquireQueued</code>方法加入同步队列,下面是 <code>ReentrantReadWriteLock</code> 对 <code>tryAcquire</code> 的实现。</p></blockquote><h4 id="tryacquire"><a class="markdownIt-Anchor" href="#tryacquire"></a> tryAcquire</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">tryAcquire</span><span class="params">(<span class="keyword">int</span> acquires)</span> </span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * Walkthrough:</span></span><br><span class="line"><span class="comment">     * 1. If read count nonzero or write count nonzero</span></span><br><span class="line"><span class="comment">     *    and owner is a different thread, fail.</span></span><br><span class="line"><span class="comment">     * 2. If count would saturate, fail. (This can only</span></span><br><span class="line"><span class="comment">     *    happen if count is already nonzero.)</span></span><br><span class="line"><span class="comment">     * 3. Otherwise, this thread is eligible for lock if</span></span><br><span class="line"><span class="comment">     *    it is either a reentrant acquire or</span></span><br><span class="line"><span class="comment">     *    queue policy allows it. If so, update state</span></span><br><span class="line"><span class="comment">     *    and set owner.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    Thread current = Thread.currentThread();</span><br><span class="line">    <span class="keyword">int</span> c = getState();</span><br><span class="line">    <span class="keyword">int</span> w = exclusiveCount(c);</span><br><span class="line">    <span class="keyword">if</span> (c != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// (Note: if c != 0 and w == 0 then shared count != 0)</span></span><br><span class="line">        <span class="keyword">if</span> (w == <span class="number">0</span> || current != getExclusiveOwnerThread())</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (w + exclusiveCount(acquires) &gt; MAX_COUNT)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Error(<span class="string">&quot;Maximum lock count exceeded&quot;</span>);</span><br><span class="line">        <span class="comment">// Reentrant acquire</span></span><br><span class="line">        setState(c + acquires);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (writerShouldBlock() ||</span><br><span class="line">        !compareAndSetState(c, c + acquires))</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    setExclusiveOwnerThread(current);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>1、若读写锁数量都不为 <code>0</code> 且 其他线程持有锁资源,则获取锁资源失败<br />2、若持有锁数量超过最大限制,则获取锁资源失败<br />3、若当前线程是可重入获取或队列策略允许的话，则可以获取锁资源。</p></blockquote><h3 id="unlock"><a class="markdownIt-Anchor" href="#unlock"></a> unlock</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 读锁</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">unlock</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    sync.releaseShared(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 写锁</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">unlock</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    sync.release(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>共享方式释放锁资源,<code>releaseShared</code> 调用 <code>tryReleaseShared</code> 尝试释放锁资源,如果释放后允许唤醒后续等待结点,调用 <code>doReleaseShared</code> 尝试唤醒 <code>head</code> 后继节点。</p></blockquote><h4 id="tryreleaseshared"><a class="markdownIt-Anchor" href="#tryreleaseshared"></a> tryReleaseShared</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">tryReleaseShared</span><span class="params">(<span class="keyword">int</span> unused)</span> </span>&#123;</span><br><span class="line">    Thread current = Thread.currentThread();</span><br><span class="line">    <span class="keyword">if</span> (firstReader == current) &#123;</span><br><span class="line">        <span class="comment">// assert firstReaderHoldCount &gt; 0;</span></span><br><span class="line">        <span class="keyword">if</span> (firstReaderHoldCount == <span class="number">1</span>)</span><br><span class="line">            firstReader = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            firstReaderHoldCount--;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        HoldCounter rh = cachedHoldCounter;</span><br><span class="line">        <span class="keyword">if</span> (rh == <span class="keyword">null</span> || rh.tid != getThreadId(current))</span><br><span class="line">            rh = readHolds.get();</span><br><span class="line">        <span class="keyword">int</span> count = rh.count;</span><br><span class="line">        <span class="keyword">if</span> (count &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">            readHolds.remove();</span><br><span class="line">            <span class="keyword">if</span> (count &lt;= <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">throw</span> unmatchedUnlockException();</span><br><span class="line">        &#125;</span><br><span class="line">        --rh.count;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">        <span class="keyword">int</span> c = getState();</span><br><span class="line">        <span class="keyword">int</span> nextc = c - SHARED_UNIT;</span><br><span class="line">        <span class="keyword">if</span> (compareAndSetState(c, nextc))</span><br><span class="line">            <span class="comment">// Releasing the read lock has no effect on readers,</span></span><br><span class="line">            <span class="comment">// but it may allow waiting writers to proceed if</span></span><br><span class="line">            <span class="comment">// both read and write locks are now free.</span></span><br><span class="line">            <span class="keyword">return</span> nextc == <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>若当前线程为<code>firstReader</code>,判断当前头部节点线程持有的锁数量是否为 <code>1</code> ,如果是就设置 <code>firstReader = null</code>,否则 <code>firstReaderHoldCount</code> 数量减 <code>1</code></li><li>否则获取线程的持有锁数量计数器,并将持有数据量减 <code>1</code></li><li>循环使用 <code>CAS</code> 设置 <code>state</code>,并返回当前 <code>state</code> 是否为 <code>0</code>(读锁释放不影响其他读操作,但如果现在读取和写入锁定均已释放，则可能允许等待的写入器继续进行。)</li></ol><blockquote><p>独占方式释放锁资源,<code>release</code> 调用 <code>tryRelease</code> 尝试释放锁资源,如果释放成功.判断头节点不为空且等待状态不为 <code>0</code>,尝试 <code>unpark</code> 后继节点。</p></blockquote><h4 id="tryrelease"><a class="markdownIt-Anchor" href="#tryrelease"></a> tryRelease</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Note that tryRelease and tryAcquire can be called by</span></span><br><span class="line"><span class="comment"> * Conditions. So it is possible that their arguments contain</span></span><br><span class="line"><span class="comment"> * both read and write holds that are all released during a</span></span><br><span class="line"><span class="comment"> * condition wait and re-established in tryAcquire.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">tryRelease</span><span class="params">(<span class="keyword">int</span> releases)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!isHeldExclusively())</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalMonitorStateException();</span><br><span class="line">    <span class="keyword">int</span> nextc = getState() - releases;</span><br><span class="line">    <span class="keyword">boolean</span> free = exclusiveCount(nextc) == <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (free)</span><br><span class="line">        setExclusiveOwnerThread(<span class="keyword">null</span>);</span><br><span class="line">    setState(nextc);</span><br><span class="line">    <span class="keyword">return</span> free;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>如果当前线程未持有锁资源,抛出 <code>IllegalMonitorStateException</code> 异常</li><li>如果释放锁资源后,该线程持有锁资源数量为 <code>0</code> 则设置持有排它锁线程为 <code>null</code></li><li>更新 <code>state</code> 状态并返回当前线程是否已完全释放锁资源(持有锁资源数量为 <code>0</code>)</li></ol><h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2><p><a href="https://www.jianshu.com/p/38fe92bcca7e">JUC源码分析-JUC锁：ReentrantLock</a><br /><a href="https://blog.csdn.net/anlian523/article/details/106964711/">深入理解读锁的非公平实现</a></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
          <category> concurrent </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> concurrent </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>并发编程 - ReentrantLock</title>
      <link href="post/concurrent-reentrantlock.html"/>
      <url>post/concurrent-reentrantlock.html</url>
      
        <content type="html"><![CDATA[<p><code>ReentrantLock</code> 为 <code>Lock</code> 接口的 互斥锁（排它锁）实现,</p><h2 id="lock"><a class="markdownIt-Anchor" href="#lock"></a> Lock</h2><p><code>Lock</code> 接口提供了以下方法:</p><h3 id="lock-2"><a class="markdownIt-Anchor" href="#lock-2"></a> lock</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Acquires the lock.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;If the lock is not available then the current thread becomes</span></span><br><span class="line"><span class="comment"> * disabled for thread scheduling purposes and lies dormant until the</span></span><br><span class="line"><span class="comment"> * lock has been acquired.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;&lt;b&gt;Implementation Considerations&lt;/b&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;A &#123;<span class="doctag">@code</span> Lock&#125; implementation may be able to detect erroneous use</span></span><br><span class="line"><span class="comment"> * of the lock, such as an invocation that would cause deadlock, and</span></span><br><span class="line"><span class="comment"> * may throw an (unchecked) exception in such circumstances.  The</span></span><br><span class="line"><span class="comment"> * circumstances and the exception type must be documented by that</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@code</span> Lock&#125; implementation.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lock</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><blockquote><p>如果锁不可用，则当前线程将出于线程调度目的而禁用，并处于休眠状态，直到获得锁为止</p></blockquote><h3 id="lockinterruptibly"><a class="markdownIt-Anchor" href="#lockinterruptibly"></a> lockInterruptibly</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Acquires the lock unless the current thread is</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@linkplain</span> Thread#interrupt interrupted&#125;.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Acquires the lock if it is available and returns immediately.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;If the lock is not available then the current thread becomes</span></span><br><span class="line"><span class="comment"> * disabled for thread scheduling purposes and lies dormant until</span></span><br><span class="line"><span class="comment"> * one of two things happens:</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;ul&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;The lock is acquired by the current thread; or</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;Some other thread &#123;<span class="doctag">@linkplain</span> Thread#interrupt interrupts&#125; the</span></span><br><span class="line"><span class="comment"> * current thread, and interruption of lock acquisition is supported.</span></span><br><span class="line"><span class="comment"> * &lt;/ul&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;If the current thread:</span></span><br><span class="line"><span class="comment"> * &lt;ul&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;has its interrupted status set on entry to this method; or</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;is &#123;<span class="doctag">@linkplain</span> Thread#interrupt interrupted&#125; while acquiring the</span></span><br><span class="line"><span class="comment"> * lock, and interruption of lock acquisition is supported,</span></span><br><span class="line"><span class="comment"> * &lt;/ul&gt;</span></span><br><span class="line"><span class="comment"> * then &#123;<span class="doctag">@link</span> InterruptedException&#125; is thrown and the current thread&#x27;s</span></span><br><span class="line"><span class="comment"> * interrupted status is cleared.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;&lt;b&gt;Implementation Considerations&lt;/b&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;The ability to interrupt a lock acquisition in some</span></span><br><span class="line"><span class="comment"> * implementations may not be possible, and if possible may be an</span></span><br><span class="line"><span class="comment"> * expensive operation.  The programmer should be aware that this</span></span><br><span class="line"><span class="comment"> * may be the case. An implementation should document when this is</span></span><br><span class="line"><span class="comment"> * the case.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;An implementation can favor responding to an interrupt over</span></span><br><span class="line"><span class="comment"> * normal method return.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;A &#123;<span class="doctag">@code</span> Lock&#125; implementation may be able to detect</span></span><br><span class="line"><span class="comment"> * erroneous use of the lock, such as an invocation that would</span></span><br><span class="line"><span class="comment"> * cause deadlock, and may throw an (unchecked) exception in such</span></span><br><span class="line"><span class="comment"> * circumstances.  The circumstances and the exception type must</span></span><br><span class="line"><span class="comment"> * be documented by that &#123;<span class="doctag">@code</span> Lock&#125; implementation.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> InterruptedException if the current thread is</span></span><br><span class="line"><span class="comment"> *         interrupted while acquiring the lock (and interruption</span></span><br><span class="line"><span class="comment"> *         of lock acquisition is supported)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lockInterruptibly</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException</span>;</span><br></pre></td></tr></table></figure><blockquote><p>如果当前线程未被中断则获得锁,如果当前线程被中断则出现异常。</p></blockquote><ol><li><p>如果当前线程未被中断，则获取锁。</p></li><li><p>如果该锁没有被另一个线程保持，则获取该锁并立即返回，将锁的保持计数设置为 1。</p></li><li><p>如果当前线程已经保持此锁，则将保持计数加 1，并且该方法立即返回。</p></li><li><p>如果锁被另一个线程保持，则出于线程调度目的，禁用当前线程，并且在发生以下两种情况之一以<br />前，该线程将一直处于休眠状态：<br />* 锁由当前线程获得<br />* 其他某个线程中断当前线程</p></li><li><p>如果当前线程获得该锁，则将锁保持计数设置为 1。<br />如果当前线程：</p><pre><code>* 在进入此方法时已经设置了该线程的中断状态</code></pre></li></ol><ul><li><p>在等待获取锁的同时被中断</p><p>则抛出 <code>InterruptedException</code>，并且清除当前线程的已中断状态。</p></li></ul><ol start="6"><li>在此实现中，因为此方法是一个显式中断点，所以要优先考虑响应中断，而不是响应锁的普通获取或<br />重入获取。</li></ol><h3 id="trylock"><a class="markdownIt-Anchor" href="#trylock"></a> tryLock</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Acquires the lock only if it is free at the time of invocation.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Acquires the lock if it is available and returns immediately</span></span><br><span class="line"><span class="comment"> * with the value &#123;<span class="doctag">@code</span> true&#125;.</span></span><br><span class="line"><span class="comment"> * If the lock is not available then this method will return</span></span><br><span class="line"><span class="comment"> * immediately with the value &#123;<span class="doctag">@code</span> false&#125;.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;A typical usage idiom for this method would be:</span></span><br><span class="line"><span class="comment"> *  &lt;pre&gt; &#123;<span class="doctag">@code</span></span></span><br><span class="line"><span class="comment"> * Lock lock = ...;</span></span><br><span class="line"><span class="comment"> * if (lock.tryLock()) &#123;</span></span><br><span class="line"><span class="comment"> *   try &#123;</span></span><br><span class="line"><span class="comment"> *     // manipulate protected state</span></span><br><span class="line"><span class="comment"> *   &#125; finally &#123;</span></span><br><span class="line"><span class="comment"> *     lock.unlock();</span></span><br><span class="line"><span class="comment"> *   &#125;</span></span><br><span class="line"><span class="comment"> * &#125; else &#123;</span></span><br><span class="line"><span class="comment"> *   // perform alternative actions</span></span><br><span class="line"><span class="comment"> * &#125;&#125;&lt;/pre&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This usage ensures that the lock is unlocked if it was acquired, and</span></span><br><span class="line"><span class="comment"> * doesn&#x27;t try to unlock if the lock was not acquired.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="doctag">@code</span> true&#125; if the lock was acquired and</span></span><br><span class="line"><span class="comment"> *         &#123;<span class="doctag">@code</span> false&#125; otherwise</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">tryLock</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>仅在调用时锁未被另一个线程保持的情况下，才获取该锁。</p><ol><li><p>如果该锁没有被另一个线程保持，并且立即返回 <code>true</code> 值，则将锁的保持计数设置为 <code>1</code>。<br />即使已将此锁设置为使用公平排序策略，但是调用 <code>tryLock()</code> 仍将 立即获取锁（如果有可用的），<br />而不管其他线程当前是否正在等待该锁。在某些情况下，此 <strong>“闯入”</strong> 行为可能很有用，即使它会打破公<br />平性也如此。如果希望遵守此锁的公平设置，则使用 <code>tryLock(0, TimeUnit.SECONDS)</code><br />，它几乎是等效的（也检测中断）。</p></li><li><p>如果当前线程已经保持此锁，则将保持计数加 <code>1</code>，该方法将返回 <code>true</code>。</p></li><li><p>如果锁被另一个线程保持，则此方法将立即返回 <code>false</code> 值。</p></li></ol><h3 id="trylocktimeout"><a class="markdownIt-Anchor" href="#trylocktimeout"></a> tryLock(TimeOut)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Acquires the lock if it is free within the given waiting time and the</span></span><br><span class="line"><span class="comment"> * current thread has not been &#123;<span class="doctag">@linkplain</span> Thread#interrupt interrupted&#125;.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;If the lock is available this method returns immediately</span></span><br><span class="line"><span class="comment"> * with the value &#123;<span class="doctag">@code</span> true&#125;.</span></span><br><span class="line"><span class="comment"> * If the lock is not available then</span></span><br><span class="line"><span class="comment"> * the current thread becomes disabled for thread scheduling</span></span><br><span class="line"><span class="comment"> * purposes and lies dormant until one of three things happens:</span></span><br><span class="line"><span class="comment"> * &lt;ul&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;The lock is acquired by the current thread; or</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;Some other thread &#123;<span class="doctag">@linkplain</span> Thread#interrupt interrupts&#125; the</span></span><br><span class="line"><span class="comment"> * current thread, and interruption of lock acquisition is supported; or</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;The specified waiting time elapses</span></span><br><span class="line"><span class="comment"> * &lt;/ul&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;If the lock is acquired then the value &#123;<span class="doctag">@code</span> true&#125; is returned.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;If the current thread:</span></span><br><span class="line"><span class="comment"> * &lt;ul&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;has its interrupted status set on entry to this method; or</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;is &#123;<span class="doctag">@linkplain</span> Thread#interrupt interrupted&#125; while acquiring</span></span><br><span class="line"><span class="comment"> * the lock, and interruption of lock acquisition is supported,</span></span><br><span class="line"><span class="comment"> * &lt;/ul&gt;</span></span><br><span class="line"><span class="comment"> * then &#123;<span class="doctag">@link</span> InterruptedException&#125; is thrown and the current thread&#x27;s</span></span><br><span class="line"><span class="comment"> * interrupted status is cleared.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;If the specified waiting time elapses then the value &#123;<span class="doctag">@code</span> false&#125;</span></span><br><span class="line"><span class="comment"> * is returned.</span></span><br><span class="line"><span class="comment"> * If the time is</span></span><br><span class="line"><span class="comment"> * less than or equal to zero, the method will not wait at all.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;&lt;b&gt;Implementation Considerations&lt;/b&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;The ability to interrupt a lock acquisition in some implementations</span></span><br><span class="line"><span class="comment"> * may not be possible, and if possible may</span></span><br><span class="line"><span class="comment"> * be an expensive operation.</span></span><br><span class="line"><span class="comment"> * The programmer should be aware that this may be the case. An</span></span><br><span class="line"><span class="comment"> * implementation should document when this is the case.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;An implementation can favor responding to an interrupt over normal</span></span><br><span class="line"><span class="comment"> * method return, or reporting a timeout.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;A &#123;<span class="doctag">@code</span> Lock&#125; implementation may be able to detect</span></span><br><span class="line"><span class="comment"> * erroneous use of the lock, such as an invocation that would cause</span></span><br><span class="line"><span class="comment"> * deadlock, and may throw an (unchecked) exception in such circumstances.</span></span><br><span class="line"><span class="comment"> * The circumstances and the exception type must be documented by that</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@code</span> Lock&#125; implementation.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> time the maximum time to wait for the lock</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> unit the time unit of the &#123;<span class="doctag">@code</span> time&#125; argument</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="doctag">@code</span> true&#125; if the lock was acquired and &#123;<span class="doctag">@code</span> false&#125;</span></span><br><span class="line"><span class="comment"> *         if the waiting time elapsed before the lock was acquired</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> InterruptedException if the current thread is interrupted</span></span><br><span class="line"><span class="comment"> *         while acquiring the lock (and interruption of lock</span></span><br><span class="line"><span class="comment"> *         acquisition is supported)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">tryLock</span><span class="params">(<span class="keyword">long</span> time, TimeUnit unit)</span> <span class="keyword">throws</span> InterruptedException</span>;</span><br></pre></td></tr></table></figure><blockquote><p>与 <code>tryLock</code> 不同的是,可以指定超时时间,如果超时仍未获取到锁资源,就会返回 <code>false</code></p><p>如果在等待期间线程中断就会抛出 <code>InterruptedException</code> 异常</p></blockquote><h3 id="unlock"><a class="markdownIt-Anchor" href="#unlock"></a> unLock</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Releases the lock.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;&lt;b&gt;Implementation Considerations&lt;/b&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;A &#123;<span class="doctag">@code</span> Lock&#125; implementation will usually impose</span></span><br><span class="line"><span class="comment"> * restrictions on which thread can release a lock (typically only the</span></span><br><span class="line"><span class="comment"> * holder of the lock can release it) and may throw</span></span><br><span class="line"><span class="comment"> * an (unchecked) exception if the restriction is violated.</span></span><br><span class="line"><span class="comment"> * Any restrictions and the exception</span></span><br><span class="line"><span class="comment"> * type must be documented by that &#123;<span class="doctag">@code</span> Lock&#125; implementation.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">unlock</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><blockquote><p>释放锁资源</p></blockquote><h3 id="newcondition"><a class="markdownIt-Anchor" href="#newcondition"></a> newCondition</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns a new &#123;<span class="doctag">@link</span> Condition&#125; instance that is bound to this</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@code</span> Lock&#125; instance.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Before waiting on the condition the lock must be held by the</span></span><br><span class="line"><span class="comment"> * current thread.</span></span><br><span class="line"><span class="comment"> * A call to &#123;<span class="doctag">@link</span> Condition#await()&#125; will atomically release the lock</span></span><br><span class="line"><span class="comment"> * before waiting and re-acquire the lock before the wait returns.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;&lt;b&gt;Implementation Considerations&lt;/b&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;The exact operation of the &#123;<span class="doctag">@link</span> Condition&#125; instance depends on</span></span><br><span class="line"><span class="comment"> * the &#123;<span class="doctag">@code</span> Lock&#125; implementation and must be documented by that</span></span><br><span class="line"><span class="comment"> * implementation.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> A new &#123;<span class="doctag">@link</span> Condition&#125; instance for this &#123;<span class="doctag">@code</span> Lock&#125; instance</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> UnsupportedOperationException if this &#123;<span class="doctag">@code</span> Lock&#125;</span></span><br><span class="line"><span class="comment"> *         implementation does not support conditions</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">Condition <span class="title">newCondition</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><blockquote><p>使用<code>Condition</code>时，引用的<code>Condition</code>对象必须从<code>Lock</code>实例的<code>newCondition()</code>返回，这样才能获得一个绑定了<code>Lock</code>实例的<code>Condition</code>实例。</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/Lock.png" alt="" /></p><h2 id="reentrantlock"><a class="markdownIt-Anchor" href="#reentrantlock"></a> ReentrantLock</h2><blockquote><p><code>ReentrantLock</code> 底层通过 <a href="/post/concurrent-aqs.html">AQS</a> 实现排队机制。<br />说到 <code>ReentrantLock</code> 就不得不提 <code>synchronized</code>, 那么他们有什么异同点呢。</p></blockquote><ol><li><code>ReentrantLock</code> 和 <code>synchronized</code> 都是互斥锁、可重入锁</li><li><code>ReentrantLock</code> 是 java <code>JUC</code> 包下 <code>Lock</code> 的实现类, <code>synchronized</code> 是 JAVA 关键字</li><li><code>ReentrantLock</code> 通过构造函数创建锁对象, 需要手动获取释放锁资源, <code>synchronized</code> 的锁资源获取释放是由 <code>JVM</code> 实现</li><li><code>ReentrantLock</code> 提供 <code>synchronized</code> 不支持的高级特性, 如 <code>lockInterruptibly()</code>(可响应中断)、<code>tryLock(long, TimeUnit)</code>(获取锁时限时等待) 和 <code>Condition</code>(实现等待通知机制)</li><li><code>ReentrantLock</code> 同时支持 <strong>公平锁</strong> 和 <strong>非公平锁</strong>, <code>synchronized</code> 只支持 非公平锁</li></ol><h3 id="lock-3"><a class="markdownIt-Anchor" href="#lock-3"></a> lock()</h3><p>如果是非公平锁,首先会通过<code>CAS</code> 获取锁。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 非公平锁</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">tryAcquire</span><span class="params">(<span class="keyword">int</span> acquires)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> nonfairTryAcquire(acquires);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">nonfairTryAcquire</span><span class="params">(<span class="keyword">int</span> acquires)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> Thread current = Thread.currentThread();</span><br><span class="line">    <span class="keyword">int</span> c = getState();</span><br><span class="line">    <span class="keyword">if</span> (c == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (compareAndSetState(<span class="number">0</span>, acquires)) &#123;</span><br><span class="line">            setExclusiveOwnerThread(current);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (current == getExclusiveOwnerThread()) &#123;</span><br><span class="line">        <span class="keyword">int</span> nextc = c + acquires;</span><br><span class="line">        <span class="keyword">if</span> (nextc &lt; <span class="number">0</span>) <span class="comment">// overflow</span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Error(<span class="string">&quot;Maximum lock count exceeded&quot;</span>);</span><br><span class="line">        setState(nextc);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 公平锁</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">tryAcquire</span><span class="params">(<span class="keyword">int</span> acquires)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> Thread current = Thread.currentThread();</span><br><span class="line">    <span class="keyword">int</span> c = getState();</span><br><span class="line">    <span class="keyword">if</span> (c == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!hasQueuedPredecessors() &amp;&amp;</span><br><span class="line">            compareAndSetState(<span class="number">0</span>, acquires)) &#123;</span><br><span class="line">            setExclusiveOwnerThread(current);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (current == getExclusiveOwnerThread()) &#123;</span><br><span class="line">        <span class="keyword">int</span> nextc = c + acquires;</span><br><span class="line">        <span class="keyword">if</span> (nextc &lt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Error(<span class="string">&quot;Maximum lock count exceeded&quot;</span>);</span><br><span class="line">        setState(nextc);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>公平锁与非公平锁的区别在于,公平锁会查询是否有任何线程比当前线程在等待时间更长。</p><p><code>acquireQueued</code> 开始排队:</p><ol><li><code>addWaiter</code> 在 <code>FIFO</code> 队列增加一个 <code>EXCLUSIVE</code> 模式的节点</li><li>循环获取当前节点的 <code>predecessor</code>节点，如果当前节点为头节点,继续执行 <code>tryAcquire</code> 操作</li><li>检查并更新无法获取的节点的状态。从前驱节点往前遍历,要求 <code>that pred == node.prev</code> 状态不能为 <code>CANCELLED</code></li></ol><h3 id="unlock-2"><a class="markdownIt-Anchor" href="#unlock-2"></a> unlock()</h3><p>该方法用于释放锁资源</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Attempts to release this lock.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;If the current thread is the holder of this lock then the hold</span></span><br><span class="line"><span class="comment"> * count is decremented.  If the hold count is now zero then the lock</span></span><br><span class="line"><span class="comment"> * is released.  If the current thread is not the holder of this</span></span><br><span class="line"><span class="comment"> * lock then &#123;<span class="doctag">@link</span> IllegalMonitorStateException&#125; is thrown.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> IllegalMonitorStateException if the current thread does not</span></span><br><span class="line"><span class="comment"> *         hold this lock</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">unlock</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    sync.release(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>unlock</code>调用的是 <code>AQS</code> 的 <code>release</code> 方法,而 <code>AQS</code> 调用的是 <code>tryRelease</code>,<code>tryRelease</code> 是由自定义队列同步器来实现的,在 <code>ReentrantLock</code> 中就是 <code>Sync</code>.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">tryRelease</span><span class="params">(<span class="keyword">int</span> releases)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> c = getState() - releases;</span><br><span class="line">    <span class="keyword">if</span> (Thread.currentThread() != getExclusiveOwnerThread())</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalMonitorStateException();</span><br><span class="line">    <span class="keyword">boolean</span> free = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (c == <span class="number">0</span>) &#123;</span><br><span class="line">        free = <span class="keyword">true</span>;</span><br><span class="line">        setExclusiveOwnerThread(<span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    setState(c);</span><br><span class="line">    <span class="keyword">return</span> free;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="reentrantreadwritelock"><a class="markdownIt-Anchor" href="#reentrantreadwritelock"></a> ReentrantReadWriteLock</h3><p>ReentrantReadWriteLock是Lock的另一种实现方式，我们已经知道了ReentrantLock是一个排他锁，同一时间只允许一个线程访问，而ReentrantReadWriteLock允许多个读线程同时访问，但不允许写线程和读线程、写线程和写线程同时访问。相对于排他锁，提高了并发性。在实际应用中，大部分情况下对共享数据（如缓存）的访问都是读操作远多于写操作，这时ReentrantReadWriteLock能够提供比排他锁更好的并发性和吞吐量。</p><h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2><p><a href="https://www.jianshu.com/p/38fe92bcca7e">JUC源码分析-JUC锁：ReentrantLock</a></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
          <category> concurrent </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> concurrent </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>并发编程 - AQS</title>
      <link href="post/concurrent-aqs.html"/>
      <url>post/concurrent-aqs.html</url>
      
        <content type="html"><![CDATA[<h2 id="aqs"><a class="markdownIt-Anchor" href="#aqs"></a> AQS</h2><blockquote><p><strong>AQS</strong>：<code>AbstractQuenedSynchronizer</code> 抽象的队列式同步器。是除了 java 自带的 <code>synchronized</code> 关键字之外的锁机制。<br /><code>AQS</code> 的全称为（<code>AbstractQueuedSynchronizer</code>），这个类在 <code>java.util.concurrent.locks</code> 包</p><p><code>AQS</code> 提供了一种实现阻塞锁和一系列依赖FIFO等待队列的同步器的框架，如下图所示。<code>AQS</code> 为一系列同步器依赖于一个单独的原子变量（<code>state</code>）的同步器提供了一个非常有用的基础。子类们必须定义改变 <code>state</code> 变量的 <code>protected</code> 方法，这些方法定义了 <code>state</code> 是如何被获取或释放的。鉴于此，本类中的其他方法执行所有的排队和阻塞机制。子类也可以维护其他的 <code>state</code> 变量，但是为了保证同步，必须原子地操作这些变量。</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/AQS.png" alt="AQS" /></p><p><code>AQS</code> 对 <code>state</code> 的操作是原子的, 且不能被覆写,所有的同步机制的实现均依赖于对改变量的原子操作。为了实现不同的同步机制,子类需要提供一个非公有的(non-public internal) 内部辅助类来实现同步逻辑。<code>AQS</code>  提供了 <code>EXCLUSIVE</code> (互斥) 和 <code>SHARE</code> (共享) 两种模式, 一般情况下子类只需要实现其中一种模式, 也有同时实现两种模式的 <code>ReadWriteLock</code> 。</p><h3 id="state"><a class="markdownIt-Anchor" href="#state"></a> state</h3><blockquote><p><code>AQS</code> 维护一个 <code>volatile</code> 的 <code>state</code> 变量来记录状态,保证 <code>state</code> 的可见性。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The synchronization state.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">volatile</span> <span class="keyword">int</span> state;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the current value of synchronization state.</span></span><br><span class="line"><span class="comment"> * This operation has memory semantics of a &#123;<span class="doctag">@code</span> volatile&#125; read.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> current state value</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">final</span> <span class="keyword">int</span> <span class="title">getState</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> state;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Sets the value of synchronization state.</span></span><br><span class="line"><span class="comment"> * This operation has memory semantics of a &#123;<span class="doctag">@code</span> volatile&#125; write.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> newState the new state value</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">setState</span><span class="params">(<span class="keyword">int</span> newState)</span> </span>&#123;</span><br><span class="line">    state = newState;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Atomically sets synchronization state to the given updated</span></span><br><span class="line"><span class="comment"> * value if the current state value equals the expected value.</span></span><br><span class="line"><span class="comment"> * This operation has memory semantics of a &#123;<span class="doctag">@code</span> volatile&#125; read</span></span><br><span class="line"><span class="comment"> * and write.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> expect the expected value</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> update the new value</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="doctag">@code</span> true&#125; if successful. False return indicates that the actual</span></span><br><span class="line"><span class="comment"> *         value was not equal to the expected value.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">compareAndSetState</span><span class="params">(<span class="keyword">int</span> expect, <span class="keyword">int</span> update)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// See below for intrinsics setup to support this</span></span><br><span class="line">    <span class="keyword">return</span> unsafe.compareAndSwapInt(<span class="keyword">this</span>, stateOffset, expect, update);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>AQS</code> 提供三种方法访问 <code>state</code> ,且无法被重写. 其中 <code>compareAndSetState</code> 方法使用的是 <code>Unsafe</code> 类的 <code>compareAndSwapInt</code> 。</p><h3 id="node"><a class="markdownIt-Anchor" href="#node"></a> Node</h3><blockquote><p><code>AQS</code> 是对 <code>CLH</code> 锁也是一种基于链表的<strong>可扩展</strong>、<strong>高性能</strong>、<strong>公平的</strong>自旋锁，申请线程只在本地变量上自旋，它不断轮询前驱的状态，如果发现前驱释放了锁就结束自旋。</p></blockquote><p><code>Java AQS</code> 的设计对 <strong>CLH</strong> 锁进行了优化或者说变体。</p><p><code>Node</code> 类就是基于 <code>CLH</code> 锁的 <code>FIFO</code> 队列的实现。</p><blockquote><p><code>Node</code> 的两种模式:</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** Marker to indicate a node is waiting in shared mode */</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> Node SHARED = <span class="keyword">new</span> Node();</span><br><span class="line"><span class="comment">/** Marker to indicate a node is waiting in exclusive mode */</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> Node EXCLUSIVE = <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure><p><code>SHARED</code> 共享模式(多个线程可同时执行，如 <code>Semaphore/CountDownLatch</code> ), <code>EXCLUSIVE</code> 独占模式 (只有一个线程能执行，如 <code>ReentrantLock</code>)</p><blockquote><p><code>Node</code>  的几种等待状态:</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** waitStatus value to indicate thread has cancelled */</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CANCELLED =  <span class="number">1</span>;</span><br><span class="line"><span class="comment">/** waitStatus value to indicate successor&#x27;s thread needs unparking */</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> SIGNAL    = -<span class="number">1</span>;</span><br><span class="line"><span class="comment">/** waitStatus value to indicate thread is waiting on condition */</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CONDITION = -<span class="number">2</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * waitStatus value to indicate the next acquireShared should</span></span><br><span class="line"><span class="comment"> * unconditionally propagate</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PROPAGATE = -<span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Status field, taking on only the values:</span></span><br><span class="line"><span class="comment"> *   SIGNAL:     The successor of this node is (or will soon be)</span></span><br><span class="line"><span class="comment"> *               blocked (via park), so the current node must</span></span><br><span class="line"><span class="comment"> *               unpark its successor when it releases or</span></span><br><span class="line"><span class="comment"> *               cancels. To avoid races, acquire methods must</span></span><br><span class="line"><span class="comment"> *               first indicate they need a signal,</span></span><br><span class="line"><span class="comment"> *               then retry the atomic acquire, and then,</span></span><br><span class="line"><span class="comment"> *               on failure, block.</span></span><br><span class="line"><span class="comment"> *   CANCELLED:  This node is cancelled due to timeout or interrupt.</span></span><br><span class="line"><span class="comment"> *               Nodes never leave this state. In particular,</span></span><br><span class="line"><span class="comment"> *               a thread with cancelled node never again blocks.</span></span><br><span class="line"><span class="comment"> *   CONDITION:  This node is currently on a condition queue.</span></span><br><span class="line"><span class="comment"> *               It will not be used as a sync queue node</span></span><br><span class="line"><span class="comment"> *               until transferred, at which time the status</span></span><br><span class="line"><span class="comment"> *               will be set to 0. (Use of this value here has</span></span><br><span class="line"><span class="comment"> *               nothing to do with the other uses of the</span></span><br><span class="line"><span class="comment"> *               field, but simplifies mechanics.)</span></span><br><span class="line"><span class="comment"> *   PROPAGATE:  A releaseShared should be propagated to other</span></span><br><span class="line"><span class="comment"> *               nodes. This is set (for head node only) in</span></span><br><span class="line"><span class="comment"> *               doReleaseShared to ensure propagation</span></span><br><span class="line"><span class="comment"> *               continues, even if other operations have</span></span><br><span class="line"><span class="comment"> *               since intervened.</span></span><br><span class="line"><span class="comment"> *   0:          None of the above</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * The values are arranged numerically to simplify use.</span></span><br><span class="line"><span class="comment"> * Non-negative values mean that a node doesn&#x27;t need to</span></span><br><span class="line"><span class="comment"> * signal. So, most code doesn&#x27;t need to check for particular</span></span><br><span class="line"><span class="comment"> * values, just for sign.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * The field is initialized to 0 for normal sync nodes, and</span></span><br><span class="line"><span class="comment"> * CONDITION for condition nodes.  It is modified using CAS</span></span><br><span class="line"><span class="comment"> * (or when possible, unconditional volatile writes).</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">volatile</span> <span class="keyword">int</span> waitStatus;</span><br></pre></td></tr></table></figure><ul><li><strong>SIGNAL</strong> 此节点后面的节点已（或即将）被阻塞（通过<code>park</code>），因此当前节点在释放或取消时必须断开后面的节点, 为了避免竞争，<code>acquire</code> 方法时前面的节点必须是 <code>SIGNAL</code> 状态，然后重试原子 <code>acquire</code>，然后在失败时阻塞。</li><li><strong>CANCELLED</strong> 由于超时或中断，此节点被取消。节点一旦被取消了就不会再改变状态。特别是，取消节点的线程不会再阻塞。</li><li><strong>CONDITION</strong> 此节点当前在条件队列中。标记为 <code>CONDITION</code> 的节点会被移动到一个特殊的条件等待队列（此时状态将设置为<strong>0</strong>），直到条件时才会被重新移动到同步等待队列 。（此处使用此值与字段的其他用途无关，但简化了机制。）</li><li><strong>PROPAGATE</strong> 传播：应将 <code>releaseShared</code> 传播到其他节点。这是在 <code>doReleaseShared</code> 中设置的（仅适用于头部节点），以确保传播继续，即使此后有其他操作介入。</li><li><strong>0</strong> 非负值表示节点不需要发出信号。所以，大多数代码不需要检查特定的值，只需要检查符号。对于正常同步节点，该字段初始化为<strong>0</strong>；对于条件节点，该字段初始化为条件。它是使用<code>CAS</code>修改的（或者在可能的情况下，使用无条件的<code>volatile</code>写入）。</li></ul><blockquote><p><code>Node</code> 的前驱和后继节点</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Link to predecessor node that current node/thread relies on</span></span><br><span class="line"><span class="comment"> * for checking waitStatus. Assigned during enqueuing, and nulled</span></span><br><span class="line"><span class="comment"> * out (for sake of GC) only upon dequeuing.  Also, upon</span></span><br><span class="line"><span class="comment"> * cancellation of a predecessor, we short-circuit while</span></span><br><span class="line"><span class="comment"> * finding a non-cancelled one, which will always exist</span></span><br><span class="line"><span class="comment"> * because the head node is never cancelled: A node becomes</span></span><br><span class="line"><span class="comment"> * head only as a result of successful acquire. A</span></span><br><span class="line"><span class="comment"> * cancelled thread never succeeds in acquiring, and a thread only</span></span><br><span class="line"><span class="comment"> * cancels itself, not any other node.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">volatile</span> Node prev;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Link to the successor node that the current node/thread</span></span><br><span class="line"><span class="comment"> * unparks upon release. Assigned during enqueuing, adjusted</span></span><br><span class="line"><span class="comment"> * when bypassing cancelled predecessors, and nulled out (for</span></span><br><span class="line"><span class="comment"> * sake of GC) when dequeued.  The enq operation does not</span></span><br><span class="line"><span class="comment"> * assign next field of a predecessor until after attachment,</span></span><br><span class="line"><span class="comment"> * so seeing a null next field does not necessarily mean that</span></span><br><span class="line"><span class="comment"> * node is at end of queue. However, if a next field appears</span></span><br><span class="line"><span class="comment"> * to be null, we can scan prev&#x27;s from the tail to</span></span><br><span class="line"><span class="comment"> * double-check.  The next field of cancelled nodes is set to</span></span><br><span class="line"><span class="comment"> * point to the node itself instead of null, to make life</span></span><br><span class="line"><span class="comment"> * easier for isOnSyncQueue.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">volatile</span> Node next;</span><br></pre></td></tr></table></figure><blockquote><p>当前队列节点的线程</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The thread that enqueued this node.  Initialized on</span></span><br><span class="line"><span class="comment"> * construction and nulled out after use.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">volatile</span> Thread thread;</span><br></pre></td></tr></table></figure><blockquote><p><code>nextWaiter</code> 下一个等待节点(<code>conditon</code>等待队列的会用到),或者一个特殊的 <code>SHARED</code> 值。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Link to next node waiting on condition, or the special</span></span><br><span class="line"><span class="comment"> * value SHARED.  Because condition queues are accessed only</span></span><br><span class="line"><span class="comment"> * when holding in exclusive mode, we just need a simple</span></span><br><span class="line"><span class="comment"> * linked queue to hold nodes while they are waiting on</span></span><br><span class="line"><span class="comment"> * conditions. They are then transferred to the queue to</span></span><br><span class="line"><span class="comment"> * re-acquire. And because conditions can only be exclusive,</span></span><br><span class="line"><span class="comment"> * we save a field by using special value to indicate shared</span></span><br><span class="line"><span class="comment"> * mode.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Node nextWaiter;</span><br></pre></td></tr></table></figure><blockquote><p><code>Node</code> 中的方法</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns true if node is waiting in shared mode.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">isShared</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> nextWaiter == SHARED;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns previous node, or throws NullPointerException if null.</span></span><br><span class="line"><span class="comment"> * Use when predecessor cannot be null.  The null check could</span></span><br><span class="line"><span class="comment"> * be elided, but is present to help the VM.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> the predecessor of this node</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">final</span> Node <span class="title">predecessor</span><span class="params">()</span> <span class="keyword">throws</span> NullPointerException </span>&#123;</span><br><span class="line">    Node p = prev;</span><br><span class="line">    <span class="keyword">if</span> (p == <span class="keyword">null</span>)</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NullPointerException();</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>isShared</strong> 判断 <code>SHARED</code> 是否等于 <code>nextWaiter</code></li><li><strong>predecessor</strong> 获取当前节点的前驱节点, 如果前驱节点为空抛出空指针异常</li></ul><blockquote><p><code>Node</code> 的构造方法</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Node() &#123;    <span class="comment">// Used to establish initial head or SHARED marker</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Node(Thread thread, Node mode) &#123;     <span class="comment">// Used by addWaiter</span></span><br><span class="line">    <span class="keyword">this</span>.nextWaiter = mode;</span><br><span class="line">    <span class="keyword">this</span>.thread = thread;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Node(Thread thread, <span class="keyword">int</span> waitStatus) &#123; <span class="comment">// Used by Condition</span></span><br><span class="line">    <span class="keyword">this</span>.waitStatus = waitStatus;</span><br><span class="line">    <span class="keyword">this</span>.thread = thread;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Node</code> 有三个构造函数，默认无参构造函数、指定模式构造函数(用于新增等待节点)，指定等待状态的构造函数(用于 <code>conditon</code> 等待队列)</p><blockquote><p><code>AQS</code> 维护一个双向链表的 <code>FIFO</code>队列。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Head of the wait queue, lazily initialized.  Except for</span></span><br><span class="line"><span class="comment"> * initialization, it is modified only via method setHead.  Note:</span></span><br><span class="line"><span class="comment"> * If head exists, its waitStatus is guaranteed not to be</span></span><br><span class="line"><span class="comment"> * CANCELLED.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">transient</span> <span class="keyword">volatile</span> Node head;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Tail of the wait queue, lazily initialized.  Modified only via</span></span><br><span class="line"><span class="comment"> * method enq to add new wait node.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">transient</span> <span class="keyword">volatile</span> Node tail;</span><br></pre></td></tr></table></figure><h3 id="自定义资源共享方式"><a class="markdownIt-Anchor" href="#自定义资源共享方式"></a> 自定义资源共享方式</h3><h4 id="获取资源"><a class="markdownIt-Anchor" href="#获取资源"></a> 获取资源</h4><p>共享模式资源获取:</p><ol><li>多个线程通过调用 <code>tryAcquireShared</code> 方法获取共享资源，返回值大于等于<strong>0</strong>则获取资源成功,返回值小于<strong>0</strong>则获取失败。</li><li>当前线程获取共享资源失败后，通过调用 <code>addWaiter</code> 方法把该线程封装为 <code>Node</code> 节点，并设置该节点为共享模式。然后把该节点添加到队列的尾部。</li><li>添加到尾部后,判断该节点的前驱节点是不是头节点，如果前驱节点是头节点，那么该节点的前驱节点出队列并获取共享资源,同时调用 <code>setHeadAndPropagate</code> 方法把该节点设置为新的头节点,同时唤醒队列中所有共享类型的节点,去获取共享资源。如果获取失败，则再次加入到队列中。</li><li>如果该节点的前驱节点不是头节点,那么通过<strong>for</strong>循环进行自旋转等待,直到当前节点的前驱节点是头节点，结束自旋。</li></ol><p>独占模式资源获取：</p><ol><li>多个线程通过调用 <code>tryAcquire</code> 方法获取独占资源，返回值为 <code>true</code> 则获取资源成功,返回值为 <code>false</code> 则获取失败。</li><li>当前线程获取共享资源失败后，通过调用 <code>addWaiter</code> 方法把该线程封装为 <code>Node</code> 节点，并设置该节点为独占模式。然后把该节点添加到队列的尾部。</li><li>添加到尾部后,判断该节点的前驱节点是不是头节点，如果前驱节点是头节点，继续调用 <code>tryAcquire</code> 获取资源，获取成功将当前节点设置为头节点并返回 <code>interrupted</code>(是否被中断)</li><li>如果该节点的前驱节点不是头节点，那么通过<strong>for</strong>循环进行自旋转等待,直到当前节点的前驱节点是头节点，结束自旋。</li></ol><blockquote><p>由此可见共享模式和独占模式获取资源的流程不同点就是在设置头节点。共享模式下回调用 <code>setHeadAndPropagete</code> 方法,该方法会同时唤醒队列中所有共享类型的节点,去获取共享资源</p></blockquote><h4 id="释放资源"><a class="markdownIt-Anchor" href="#释放资源"></a> 释放资源</h4><p>共享模式资源释放:</p><ol><li>通过调用 <code>tryReleaseShared</code> 方法释放共享资源，返回值为 <code>true</code> 则释放资源成功,返回值为 <code>false</code> 则释放失败</li><li>当前线程获取释放资源成功后，调用 <code>doReleaseShared</code> 方法，唤醒队列中所有共享类型的节点,去获取共享资源</li></ol><p>独占模式资源释放：</p><ol><li>通过调用 <code>tryRelease</code> 方法释放共享资源，返回值为 <code>true</code> 则释放资源成功,返回值为 <code>false</code> 则释放失败。</li><li>当前线程获取释放资源成功后，且后继节点的等待状态不为<strong>0</strong>，调用 <code>unparkSuccessor</code> 方法，唤醒后继节点线程</li></ol><blockquote><p>不同的自定义同步器争用资源的方式也不同。自定义同步器在实现时只需要实现资源 <code>state</code> 的获取与释放方式即可，至于具体线程等待队列的维护（如获取资源失败入队/唤醒出队等），<code>AQS</code> 已经在顶层实现好了。自定义同步器实现时主要实现以下几种方法：</p></blockquote><ul><li><strong>isHeldExclusively()</strong>：该线程是否正在独占资源。只有用到 <code>condition</code> 才需要去实现它。</li><li><strong>tryAcquire(int)</strong>：独占方式。尝试获取资源，成功则返回 <code>true</code>，失败则返回 <code>false</code>。</li><li><strong>tryRelease(int)</strong>：独占方式。尝试释放资源，成功则返回 <code>true</code>，失败则返回 <code>false</code>。</li><li><strong>tryAcquireShared(int)</strong>：共享方式。尝试获取资源。负数表示失败；<strong>0</strong>表示成功，但没有剩余可用资源；正数表示成功，且有剩余资源。</li><li><strong>tryReleaseShared(int)</strong>：共享方式。尝试释放资源，如果释放后允许唤醒后续等待结点返回 <code>true</code>，否则返回 <code>false</code>。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Main exported methods</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Attempts to acquire in exclusive mode. This method should query</span></span><br><span class="line"><span class="comment"> * if the state of the object permits it to be acquired in the</span></span><br><span class="line"><span class="comment"> * exclusive mode, and if so to acquire it.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;This method is always invoked by the thread performing</span></span><br><span class="line"><span class="comment"> * acquire.  If this method reports failure, the acquire method</span></span><br><span class="line"><span class="comment"> * may queue the thread, if it is not already queued, until it is</span></span><br><span class="line"><span class="comment"> * signalled by a release from some other thread. This can be used</span></span><br><span class="line"><span class="comment"> * to implement method &#123;<span class="doctag">@link</span> Lock#tryLock()&#125;.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;The default</span></span><br><span class="line"><span class="comment"> * implementation throws &#123;<span class="doctag">@link</span> UnsupportedOperationException&#125;.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> arg the acquire argument. This value is always the one</span></span><br><span class="line"><span class="comment"> *        passed to an acquire method, or is the value saved on entry</span></span><br><span class="line"><span class="comment"> *        to a condition wait.  The value is otherwise uninterpreted</span></span><br><span class="line"><span class="comment"> *        and can represent anything you like.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="doctag">@code</span> true&#125; if successful. Upon success, this object has</span></span><br><span class="line"><span class="comment"> *         been acquired.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> IllegalMonitorStateException if acquiring would place this</span></span><br><span class="line"><span class="comment"> *         synchronizer in an illegal state. This exception must be</span></span><br><span class="line"><span class="comment"> *         thrown in a consistent fashion for synchronization to work</span></span><br><span class="line"><span class="comment"> *         correctly.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> UnsupportedOperationException if exclusive mode is not supported</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">tryAcquire</span><span class="params">(<span class="keyword">int</span> arg)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Attempts to set the state to reflect a release in exclusive</span></span><br><span class="line"><span class="comment"> * mode.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;This method is always invoked by the thread performing release.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;The default implementation throws</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@link</span> UnsupportedOperationException&#125;.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> arg the release argument. This value is always the one</span></span><br><span class="line"><span class="comment"> *        passed to a release method, or the current state value upon</span></span><br><span class="line"><span class="comment"> *        entry to a condition wait.  The value is otherwise</span></span><br><span class="line"><span class="comment"> *        uninterpreted and can represent anything you like.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="doctag">@code</span> true&#125; if this object is now in a fully released</span></span><br><span class="line"><span class="comment"> *         state, so that any waiting threads may attempt to acquire;</span></span><br><span class="line"><span class="comment"> *         and &#123;<span class="doctag">@code</span> false&#125; otherwise.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> IllegalMonitorStateException if releasing would place this</span></span><br><span class="line"><span class="comment"> *         synchronizer in an illegal state. This exception must be</span></span><br><span class="line"><span class="comment"> *         thrown in a consistent fashion for synchronization to work</span></span><br><span class="line"><span class="comment"> *         correctly.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> UnsupportedOperationException if exclusive mode is not supported</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">tryRelease</span><span class="params">(<span class="keyword">int</span> arg)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Attempts to acquire in shared mode. This method should query if</span></span><br><span class="line"><span class="comment"> * the state of the object permits it to be acquired in the shared</span></span><br><span class="line"><span class="comment"> * mode, and if so to acquire it.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;This method is always invoked by the thread performing</span></span><br><span class="line"><span class="comment"> * acquire.  If this method reports failure, the acquire method</span></span><br><span class="line"><span class="comment"> * may queue the thread, if it is not already queued, until it is</span></span><br><span class="line"><span class="comment"> * signalled by a release from some other thread.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;The default implementation throws &#123;<span class="doctag">@link</span></span></span><br><span class="line"><span class="comment"> * UnsupportedOperationException&#125;.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> arg the acquire argument. This value is always the one</span></span><br><span class="line"><span class="comment"> *        passed to an acquire method, or is the value saved on entry</span></span><br><span class="line"><span class="comment"> *        to a condition wait.  The value is otherwise uninterpreted</span></span><br><span class="line"><span class="comment"> *        and can represent anything you like.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> a negative value on failure; zero if acquisition in shared</span></span><br><span class="line"><span class="comment"> *         mode succeeded but no subsequent shared-mode acquire can</span></span><br><span class="line"><span class="comment"> *         succeed; and a positive value if acquisition in shared</span></span><br><span class="line"><span class="comment"> *         mode succeeded and subsequent shared-mode acquires might</span></span><br><span class="line"><span class="comment"> *         also succeed, in which case a subsequent waiting thread</span></span><br><span class="line"><span class="comment"> *         must check availability. (Support for three different</span></span><br><span class="line"><span class="comment"> *         return values enables this method to be used in contexts</span></span><br><span class="line"><span class="comment"> *         where acquires only sometimes act exclusively.)  Upon</span></span><br><span class="line"><span class="comment"> *         success, this object has been acquired.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> IllegalMonitorStateException if acquiring would place this</span></span><br><span class="line"><span class="comment"> *         synchronizer in an illegal state. This exception must be</span></span><br><span class="line"><span class="comment"> *         thrown in a consistent fashion for synchronization to work</span></span><br><span class="line"><span class="comment"> *         correctly.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> UnsupportedOperationException if shared mode is not supported</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">int</span> <span class="title">tryAcquireShared</span><span class="params">(<span class="keyword">int</span> arg)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Attempts to set the state to reflect a release in shared mode.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;This method is always invoked by the thread performing release.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;The default implementation throws</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@link</span> UnsupportedOperationException&#125;.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> arg the release argument. This value is always the one</span></span><br><span class="line"><span class="comment"> *        passed to a release method, or the current state value upon</span></span><br><span class="line"><span class="comment"> *        entry to a condition wait.  The value is otherwise</span></span><br><span class="line"><span class="comment"> *        uninterpreted and can represent anything you like.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="doctag">@code</span> true&#125; if this release of shared mode may permit a</span></span><br><span class="line"><span class="comment"> *         waiting acquire (shared or exclusive) to succeed; and</span></span><br><span class="line"><span class="comment"> *         &#123;<span class="doctag">@code</span> false&#125; otherwise</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> IllegalMonitorStateException if releasing would place this</span></span><br><span class="line"><span class="comment"> *         synchronizer in an illegal state. This exception must be</span></span><br><span class="line"><span class="comment"> *         thrown in a consistent fashion for synchronization to work</span></span><br><span class="line"><span class="comment"> *         correctly.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> UnsupportedOperationException if shared mode is not supported</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">tryReleaseShared</span><span class="params">(<span class="keyword">int</span> arg)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns &#123;<span class="doctag">@code</span> true&#125; if synchronization is held exclusively with</span></span><br><span class="line"><span class="comment"> * respect to the current (calling) thread.  This method is invoked</span></span><br><span class="line"><span class="comment"> * upon each call to a non-waiting &#123;<span class="doctag">@link</span> ConditionObject&#125; method.</span></span><br><span class="line"><span class="comment"> * (Waiting methods instead invoke &#123;<span class="doctag">@link</span> #release&#125;.)</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;The default implementation throws &#123;<span class="doctag">@link</span></span></span><br><span class="line"><span class="comment"> * UnsupportedOperationException&#125;. This method is invoked</span></span><br><span class="line"><span class="comment"> * internally only within &#123;<span class="doctag">@link</span> ConditionObject&#125; methods, so need</span></span><br><span class="line"><span class="comment"> * not be defined if conditions are not used.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="doctag">@code</span> true&#125; if synchronization is held exclusively;</span></span><br><span class="line"><span class="comment"> *         &#123;<span class="doctag">@code</span> false&#125; otherwise</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> UnsupportedOperationException if conditions are not supported</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">isHeldExclusively</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>接下来我们开始看 <code>AQS</code> 的源码实现。依照 <code>acquire-release</code>、<code>acquireShared-releaseShared</code> 的次序来。</p></blockquote><h3 id="tryacquire"><a class="markdownIt-Anchor" href="#tryacquire"></a> tryAcquire</h3><p>需要独占模式的自定义 <code>AQS</code> 子类去实现的</p><h4 id="acquireint"><a class="markdownIt-Anchor" href="#acquireint"></a> acquire(int)</h4><p><code>acquire</code> 是一种以独占方式获取资源，如果获取到资源，线程直接返回，否则进入等待队列，直到获取到资源为止，且整个过程忽略中断的影响。该方法是独占模式下线程获取共享资源的顶层入口。获取到资源后，线程就可以去执行其临界区代码了。下面是 <code>acquire()</code> 的源码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Acquires in exclusive mode, ignoring interrupts.  Implemented</span></span><br><span class="line"><span class="comment"> * by invoking at least once &#123;<span class="doctag">@link</span> #tryAcquire&#125;,</span></span><br><span class="line"><span class="comment"> * returning on success.  Otherwise the thread is queued, possibly</span></span><br><span class="line"><span class="comment"> * repeatedly blocking and unblocking, invoking &#123;<span class="doctag">@link</span></span></span><br><span class="line"><span class="comment"> * #tryAcquire&#125; until success.  This method can be used</span></span><br><span class="line"><span class="comment"> * to implement method &#123;<span class="doctag">@link</span> Lock#lock&#125;.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> arg the acquire argument.  This value is conveyed to</span></span><br><span class="line"><span class="comment"> *            &#123;<span class="doctag">@link</span> #tryAcquire&#125; but is otherwise uninterpreted and</span></span><br><span class="line"><span class="comment"> *            can represent anything you like.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">acquire</span><span class="params">(<span class="keyword">int</span> arg)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!tryAcquire(arg) &amp;&amp;</span><br><span class="line">        acquireQueued(addWaiter(Node.EXCLUSIVE), arg))</span><br><span class="line">        selfInterrupt();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>首先调用 <code>tryAcquire(int)</code> 尝试竞争锁资源</li><li>如果竞争失败就会调用 <code>acquireQueued</code>, <code>addWaiter</code> 将该线程加入等待队列的尾部，并标记为独占模式；</li><li>如果等待过程中线程被终端就调用 <code>selfInterrupt</code>,调用当前线程的 <code>interrupt</code> 方法</li></ol><h4 id="addwaiternode"><a class="markdownIt-Anchor" href="#addwaiternode"></a> addWaiter(Node)</h4><blockquote><p>该方法用于将当前线程根据不同的模式（<code>Node.EXCLUSIVE</code> 互斥模式、<code>Node.SHARED</code> 共享模式）加入到等待队列的队尾，并返回当前线程所在的结点。<br />如果队列不为空，则以通过 <code>compareAndSetTail</code> 方法以 <code>CAS</code> 的方式将当前线程节点加入到等待队列的末尾。否则，通过 <code>enq(node)</code> 方法初始化一个等待队列，并返回当前节点。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Creates and enqueues node for current thread and given mode.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> mode Node.EXCLUSIVE for exclusive, Node.SHARED for shared</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> the new node</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> Node <span class="title">addWaiter</span><span class="params">(Node mode)</span> </span>&#123;</span><br><span class="line">    Node node = <span class="keyword">new</span> Node(Thread.currentThread(), mode);</span><br><span class="line">    <span class="comment">// Try the fast path of enq; backup to full enq on failure</span></span><br><span class="line">    Node pred = tail;</span><br><span class="line">    <span class="keyword">if</span> (pred != <span class="keyword">null</span>) &#123;</span><br><span class="line">        node.prev = pred;</span><br><span class="line">        <span class="keyword">if</span> (compareAndSetTail(pred, node)) &#123;</span><br><span class="line">            pred.next = node;</span><br><span class="line">            <span class="keyword">return</span> node;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    enq(node);</span><br><span class="line">    <span class="keyword">return</span> node;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="enqnode"><a class="markdownIt-Anchor" href="#enqnode"></a> enq(Node)</h4><p><code>enq(node)</code> 用于将当前节点插入等待队列，如果队列为空，则初始化当前队列。整个过程以 <code>CAS</code> 自旋的方式进行，直到成功加入队尾为止。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Inserts node into queue, initializing if necessary. See picture above.</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> node the node to insert</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span> node&#x27;s predecessor</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> Node <span class="title">enq</span><span class="params">(<span class="keyword">final</span> Node node)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">        Node t = tail;</span><br><span class="line">        <span class="keyword">if</span> (t == <span class="keyword">null</span>) &#123; <span class="comment">// Must initialize</span></span><br><span class="line">            <span class="keyword">if</span> (compareAndSetHead(<span class="keyword">new</span> Node()))</span><br><span class="line">                tail = head;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            node.prev = t;</span><br><span class="line">            <span class="keyword">if</span> (compareAndSetTail(t, node)) &#123;</span><br><span class="line">                t.next = node;</span><br><span class="line">                <span class="keyword">return</span> t;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="acquirequeuednode-int"><a class="markdownIt-Anchor" href="#acquirequeuednode-int"></a> acquireQueued(Node, int)</h4><p><code>acquireQueued()</code> 用于队列中的线程自旋地以独占且不可中断的方式获取同步状态（<code>acquire</code>），直到拿到锁之后再返回。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Acquires in exclusive uninterruptible mode for thread already in</span></span><br><span class="line"><span class="comment">  * queue. Used by condition wait methods as well as acquire.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> node the node</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> arg the acquire argument</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span> &#123;<span class="doctag">@code</span> true&#125; if interrupted while waiting</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">acquireQueued</span><span class="params">(<span class="keyword">final</span> Node node, <span class="keyword">int</span> arg)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span> failed = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">boolean</span> interrupted = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">            <span class="keyword">final</span> Node p = node.predecessor();</span><br><span class="line">            <span class="keyword">if</span> (p == head &amp;&amp; tryAcquire(arg)) &#123;</span><br><span class="line">                setHead(node);</span><br><span class="line">                p.next = <span class="keyword">null</span>; <span class="comment">// help GC</span></span><br><span class="line">                failed = <span class="keyword">false</span>;</span><br><span class="line">                <span class="keyword">return</span> interrupted;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (shouldParkAfterFailedAcquire(p, node) &amp;&amp;</span><br><span class="line">                parkAndCheckInterrupt())</span><br><span class="line">                interrupted = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (failed)</span><br><span class="line">            cancelAcquire(node);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>如果当前节点已经成为头结点，尝试获取锁（<code>tryAcquire</code>）成功，然后返回</li><li>否则检查当前节点是否应该被 <code>park</code>，然后将该线程 <code>park</code> 并且检查当前线程是否可以被中断。</li></ol><h4 id="shouldparkafterfailedacquirenode-node"><a class="markdownIt-Anchor" href="#shouldparkafterfailedacquirenode-node"></a> shouldParkAfterFailedAcquire(Node, Node)</h4><p><code>shouldParkAfterFailedAcquire</code> 方法通过对当前节点的前一个节点的状态进行判断，对当前节点做出不同的操作，至于每个 <code>Node</code> 的状态表示，可以参考接口文档。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Checks and updates status for a node that failed to acquire.</span></span><br><span class="line"><span class="comment">  * Returns true if thread should block. This is the main signal</span></span><br><span class="line"><span class="comment">  * control in all acquire loops.  Requires that pred == node.prev.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> pred node&#x27;s predecessor holding status</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> node the node</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span> &#123;<span class="doctag">@code</span> true&#125; if thread should block</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">shouldParkAfterFailedAcquire</span><span class="params">(Node pred, Node node)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ws = pred.waitStatus;</span><br><span class="line">    <span class="keyword">if</span> (ws == Node.SIGNAL)</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * This node has already set status asking a release</span></span><br><span class="line"><span class="comment">         * to signal it, so it can safely park.</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (ws &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * Predecessor was cancelled. Skip over predecessors and</span></span><br><span class="line"><span class="comment">         * indicate retry.</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            node.prev = pred = pred.prev;</span><br><span class="line">        &#125; <span class="keyword">while</span> (pred.waitStatus &gt; <span class="number">0</span>);</span><br><span class="line">        pred.next = node;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * waitStatus must be 0 or PROPAGATE.  Indicate that we</span></span><br><span class="line"><span class="comment">         * need a signal, but don&#x27;t park yet.  Caller will need to</span></span><br><span class="line"><span class="comment">         * retry to make sure it cannot acquire before parking.</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        compareAndSetWaitStatus(pred, ws, Node.SIGNAL);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>如果前驱节点状态为 <code>SIGNAL</code>, 返回 <code>true</code> 标识当前节点需要被 <code>park</code></li><li>如果前驱节点状态大于 <code>0</code>,即前驱节点状态为 <code>CANCELLED</code>, 循环遍历对前驱节点遍历, 移除 <code>CANCELLED</code> 节点</li><li>否则就说明前驱节点状态为 <code>0</code> 或者 <code>PROPAGATE</code> 状态, 通过 <code>CAS</code> 设置前驱节点的状态为 <code>SIGNAL</code></li></ol><h4 id="parkandcheckinterrup"><a class="markdownIt-Anchor" href="#parkandcheckinterrup"></a> parkAndCheckInterrup()</h4><p>该方法让线程去休息，真正进入等待状态。<code>park()</code> 会让当前线程进入 <code>waiting</code> 状态。在此状态下，可以通过 <code>unpark()</code> 和 <code>interrupt()</code>。需要注意的是，<code>Thread.interrupted()</code> 会清除当前线程的中断标记位。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Convenience method to park and then check if interrupted</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span> &#123;<span class="doctag">@code</span> true&#125; if interrupted</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">parkAndCheckInterrupt</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    LockSupport.park(<span class="keyword">this</span>);</span><br><span class="line">    <span class="keyword">return</span> Thread.interrupted();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="tryrelease"><a class="markdownIt-Anchor" href="#tryrelease"></a> tryRelease</h3><p>需要独占模式的自定义 <code>AQS</code> 子类去实现的。</p><h4 id="releaseint"><a class="markdownIt-Anchor" href="#releaseint"></a> release(int)</h4><blockquote><p><code>release</code> 方法是独占模式下线程释放共享资源的顶层入口。它会释放指定量的资源，如果彻底释放了（即 <code>state=0</code>）,它会唤醒等待队列里的其他线程来获取资源。这也正是 <code>unlock()</code> 的语义，当然不仅仅只限于 <code>unlock()</code>。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Releases in exclusive mode.  Implemented by unblocking one or</span></span><br><span class="line"><span class="comment">  * more threads if &#123;<span class="doctag">@link</span> #tryRelease&#125; returns true.</span></span><br><span class="line"><span class="comment">  * This method can be used to implement method &#123;<span class="doctag">@link</span> Lock#unlock&#125;.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> arg the release argument.  This value is conveyed to</span></span><br><span class="line"><span class="comment">  *        &#123;<span class="doctag">@link</span> #tryRelease&#125; but is otherwise uninterpreted and</span></span><br><span class="line"><span class="comment">  *        can represent anything you like.</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span> the value returned from &#123;<span class="doctag">@link</span> #tryRelease&#125;</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">release</span><span class="params">(<span class="keyword">int</span> arg)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (tryRelease(arg)) &#123;</span><br><span class="line">        Node h = head;</span><br><span class="line">        <span class="keyword">if</span> (h != <span class="keyword">null</span> &amp;&amp; h.waitStatus != <span class="number">0</span>)</span><br><span class="line">            unparkSuccessor(h);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="unparksuccessornode"><a class="markdownIt-Anchor" href="#unparksuccessornode"></a> unparkSuccessor(Node)</h4><p>如果存在后继节点, 唤醒后继节点</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Wakes up node&#x27;s successor, if one exists.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> node the node</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">unparkSuccessor</span><span class="params">(Node node)</span> </span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * If status is negative (i.e., possibly needing signal) try</span></span><br><span class="line"><span class="comment">     * to clear in anticipation of signalling.  It is OK if this</span></span><br><span class="line"><span class="comment">     * fails or if status is changed by waiting thread.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">int</span> ws = node.waitStatus;</span><br><span class="line">    <span class="keyword">if</span> (ws &lt; <span class="number">0</span>)</span><br><span class="line">        compareAndSetWaitStatus(node, ws, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * Thread to unpark is held in successor, which is normally</span></span><br><span class="line"><span class="comment">     * just the next node.  But if cancelled or apparently null,</span></span><br><span class="line"><span class="comment">     * traverse backwards from tail to find the actual</span></span><br><span class="line"><span class="comment">     * non-cancelled successor.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    Node s = node.next;</span><br><span class="line">    <span class="keyword">if</span> (s == <span class="keyword">null</span> || s.waitStatus &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        s = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">for</span> (Node t = tail; t != <span class="keyword">null</span> &amp;&amp; t != node; t = t.prev)</span><br><span class="line">            <span class="keyword">if</span> (t.waitStatus &lt;= <span class="number">0</span>)</span><br><span class="line">                s = t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (s != <span class="keyword">null</span>)</span><br><span class="line">        LockSupport.unpark(s.thread);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>如果当前节点的等待状态小于 <code>0</code>,通过 <code>CAS</code> 将等待状态置 <code>0</code></li><li>如果后继节点为 <code>null</code> 或 后继节点等待状态为 <code>CANCELLED</code>, 从队列尾部开始寻找最靠前的不为 <code>null</code> 且等待状态不为 <code>CANCELLED</code> 的节点</li><li>如果找到指定节点, 就 <code>unpark</code> 唤醒该节点的线程</li></ol><h3 id="tryacquireshared"><a class="markdownIt-Anchor" href="#tryacquireshared"></a> tryAcquireShared</h3><p>需要共享模式的自定义 <code>AQS</code> 子类去实现的。</p><h4 id="acquiresharedint"><a class="markdownIt-Anchor" href="#acquiresharedint"></a> acquireShared(int)</h4><p>该方法是共享模式下线程获取共享资源的顶层入口。它会获取指定量的资源，获取成功则直接返回，获取失败则进入等待队列，直到获取到资源为止，整个过程忽略中断。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Acquires in shared mode, ignoring interrupts.  Implemented by</span></span><br><span class="line"><span class="comment"> * first invoking at least once &#123;<span class="doctag">@link</span> #tryAcquireShared&#125;,</span></span><br><span class="line"><span class="comment"> * returning on success.  Otherwise the thread is queued, possibly</span></span><br><span class="line"><span class="comment"> * repeatedly blocking and unblocking, invoking &#123;<span class="doctag">@link</span></span></span><br><span class="line"><span class="comment"> * #tryAcquireShared&#125; until success.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> arg the acquire argument.  This value is conveyed to</span></span><br><span class="line"><span class="comment"> *        &#123;<span class="doctag">@link</span> #tryAcquireShared&#125; but is otherwise uninterpreted</span></span><br><span class="line"><span class="comment"> *        and can represent anything you like.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">acquireShared</span><span class="params">(<span class="keyword">int</span> arg)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (tryAcquireShared(arg) &lt; <span class="number">0</span>)</span><br><span class="line">        doAcquireShared(arg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="doacquiresharedint"><a class="markdownIt-Anchor" href="#doacquiresharedint"></a> doAcquireShared(int)</h4><p>将当前线程加入等待队列尾部休息，直到其他线程释放资源唤醒自己，自己成功拿到相应量的资源后才返回。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Acquires in shared uninterruptible mode.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> arg the acquire argument</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">doAcquireShared</span><span class="params">(<span class="keyword">int</span> arg)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> Node node = addWaiter(Node.SHARED);</span><br><span class="line">    <span class="keyword">boolean</span> failed = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">boolean</span> interrupted = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">            <span class="keyword">final</span> Node p = node.predecessor();</span><br><span class="line">            <span class="keyword">if</span> (p == head) &#123;</span><br><span class="line">                <span class="keyword">int</span> r = tryAcquireShared(arg);</span><br><span class="line">                <span class="keyword">if</span> (r &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">                    setHeadAndPropagate(node, r);</span><br><span class="line">                    p.next = <span class="keyword">null</span>; <span class="comment">// help GC</span></span><br><span class="line">                    <span class="keyword">if</span> (interrupted)</span><br><span class="line">                        selfInterrupt();</span><br><span class="line">                    failed = <span class="keyword">false</span>;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (shouldParkAfterFailedAcquire(p, node) &amp;&amp;</span><br><span class="line">                parkAndCheckInterrupt())</span><br><span class="line">                interrupted = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (failed)</span><br><span class="line">            cancelAcquire(node);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此方法在 <code>setHead()</code> 的基础上多了一步，就是自己苏醒的同时，如果条件符合（比如还有剩余资源），还会去唤醒后继结点，毕竟是共享模式！</p><h3 id="tryreleaseshared"><a class="markdownIt-Anchor" href="#tryreleaseshared"></a> tryReleaseShared</h3><p>需要共享模式的自定义 <code>AQS</code> 子类去实现的。</p><h4 id="releasesharedint"><a class="markdownIt-Anchor" href="#releasesharedint"></a> releaseShared(int)</h4><p>该方法是共享模式下线程释放共享资源的顶层入口。它会释放指定量的资源，如果成功释放且允许唤醒等待线程，它会唤醒等待队列里的其他线程来获取资源。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Releases in shared mode.  Implemented by unblocking one or more</span></span><br><span class="line"><span class="comment"> * threads if &#123;<span class="doctag">@link</span> #tryReleaseShared&#125; returns true.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> arg the release argument.  This value is conveyed to</span></span><br><span class="line"><span class="comment"> *        &#123;<span class="doctag">@link</span> #tryReleaseShared&#125; but is otherwise uninterpreted</span></span><br><span class="line"><span class="comment"> *        and can represent anything you like.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> the value returned from &#123;<span class="doctag">@link</span> #tryReleaseShared&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">releaseShared</span><span class="params">(<span class="keyword">int</span> arg)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (tryReleaseShared(arg)) &#123;</span><br><span class="line">        doReleaseShared();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note warning flat"><p><strong>注意</strong>:</p><p>独占模式下的 <code>tryRelease()</code> 在完全释放掉资源（<code>state=0</code>）后，才会返回 <code>true</code> 去唤醒其他线程，这主要是基于独占下可重入的考量；而共享模式下的 <code>releaseShared()</code> 则没有这种要求，共享模式实质就是控制一定量的线程并发执行，那么拥有资源的线程在释放掉部分资源时就可以唤醒后继等待结点。</p></div><h4 id="doreleaseshared"><a class="markdownIt-Anchor" href="#doreleaseshared"></a> doReleaseShared()</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Release action for shared mode -- signals successor and ensures</span></span><br><span class="line"><span class="comment"> * propagation. (Note: For exclusive mode, release just amounts</span></span><br><span class="line"><span class="comment"> * to calling unparkSuccessor of head if it needs signal.)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">doReleaseShared</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * Ensure that a release propagates, even if there are other</span></span><br><span class="line"><span class="comment">     * in-progress acquires/releases.  This proceeds in the usual</span></span><br><span class="line"><span class="comment">     * way of trying to unparkSuccessor of head if it needs</span></span><br><span class="line"><span class="comment">     * signal. But if it does not, status is set to PROPAGATE to</span></span><br><span class="line"><span class="comment">     * ensure that upon release, propagation continues.</span></span><br><span class="line"><span class="comment">     * Additionally, we must loop in case a new node is added</span></span><br><span class="line"><span class="comment">     * while we are doing this. Also, unlike other uses of</span></span><br><span class="line"><span class="comment">     * unparkSuccessor, we need to know if CAS to reset status</span></span><br><span class="line"><span class="comment">     * fails, if so rechecking.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">        Node h = head;</span><br><span class="line">        <span class="keyword">if</span> (h != <span class="keyword">null</span> &amp;&amp; h != tail) &#123;</span><br><span class="line">            <span class="keyword">int</span> ws = h.waitStatus;</span><br><span class="line">            <span class="keyword">if</span> (ws == Node.SIGNAL) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!compareAndSetWaitStatus(h, Node.SIGNAL, <span class="number">0</span>))</span><br><span class="line">                    <span class="keyword">continue</span>;            <span class="comment">// loop to recheck cases</span></span><br><span class="line">                unparkSuccessor(h);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (ws == <span class="number">0</span> &amp;&amp;</span><br><span class="line">                        !compareAndSetWaitStatus(h, <span class="number">0</span>, Node.PROPAGATE))</span><br><span class="line">                <span class="keyword">continue</span>;                <span class="comment">// loop on failed CAS</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (h == head)                   <span class="comment">// loop if head changed</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>逻辑是一个死循环，每次循环中重新读取一次 <code>head</code>，然后保存在局部变量h中，再配合 <code>if(h == head) break;</code>，这样，循环检测到<code>head</code> 没有变化时就会退出循环。注意，<code>head</code> 变化一定是因为：<code>acquire thread</code> 被唤醒，之后它成功获取锁，然后 <code>setHead</code> 设置了新 <code>head</code>。而且注意，只有通过 <code>if(h == head) break</code>; 即 <code>head</code> 不变才能退出循环，不然会执行多次循环。</li><li><code>if (h != null &amp;&amp; h != tail)</code> 判断队列是否至少有两个 <code>node</code>，如果队列从来没有初始化过（<code>head</code> 为 <code>null</code>），或者 <code>head</code> 就是 <code>tail</code>，那么中间逻辑直接不走，直接判断 <code>head</code> 是否变化了。</li><li>如果队列中有两个或以上个 <code>node</code>，那么检查局部变量h的状态：<ul><li>如果状态为 <code>SIGNAL</code>，说明 <code>h</code> 的后继是需要被通知的。通过对 <code>CAS</code> 操作结果取反，将 <code>compareAndSetWaitStatus(h, Node.SIGNAL, 0)</code> 和 <code>unparkSuccessor(h)</code> 绑定在了一起。说明了只要 <code>head</code> 成功得从 <code>SIGNAL</code> 修改为 <code>0</code>，那么 <code>head</code> 的后继的代表线程肯定会被唤醒了。</li><li>如果状态为 <code>0</code>，说明h的后继所代表的线程已经被唤醒或即将被唤醒，并且这个中间状态即将消失，要么由于 <code>acquire thread</code> 获取锁失败再次设置 <code>head</code>为 <code>SIGNAL</code> 并再次阻塞，要么由于 <code>acquire thread</code> 获取锁成功而将自己（<code>head</code> 后继）设置为新 <code>head</code>并且只要 <code>head</code> 后继不是队尾，那么新 <code>head</code> 肯定为 <code>SIGNAL</code>。所以设置这种中间状态的 <code>head</code> 的 <code>status</code> 为 <code>PROPAGATE</code>，让其 <code>status</code> 又变成负数，这样可能被被唤醒线程检测到。</li><li>如果状态为 <code>PROPAGATE</code>，直接判断 <code>head</code> 是否变化。</li></ul></li><li>两个 <code>continue</code> 保证了进入那两个分支后，只有当 <code>CAS</code> 操作成功后，才可能去执行 <code>if(h == head) break;</code>，才可能退出循环。<br /><code>if(h == head) break;</code> 保证了，只要在某个循环的过程中有线程刚获取了锁且设置了新 <code>head</code>，就会再次循环。目的当然是为了再次执行 <code>unparkSuccessor(h)</code>，即唤醒队列中第一个等待的线程。</li></ul><h2 id="condition"><a class="markdownIt-Anchor" href="#condition"></a> Condition</h2><p>在 <code>AQS</code> 中不光有等待队列，还有一个条件队列,<code>AQS</code> 提供了一个 <code>Condition</code> 接口的实现 <code>ConditionObject</code>。</p><blockquote><p><code>Condition</code> 的作用是对锁进行更精确的控制。<code>Condition</code> 中的 <code>await()</code>、<code>signal()</code>、<code>signalAll()</code>方法相当于 <code>Object</code> 的 <code>wait()</code>、<code>notify()</code>、<code>notifyAll()</code> 方法。不同的是，<code>Object</code> 中的 <code>wait()</code>、<code>notify()</code>、<code>notifyAll()</code> 方法是和&quot;同步锁&quot;( <code>synchronized</code> 关键字)捆绑使用的；而 <code>Condition</code> 是需要与 <code>Lock</code> 捆绑使用的。</p></blockquote><h3 id="await"><a class="markdownIt-Anchor" href="#await"></a> await</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Implements interruptible condition wait.</span></span><br><span class="line"><span class="comment"> * &lt;ol&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt; If current thread is interrupted, throw InterruptedException.</span></span><br><span class="line"><span class="comment"> * &lt;li&gt; Save lock state returned by &#123;<span class="doctag">@link</span> #getState&#125;.</span></span><br><span class="line"><span class="comment"> * &lt;li&gt; Invoke &#123;<span class="doctag">@link</span> #release&#125; with saved state as argument,</span></span><br><span class="line"><span class="comment"> *      throwing IllegalMonitorStateException if it fails.</span></span><br><span class="line"><span class="comment"> * &lt;li&gt; Block until signalled or interrupted.</span></span><br><span class="line"><span class="comment"> * &lt;li&gt; Reacquire by invoking specialized version of</span></span><br><span class="line"><span class="comment"> *      &#123;<span class="doctag">@link</span> #acquire&#125; with saved state as argument.</span></span><br><span class="line"><span class="comment"> * &lt;li&gt; If interrupted while blocked in step 4, throw InterruptedException.</span></span><br><span class="line"><span class="comment"> * &lt;/ol&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">await</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (Thread.interrupted())</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> InterruptedException();</span><br><span class="line">    Node node = addConditionWaiter();</span><br><span class="line">    <span class="keyword">int</span> savedState = fullyRelease(node);</span><br><span class="line">    <span class="keyword">int</span> interruptMode = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!isOnSyncQueue(node)) &#123;</span><br><span class="line">        LockSupport.park(<span class="keyword">this</span>);</span><br><span class="line">        <span class="keyword">if</span> ((interruptMode = checkInterruptWhileWaiting(node)) != <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (acquireQueued(node, savedState) &amp;&amp; interruptMode != THROW_IE)</span><br><span class="line">        interruptMode = REINTERRUPT;</span><br><span class="line">    <span class="keyword">if</span> (node.nextWaiter != <span class="keyword">null</span>) <span class="comment">// clean up if cancelled</span></span><br><span class="line">        unlinkCancelledWaiters();</span><br><span class="line">    <span class="keyword">if</span> (interruptMode != <span class="number">0</span>)</span><br><span class="line">        reportInterruptAfterWait(interruptMode);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>如果当前线程被中断,抛出 <code>InterruptedException</code>异常</li><li>首先调用<code>addConditionWaiter</code>方法把当前节点（线程）添加到条件队列</li><li>调用<code>fullyRelease</code>方法释放已经持有的锁（就是在调用 <code>condition.await()</code> 之前持有的 <code>lock.lock()</code>锁），并返回释放前的锁状态</li><li>调用 <code>isOnSyncQueue</code> 方法检查当前节点是否在同步队列中,直到当前节点被加入到同步队列或者被中断</li><li>调用 <code>acquireQueued</code> 方法将当前节点加入到同步队列中</li><li>如果 <code>nextWaiter</code> 不为空,说明节点在获取锁时由于遭遇异常或者被中断而被取消，此时需要清除 <code>CANCELLED</code> 节点</li><li>如果 <code>interruptMode</code> 不等于 <code>0</code>,说明当前节点被中断, 调用 <code>reportInterruptAfterWait</code> 处理中断</li></ol><h3 id="addconditionwaiter"><a class="markdownIt-Anchor" href="#addconditionwaiter"></a> addConditionWaiter</h3><blockquote><p>创建一个 <code>Condition</code> 节点,并加入到 <code>firstWaiter</code>.</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Adds a new waiter to wait queue.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> its new wait node</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> Node <span class="title">addConditionWaiter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Node t = lastWaiter;</span><br><span class="line">    <span class="comment">// If lastWaiter is cancelled, clean out.</span></span><br><span class="line">    <span class="keyword">if</span> (t != <span class="keyword">null</span> &amp;&amp; t.waitStatus != Node.CONDITION) &#123;</span><br><span class="line">        unlinkCancelledWaiters();</span><br><span class="line">        t = lastWaiter;</span><br><span class="line">    &#125;</span><br><span class="line">    Node node = <span class="keyword">new</span> Node(Thread.currentThread(), Node.CONDITION);</span><br><span class="line">    <span class="keyword">if</span> (t == <span class="keyword">null</span>)</span><br><span class="line">        firstWaiter = node;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        t.nextWaiter = node;</span><br><span class="line">    lastWaiter = node;</span><br><span class="line">    <span class="keyword">return</span> node;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="signal"><a class="markdownIt-Anchor" href="#signal"></a> signal</h3><p><code>signal</code> 方法唤醒条件队列中的节点。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Moves the longest-waiting thread, if one exists, from the</span></span><br><span class="line"><span class="comment"> * wait queue for this condition to the wait queue for the</span></span><br><span class="line"><span class="comment"> * owning lock.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> IllegalMonitorStateException if &#123;<span class="doctag">@link</span> #isHeldExclusively&#125;</span></span><br><span class="line"><span class="comment"> *         returns &#123;<span class="doctag">@code</span> false&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">signal</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!isHeldExclusively())</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalMonitorStateException();</span><br><span class="line">    Node first = firstWaiter;</span><br><span class="line">    <span class="keyword">if</span> (first != <span class="keyword">null</span>)</span><br><span class="line">        doSignal(first);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>如果当前节点已经获取到锁资源,抛出 <code>IllegalMonitorStateException</code> 异常</li><li>获取等待头节点，如果该节点不为空, <code>doSignal</code>唤醒节点线程</li></ol><h3 id="dosignal"><a class="markdownIt-Anchor" href="#dosignal"></a> doSignal</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Removes and transfers nodes until hit non-cancelled one or</span></span><br><span class="line"><span class="comment"> * null. Split out from signal in part to encourage compilers</span></span><br><span class="line"><span class="comment"> * to inline the case of no waiters.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> first (non-null) the first node on condition queue</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">doSignal</span><span class="params">(Node first)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> ( (firstWaiter = first.nextWaiter) == <span class="keyword">null</span>)</span><br><span class="line">            lastWaiter = <span class="keyword">null</span>;</span><br><span class="line">        first.nextWaiter = <span class="keyword">null</span>;</span><br><span class="line">    &#125; <span class="keyword">while</span> (!transferForSignal(first) &amp;&amp;</span><br><span class="line">                (first = firstWaiter) != <span class="keyword">null</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>更新 <code>firstWaiter</code> 为条件队列的下一个等待节点；</li><li>解除当前节点的链接；</li><li>调用 <code>transferForSignal</code> 方法把当前节点转移到等待队列，等待获取锁</li></ol><h3 id="transferforsignal"><a class="markdownIt-Anchor" href="#transferforsignal"></a> transferForSignal</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Transfers a node from a condition queue onto sync queue.</span></span><br><span class="line"><span class="comment"> * Returns true if successful.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> node the node</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> true if successfully transferred (else the node was</span></span><br><span class="line"><span class="comment"> * cancelled before signal)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">transferForSignal</span><span class="params">(Node node)</span> </span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * If cannot change waitStatus, the node has been cancelled.</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">    <span class="keyword">if</span> (!compareAndSetWaitStatus(node, Node.CONDITION, <span class="number">0</span>))</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * Splice onto queue and try to set waitStatus of predecessor to</span></span><br><span class="line"><span class="comment">        * indicate that thread is (probably) waiting. If cancelled or</span></span><br><span class="line"><span class="comment">        * attempt to set waitStatus fails, wake up to resync (in which</span></span><br><span class="line"><span class="comment">        * case the waitStatus can be transiently and harmlessly wrong).</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">    Node p = enq(node);</span><br><span class="line">    <span class="keyword">int</span> ws = p.waitStatus;</span><br><span class="line">    <span class="keyword">if</span> (ws &gt; <span class="number">0</span> || !compareAndSetWaitStatus(p, ws, Node.SIGNAL))</span><br><span class="line">        LockSupport.unpark(node.thread);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li><code>CAS</code> 将节点等待状态设为 <code>0</code>,如果设置失败,返回 <code>false</code></li><li><code>enq</code> 将节点插入到等待队列，并返回前驱节点</li><li>如果前继节点被取消或者设置前继节点的状态失败，则直接唤醒当前节点线程尝试获取锁</li></ol><h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2><ul><li><a href="https://www.cnblogs.com/waterystone/p/4920797.html">Java并发之AQS详解</a></li><li><a href="https://www.jianshu.com/p/a8d27ba5db49">JUC源码分析—AQS</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
          <category> concurrent </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> concurrent </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu16.0.4安装Cloudera Manager5.16.2</title>
      <link href="post/cloudare-manager-install.html"/>
      <url>post/cloudare-manager-install.html</url>
      
        <content type="html"><![CDATA[<h2 id="环境及软件准备"><a class="markdownIt-Anchor" href="#环境及软件准备"></a> 环境及软件准备</h2><h3 id="环境准备"><a class="markdownIt-Anchor" href="#环境准备"></a> 环境准备</h3><p><code>Ubuntu16.04 Server</code> x 3</p><table><thead><tr><th style="text-align:center">HostName</th><th style="text-align:center">IP</th><th style="text-align:center">Server</th><th style="text-align:center">Agent</th></tr></thead><tbody><tr><td style="text-align:center">node1</td><td style="text-align:center">192.168.8.101</td><td style="text-align:center">√</td><td style="text-align:center">√</td></tr><tr><td style="text-align:center">node2</td><td style="text-align:center">192.168.8.201</td><td style="text-align:center"></td><td style="text-align:center">√</td></tr><tr><td style="text-align:center">node3</td><td style="text-align:center">192.168.8.202</td><td style="text-align:center"></td><td style="text-align:center">√</td></tr></tbody></table><h3 id="下载安装的软件"><a class="markdownIt-Anchor" href="#下载安装的软件"></a> 下载安装的软件</h3><ul><li>下载 <code>cloudera manage</code>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://archive.cloudera.com/cm5/cm/5/cloudera-manager-xenial-cm5.16.2_amd64.tar.gz</span><br></pre></td></tr></table></figure></li><li>下载离线资源包（parcels):  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget http://archive.cloudera.com/cdh5/parcels/5.16.2/CDH-5.16.2-1.cdh5.16.2.p0.8-xenial.parcel.sha1</span><br><span class="line">wget http://archive.cloudera.com/cdh5/parcels/5.16.2/CDH-5.16.2-1.cdh5.16.2.p0.8-xenial.parcel</span><br><span class="line">wget http://archive.cloudera.com/cdh5/parcels/5.16.2/manifest.json</span><br></pre></td></tr></table></figure>将资源包移动到 <code>/opt/cloudera/parcels-repo</code> 目录  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 首先创建目录(所有节点)</span></span><br><span class="line">sudo mkdir /opt/cloudera /opt/cloudera/parcels /opt/cloudera/parcel-repo</span><br><span class="line"><span class="comment"># 将 parcel 文件移动到 parcel-repo 目录(主节点)</span></span><br><span class="line">sudo mv CDH-5.16.2-1.cdh5.16.2.p0.8-xenial.parcel* /opt/cloudera/parcel-repo/</span><br><span class="line">sudo mv manifest.json /opt/cloudera/parcel-repo/</span><br></pre></td></tr></table></figure></li><li><code>Mysql</code>驱动<code>Jar</code>包:  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://maven.aliyun.com/repository/public/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar</span><br><span class="line"><span class="comment"># 然后将下载的 jar 移动到 /usr/share/java 下</span></span><br><span class="line">sudo mv mysql-connector-java-8.0.16.jar /usr/share/java/mysql-connector-java.jar</span><br></pre></td></tr></table></figure></li></ul><h3 id="主机的环境配置"><a class="markdownIt-Anchor" href="#主机的环境配置"></a> 主机的环境配置</h3><h4 id="修改hostname所有节点"><a class="markdownIt-Anchor" href="#修改hostname所有节点"></a> 修改hostname(所有节点)</h4><ul><li>主节点 <code>node1</code> - 修改 <code>/etc/hostname</code> 为 <code>node1</code></li><li>从节点 <code>node2</code> - 修改 <code>/etc/hostname</code> 为 <code>node2</code></li><li>从节点 <code>node3</code> - 修改 <code>/etc/hostname</code> 为 <code>node3</code></li><li>使 <code>hostname</code> 生效 - 执行命令 <code>sudo /etc/init.d/hostname.sh start</code></li></ul><h4 id="修改hosts所有节点"><a class="markdownIt-Anchor" href="#修改hosts所有节点"></a> 修改hosts(所有节点)</h4><p>在 <code>/etc/hosts</code> 文件添加以下内容:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">192.168.8.101 node1</span><br><span class="line">192.168.8.201 node2</span><br><span class="line">192.168.8.202 node3</span><br></pre></td></tr></table></figure><h4 id="更新软件包所有节点"><a class="markdownIt-Anchor" href="#更新软件包所有节点"></a> 更新软件包(所有节点)</h4><p>更新软件包之前修改为国内镜像源,修改 <code>/etc/apt/source.list</code> 文件为以下内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; xenial main</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; xenial main</span><br><span class="line"></span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; xenial-updates main</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; xenial-updates main</span><br><span class="line"></span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; xenial universe</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; xenial universe</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; xenial-updates universe</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; xenial-updates universe</span><br><span class="line"></span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; xenial-security main</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; xenial-security main</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; xenial-security universe</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; xenial-security universe</span><br></pre></td></tr></table></figure><p>更新源:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><h4 id="关闭防火墙所有节点"><a class="markdownIt-Anchor" href="#关闭防火墙所有节点"></a> 关闭防火墙(所有节点)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw <span class="built_in">disable</span></span><br><span class="line">sudo apt-get remove iptables</span><br></pre></td></tr></table></figure><h4 id="python27所有节点"><a class="markdownIt-Anchor" href="#python27所有节点"></a> python2.7(所有节点)</h4><blockquote><p>如果未安装  <code>python2.7</code> 服务则先进行安装(所有节点)</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install python2.7 -y</span><br></pre></td></tr></table></figure><h3 id="创建cloudera-scm用户所有节点"><a class="markdownIt-Anchor" href="#创建cloudera-scm用户所有节点"></a> 创建cloudera-scm用户(所有节点)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo useradd --system --home=/opt/cm-5.15.1/run/cloudera-scm-server --shell=/bin/<span class="literal">false</span> --comment <span class="string">&quot;Cloudera SCM User&quot;</span> cloudera-scm</span><br></pre></td></tr></table></figure><h4 id="ssh服务配置所有节点"><a class="markdownIt-Anchor" href="#ssh服务配置所有节点"></a> ssh服务配置(所有节点)</h4><ul><li>如果未安装 <code>ssh</code> 服务则先进行安装(所有节点)  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install openssh-server openssh-client -y</span><br></pre></td></tr></table></figure></li><li>修改 <code>/etc/ssh/sshd_config</code> 配置文件(所有节点)  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PermitRootLogin yes</span><br><span class="line">PasswordAuthentication yes</span><br></pre></td></tr></table></figure></li><li>然后重启 <code>ssh</code> 服务  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/ssh restart</span><br></pre></td></tr></table></figure></li><li>配置各节点之间的免密登陆（主节点）  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br><span class="line">ssh-copy-id node1</span><br><span class="line">ssh-copy-id node2</span><br><span class="line">ssh-copy-id node3</span><br></pre></td></tr></table></figure></li></ul><h4 id="配置ntpdate服务所有节点"><a class="markdownIt-Anchor" href="#配置ntpdate服务所有节点"></a> 配置ntpdate服务(所有节点)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ntp ntpdata -y <span class="comment"># 安装 ntp服务</span></span><br><span class="line">sudo ntpdate -u ntp.aliyun.com <span class="comment"># 使用阿里云时间同步服务器</span></span><br><span class="line">sudo hwclock -w <span class="comment"># 将osclock写入hwclock</span></span><br></pre></td></tr></table></figure><h4 id="安装jdk所有节点"><a class="markdownIt-Anchor" href="#安装jdk所有节点"></a> 安装jdk(所有节点)</h4><ul><li>将 <code>jdk-8u271-linux-x64.tar.gz</code> 上传到服务器上</li><li>解压到 <code>/usr/local/java</code> 下</li><li>配置环境变量,在 <code>/etc/profile</code> 添加如下配置：  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/<span class="built_in">local</span>/java/jdk1.8.0_271</span><br><span class="line"><span class="built_in">export</span> JRE_HOME=<span class="variable">$&#123;JAVA_HOME&#125;</span>/jre </span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$&#123;JAVA_HOME&#125;</span>/lib:<span class="variable">$&#123;JRE_HOME&#125;</span>/lib</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$&#123;JAVA_HOME&#125;</span>/bin:&#123;JRE_HOME&#125;/bin</span><br></pre></td></tr></table></figure></li><li>执行 <code>source /etc/profile</code> 使配置生效</li></ul><h4 id="安装配置mysql主节点"><a class="markdownIt-Anchor" href="#安装配置mysql主节点"></a> 安装配置mysql(主节点)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install mysql-server-5.7 -y</span><br></pre></td></tr></table></figure><h4 id="配置cm数据库账户"><a class="markdownIt-Anchor" href="#配置cm数据库账户"></a> 配置CM数据库账户</h4><blockquote><p>执行  mysql -uroot -p<code>输入</code>root` 用户密码</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">bennie@node1:~$ mysql -uroot -p</span><br><span class="line">Enter password:</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 716</span><br><span class="line">Server version: 5.7.32-0ubuntu0.16.04.1 (Ubuntu)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><blockquote><p>执行创建数据库 <code>sql</code></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># 创建scm数据库,账户名为scm,密码为ok。</span><br><span class="line"><span class="keyword">CREATE</span> DATABASE scm <span class="keyword">DEFAULT</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">DEFAULT</span> <span class="keyword">COLLATE</span> utf8_general_ci;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> scm.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;scm&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;ok&#x27;</span>;</span><br><span class="line"># 创建amon数据库,账户名为amon,密码为ok。</span><br><span class="line"><span class="keyword">CREATE</span> DATABASE amon <span class="keyword">DEFAULT</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">DEFAULT</span> <span class="keyword">COLLATE</span> utf8_general_ci;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> amon.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;amon&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;ok&#x27;</span>;</span><br><span class="line"># 创建rman数据库,账户名为rman,密码为ok。</span><br><span class="line"><span class="keyword">CREATE</span> DATABASE rman <span class="keyword">DEFAULT</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">DEFAULT</span> <span class="keyword">COLLATE</span> utf8_general_ci;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> rman.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;rman&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;ok&#x27;</span>;</span><br><span class="line"># 创建hue数据库,账户名为hue,密码为ok。</span><br><span class="line"><span class="keyword">CREATE</span> DATABASE hue <span class="keyword">DEFAULT</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">DEFAULT</span> <span class="keyword">COLLATE</span> utf8_general_ci;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> hue.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;hue&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;ok&#x27;</span>;</span><br><span class="line"># 创建hive数据库,账户名为hive,密码为ok。</span><br><span class="line"><span class="keyword">CREATE</span> DATABASE hive <span class="keyword">DEFAULT</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">DEFAULT</span> <span class="keyword">COLLATE</span> utf8_general_ci;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> hive.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;hive&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;ok&#x27;</span>;</span><br><span class="line"># 创建nav数据库,账户名为nav,密码为ok。</span><br><span class="line"><span class="keyword">CREATE</span> DATABASE nav <span class="keyword">DEFAULT</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">DEFAULT</span> <span class="keyword">COLLATE</span> utf8_general_ci;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> nav.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;nav&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;ok&#x27;</span>;</span><br><span class="line"># 创建oozie数据库,账户名为oozie,密码为ok。</span><br><span class="line"><span class="keyword">CREATE</span> DATABASE oozie <span class="keyword">DEFAULT</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">DEFAULT</span> <span class="keyword">COLLATE</span> utf8_general_ci;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> oozie.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;oozie&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;ok&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="离线安装cm"><a class="markdownIt-Anchor" href="#离线安装cm"></a> 离线安装CM</h2><blockquote><p>本文采用的是离线安装方式,将下载的 <code>cloudera-manager-xenial-cm5.16.2_amd64.tar.gz</code> 解压到  <code>/opt/cloudera</code> 目录下</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo tar -zxvf cloudera-manager-xenial-cm5.16.2_amd64.tar.gz -C /opt/cloudera/</span><br></pre></td></tr></table></figure><h3 id="修改agentini配置文件"><a class="markdownIt-Anchor" href="#修改agentini配置文件"></a> 修改agent.ini配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /opt/cloudera/cm-5.16.2/etc/cloudera-scm-agent/config.ini</span><br></pre></td></tr></table></figure><p>修改为以下内容:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">server_host&#x3D;node1</span><br><span class="line">server_port&#x3D;7182</span><br></pre></td></tr></table></figure><h3 id="修改cloudera-scm-server"><a class="markdownIt-Anchor" href="#修改cloudera-scm-server"></a> 修改cloudera-scm-server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /opt/cloudera/cm-5.16.2/etc/init.d/cloudera-scm-server </span><br></pre></td></tr></table></figure><p>在文件头部添加 <code>JAVA_HOME</code> 环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/<span class="built_in">local</span>/java/jdk1.8.0_271</span><br></pre></td></tr></table></figure><h3 id="修改cloudera-scm-agent"><a class="markdownIt-Anchor" href="#修改cloudera-scm-agent"></a> 修改cloudera-scm-agent</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /opt/cloudera/cm-5.16.2/etc/init.d/cloudera-scm-agent </span><br></pre></td></tr></table></figure><p>在文件头部添加 <code>CMF_VAR</code> 变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> CMF_VAR=/opt/cloudera/cm-5.16.2</span><br></pre></td></tr></table></figure><h3 id="分发到其他节点"><a class="markdownIt-Anchor" href="#分发到其他节点"></a> 分发到其他节点</h3><blockquote><p>复制 <code>node1</code>节点的 <code>cm-5.16.2</code>文件夹至 <code>node2</code> 和 <code>node3</code>节点</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp -r /opt/cloudera/cm-5.16.2 node2:/opt/cloudera/</span><br><span class="line">scp -r /opt/cloudera/cm-5.16.2 node3:/opt/cloudera/</span><br></pre></td></tr></table></figure><blockquote><p>复制 <code>node1</code>节点的 <code>parcel-repo</code>文件夹至 <code>node2</code> 和 <code>node3</code>节点</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo scp -r /opt/cloudera/parcel-repo node2:/opt/cloudera/</span><br><span class="line">sudo scp -r /opt/cloudera/parcel-repo node3:/opt/cloudera/</span><br></pre></td></tr></table></figure><h3 id="初始化scm数据库主节点"><a class="markdownIt-Anchor" href="#初始化scm数据库主节点"></a> 初始化scm数据库(主节点)</h3><blockquote><p>初始化之前先添加 <code>JAVA_HOME</code> 环境变量</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /opt/cloudera/cm-5.16.2/share/cmf/schema/scm_prepare_database.sh</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/<span class="built_in">local</span>/java/jdk1.8.0_271</span><br></pre></td></tr></table></figure><ul><li>重新配置时，防止 <code>scm</code> 数据库已经存在而终止执行命令可加参数 <code>-f</code></li><li>脚本用来创建和配置 <code>CMS</code> 需要的数据库。各参数是指：<ul><li><strong>mysql</strong>：数据库用的是 <code>mysql</code>，如果安装过程中用的 <code>oracle</code>，那么该参数就应该改为 <code>oracle</code>。</li><li><strong>第一个scm</strong>：我们上面创建的数据库名。</li><li><strong>第二个scm</strong>：我们上面创建的数据库用户名。</li><li><strong>ok</strong>: 我们上面创建的数据库密码。</li></ul></li><li>最后四个参数分别是：数据库类型，数据库名，数据库用户名，数据库密码。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /opt/cloudera/cm-5.16.2/share/cmf/schema/scm_prepare_database.sh mysql scm scm ok</span><br></pre></td></tr></table></figure><h3 id="更改文件夹所有用户与用户组所有节点"><a class="markdownIt-Anchor" href="#更改文件夹所有用户与用户组所有节点"></a> 更改文件夹所有用户与用户组(所有节点)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R cloudera-scm:cloudera-scm /opt/cloudera/parcels</span><br><span class="line">sudo chown -R cloudera-scm:cloudera-scm /opt/cloudera/parcel-repo</span><br><span class="line">sudo chown -R cloudera-scm:cloudera-scm /opt/cloudera/cm-5.16.2</span><br></pre></td></tr></table></figure><h3 id="创建lib目录主节点"><a class="markdownIt-Anchor" href="#创建lib目录主节点"></a> 创建lib目录(主节点)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /var/lib/cloudera-scm-server</span><br><span class="line">sudo chown -R cloudera-scm:cloudera-scm /var/lib/cloudera-scm-server</span><br></pre></td></tr></table></figure><h3 id="启动cms主节点"><a class="markdownIt-Anchor" href="#启动cms主节点"></a> 启动CMS(主节点)</h3><p>在 <code>node1</code> 节点启动 <code>Cloudera Manager Server</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo /opt/cloudera/cm-5.16.2/etc/init.d/cloudera-scm-server start</span><br><span class="line"><span class="comment"># 查看日志</span></span><br><span class="line">sudo tail -f /opt/cloudera/cm-5.16.2/<span class="built_in">log</span>/cloudera-scm-server/cloudera-scm-server.log</span><br></pre></td></tr></table></figure><h3 id="创建run目录所有节点"><a class="markdownIt-Anchor" href="#创建run目录所有节点"></a> 创建run目录(所有节点)</h3><p>分别在 <code>node1</code>、<code>node2</code> 和 <code>node3</code> 创建 <code>/var/run/cloudera-scm-agent</code> 目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /var/run/cloudera-scm-agent</span><br><span class="line">sudo chown -R cloudera-scm:cloudera-scm /var/run/cloudera-scm-agent</span><br></pre></td></tr></table></figure><h3 id="启动cma所有节点"><a class="markdownIt-Anchor" href="#启动cma所有节点"></a> 启动CMA(所有节点)</h3><p>分别在 <code>node1</code>、<code>node2</code> 和 <code>node3</code> 节点启动 <code>Cloudera Manager Agent</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo /opt/cloudera/cm-5.16.2/etc/init.d/cloudera-scm-agent start</span><br><span class="line"><span class="comment"># 查看日志</span></span><br><span class="line">sudo tail -f /opt/cloudera/cm-5.16.2/<span class="built_in">log</span>/cloudera-scm-agent/cloudera-scm-agent.log</span><br></pre></td></tr></table></figure><h2 id="apt源安装"><a class="markdownIt-Anchor" href="#apt源安装"></a> apt源安装</h2><h3 id="添加cloudera仓库所有节点"><a class="markdownIt-Anchor" href="#添加cloudera仓库所有节点"></a> 添加Cloudera仓库(所有节点)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://archive.cloudera.com/cm5/ubuntu/xenial/amd64/cm/cloudera.list</span><br><span class="line">sudo mv cloudera.list /etc/apt/sources.list.d/cloudera-manager.list</span><br></pre></td></tr></table></figure><h3 id="安装仓库密钥所有节点"><a class="markdownIt-Anchor" href="#安装仓库密钥所有节点"></a> 安装仓库密钥(所有节点)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://archive.cloudera.com/cm5/ubuntu/xenial/amd64/cm/archive.key</span><br><span class="line">sudo apt-key add archive.key</span><br><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><h3 id="安装cms主节点"><a class="markdownIt-Anchor" href="#安装cms主节点"></a> 安装CMS(主节点)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install cloudera-manager-server -y</span><br></pre></td></tr></table></figure><h3 id="安装cma所有节点"><a class="markdownIt-Anchor" href="#安装cma所有节点"></a> 安装CMA(所有节点)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install cloudera-manager-agent -y</span><br></pre></td></tr></table></figure><h3 id="配置cma所有节点"><a class="markdownIt-Anchor" href="#配置cma所有节点"></a> 配置CMA(所有节点)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/cloudera-scm-agent/config.ini</span><br></pre></td></tr></table></figure><p>修改为如下配置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">server_host&#x3D;node1</span><br><span class="line">server_port&#x3D;7182 #若改端口被占用，改为其它端口</span><br></pre></td></tr></table></figure><h3 id="添加mysql连接库主节点"><a class="markdownIt-Anchor" href="#添加mysql连接库主节点"></a> 添加mysql连接库(主节点)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://maven.aliyun.com/repository/public/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar</span><br><span class="line"><span class="comment"># 然后将下载的 jar 移动到 /usr/share/java 下</span></span><br><span class="line">sudo mv mysql-connector-java-8.0.16.jar /usr/share/cmf/lib</span><br></pre></td></tr></table></figure><blockquote><p>若之前已尝试过安装，会有遗留的文件，删除：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rm -f /etc/cloudera-scm-server/db.* </span><br></pre></td></tr></table></figure><h3 id="初始化数据库"><a class="markdownIt-Anchor" href="#初始化数据库"></a> 初始化数据库</h3><p>为数据库初始化脚本添加环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /usr/share/cmf/schema/scm_prepare_database.sh</span><br></pre></td></tr></table></figure><p>在文件头部添加 <code>JAVA_HOME</code> 环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/<span class="built_in">local</span>/java/jdk1.8.0_271</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /usr/share/cmf/schema/scm_prepare_database.sh mysql scm scm ok</span><br></pre></td></tr></table></figure><h3 id="启动cms主节点-2"><a class="markdownIt-Anchor" href="#启动cms主节点-2"></a> 启动CMS(主节点)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/init.d/cloudera-scm-server </span><br></pre></td></tr></table></figure><p>在文件头部添加 <code>JAVA_HOME</code> 环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/<span class="built_in">local</span>/java/jdk1.8.0_271</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start cloudera-scm-server.service</span><br><span class="line"><span class="comment"># 查看日志</span></span><br><span class="line">sudo tail -f /var/<span class="built_in">log</span>/cloudera-scm-server/cloudera-scm-server.log</span><br></pre></td></tr></table></figure><h3 id="启动cma所有节点-2"><a class="markdownIt-Anchor" href="#启动cma所有节点-2"></a> 启动CMA(所有节点)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start cloudera-scm-agent.service </span><br><span class="line"><span class="comment"># 查看日志</span></span><br><span class="line">sudo tail -f /var/<span class="built_in">log</span>/cloudera-scm-agent/cloudera-scm-agent.log</span><br></pre></td></tr></table></figure><h2 id="图形化安装"><a class="markdownIt-Anchor" href="#图形化安装"></a> 图形化安装</h2><blockquote><p>进入 <code>CM</code> 管理界面： 通过 <code>http://node1:7180</code> 进入</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/cloudera-manager-login.png" alt="" /></p><p>默认用户名密码都是 <code>admin</code></p><blockquote><p>选择安装的主机：如果没有启动 <code>cloudera-scm-agent</code> 服务会出现部分节点不在以管理的主机中</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/cloudera-manager-hosts.png" alt="" /></p><blockquote><p>选择 <code>cdh</code> 的版本，选择自己下载在 <code>parcels-repo</code> 包中的 <code>cdh</code> 版本，这里应该选 <code>CDH 5.16.2-1.cdh5.16.2.p0.4</code></p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/cloudera-manager-login.png" alt="" /></p><blockquote><p>集群安装检查主机正确性，确保所有验证都为绿色</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/cloudare-manager-parcel-install.png" alt="" /></p><blockquote><p>集群安装配置</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/cloudera-manager-cluster-jdk-install.png" alt="" /></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/cloudera-manager-cluster-ssh-config.png" alt="" /></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/cloudera-manager-cluster-deploy.png" alt="" /></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/cloudera-manager-cluster-db-config.png" alt="" /></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/cloudera-manager-cluster-install-successful.png" alt="" /></p><h2 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h2><p><a href="https://blog.csdn.net/jsl481783335/article/details/102569650">Ubuntu16.0.4安装Cloudera Manager5.16.2</a><br /><a href="https://www.jianshu.com/p/a5086ae9090f"></a></p>]]></content>
      
      
      <categories>
          
          <category> cdh </category>
          
          <category> ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cdh </tag>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spark安装配置</title>
      <link href="post/spark-install.html"/>
      <url>post/spark-install.html</url>
      
        <content type="html"><![CDATA[<h2 id="准备"><a class="markdownIt-Anchor" href="#准备"></a> 准备</h2><p>我们已经部署好 <code>hadoop</code> 和 <code>hive</code>,下面开始部署安装 <code>spark</code>。</p><p>节点安排:</p><table><thead><tr><th style="text-align:center">Name</th><th style="text-align:center">Ip</th><th style="text-align:center">HostName</th></tr></thead><tbody><tr><td style="text-align:center">Master,Worker</td><td style="text-align:center">192.168.8.101</td><td style="text-align:center">master1</td></tr><tr><td style="text-align:center">Worker</td><td style="text-align:center">192.168.8.201</td><td style="text-align:center">slave1</td></tr><tr><td style="text-align:center">Worker</td><td style="text-align:center">192.168.8.202</td><td style="text-align:center">slave2</td></tr></tbody></table><blockquote><p>下载并解压 <code>scala</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://downloads.lightbend.com/scala/2.13.4/scala-2.13.4.tgz</span><br><span class="line">sudo mkdir /opt/scala</span><br><span class="line">sudo tar -zxvf scala-2.13.4.tgz -C /opt/scala/</span><br></pre></td></tr></table></figure><blockquote><p>下载并解压 <code>spark</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://downloads.apache.org/spark/spark-2.4.7/spark-2.4.7-bin-hadoop2.7.tgz</span><br><span class="line">tar -zxvf spark-2.4.7-bin-hadoop2.7.tgz -C /opt/bigdata/</span><br><span class="line">mv /opt/bigdata/spark-2.4.7-bin-hadoop2.7 /opt/bigdata/spark-2.4.7</span><br></pre></td></tr></table></figure><blockquote><p>配置环境变量</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export SCALA_HOME=/opt/scala/scala-2.13.4</span><br><span class="line">export SPARK_HOME=/opt/bigdata/spark-2.4.7</span><br><span class="line">PATH=$PATH:$SCALA_HOME/bin:$SPARK_HOME/bin</span><br></pre></td></tr></table></figure><p><code>source /etc/profile</code> 使配置生效</p><h2 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h2><blockquote><p>配置 <code>conf/slaves</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$SPARK_HOME</span></span><br><span class="line">cp conf/slaves.template  conf/slaves</span><br><span class="line">vim slaves</span><br></pre></td></tr></table></figure><p>加入集群节点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">master1</span><br><span class="line">slave1</span><br><span class="line">slave2</span><br></pre></td></tr></table></figure><blockquote><p>配置 <code>conf/spark-env.sh</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp conf/log4j.properties.template conf/log4j.properties</span><br><span class="line">cp conf/spark-env.sh.template conf/spark-env.sh</span><br><span class="line">vim conf/spark-env.sh</span><br></pre></td></tr></table></figure><p>加入如下环境配置内容,设置 <code>master1</code> 为 <code>Master</code> 节点：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/opt/java/jdk1.8.0_271</span><br><span class="line">export HADOOP_HOME=/opt/bigdata/hadoop-2.7.7</span><br><span class="line">export LD_LIBRARY_PATH=$HADOOP_HOME/lib/native</span><br><span class="line">export HADOOP_CONF_DIR=$HADOOP_HOME/etc/hadoop</span><br><span class="line">export YARN_CONF_DIR=$HADOOP_CONF_DIR</span><br><span class="line">export SPARK_MASTER_WEBUI_PORT=8080</span><br><span class="line">export SPARK_MASTER_IP=master1</span><br><span class="line">export SPARK_LOCAL_DIRS=/opt/scala/scala-2.13.4</span><br><span class="line">export SPARK_EXECUTOR_MEMORY=512M</span><br><span class="line">export SPARK_WORKER_MEMORY=128M</span><br><span class="line">export SPARK_DRIVER_MEMORY=512M</span><br><span class="line">export SPARK_MASTER_PORT=7077</span><br><span class="line">export SPARK_WORKER_CORES=1</span><br><span class="line">export SPARK_WORKER_INSTANCES=1</span><br></pre></td></tr></table></figure><blockquote><p>配置完成,同步到其他节点</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xsync file <span class="variable">$SPARK_HOME</span></span><br></pre></td></tr></table></figure><blockquote><p>启动 <code>spark</code> 集群</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">bennie@master1:/opt/bigdata/spark-2.4.7$ <span class="variable">$SPARK_HOME</span>/sbin/start-all.sh </span><br><span class="line">starting org.apache.spark.deploy.master.Master, logging to /opt/bigdata/spark-2.4.7/logs/spark-bennie-org.apache.spark.deploy.master.Master-1-master1.out</span><br><span class="line">slave2: starting org.apache.spark.deploy.worker.Worker, logging to /opt/bigdata/spark-2.4.7/logs/spark-bennie-org.apache.spark.deploy.worker.Worker-1-slave2.out</span><br><span class="line">slave1: starting org.apache.spark.deploy.worker.Worker, logging to /opt/bigdata/spark-2.4.7/logs/spark-bennie-org.apache.spark.deploy.worker.Worker-1-slave1.out</span><br><span class="line">master1: starting org.apache.spark.deploy.worker.Worker, logging to /opt/bigdata/spark-2.4.7/logs/spark-bennie-org.apache.spark.deploy.worker.Worker-1-master1.out</span><br></pre></td></tr></table></figure><h2 id="基本使用"><a class="markdownIt-Anchor" href="#基本使用"></a> 基本使用</h2><h3 id="spark-shell"><a class="markdownIt-Anchor" href="#spark-shell"></a> spark-shell</h3><blockquote><p>执行 <code>spark-shell --master spark://master1:7077</code> 命令，启动 <code>spark shell</code>。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">bennie@master1:~$ spark-shell --master spark://master1:7077</span><br><span class="line">21/01/13 23:36:42 WARN NativeCodeLoader: Unable to load native-hadoop library <span class="keyword">for</span> your platform... using builtin-java classes <span class="built_in">where</span> applicable</span><br><span class="line">Using Spark<span class="string">&#x27;s default log4j profile: org/apache/spark/log4j-defaults.properties</span></span><br><span class="line"><span class="string">Setting default log level to &quot;WARN&quot;.</span></span><br><span class="line"><span class="string">To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).</span></span><br><span class="line"><span class="string">Spark context Web UI available at http://master1:4040</span></span><br><span class="line"><span class="string">Spark context available as &#x27;</span>sc<span class="string">&#x27; (master = spark://master1:7077, app id = app-20210124233653-0000).</span></span><br><span class="line"><span class="string">Spark session available as &#x27;</span>spark<span class="string">&#x27;.</span></span><br><span class="line"><span class="string">Welcome to</span></span><br><span class="line"><span class="string">      ____              __</span></span><br><span class="line"><span class="string">     / __/__  ___ _____/ /__</span></span><br><span class="line"><span class="string">    _\ \/ _ \/ _ `/ __/  &#x27;</span>_/</span><br><span class="line">   /___/ .__/\_,_/_/ /_/\_\   version 2.4.7</span><br><span class="line">      /_/</span><br><span class="line"></span><br><span class="line">Using Scala version 2.11.12 (Java HotSpot(TM) 64-Bit Server VM, Java 1.8.0_271)</span><br><span class="line">Type <span class="keyword">in</span> expressions to have them evaluated.</span><br><span class="line">Type :<span class="built_in">help</span> <span class="keyword">for</span> more information.</span><br><span class="line"></span><br><span class="line">scala&gt;</span><br></pre></td></tr></table></figure><h3 id="pyspark"><a class="markdownIt-Anchor" href="#pyspark"></a> pyspark</h3><p>首先安装 <code>Anaconda3</code> - <a href="https://www.anaconda.com/products/individual#Downloads">下载地址</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">(base) ➜  ~ pip install pyspark==2.4.7 -i https://pypi.douban.com/simple</span><br><span class="line"></span><br><span class="line">(base) ➜  ~ pyspark --master spark://master1:7077</span><br><span class="line">Python 3.7.6 (default, Jan  8 2020, 20:23:39) [MSC v.1916 64 bit (AMD64)] :: Anaconda, Inc. on win32</span><br><span class="line">Type <span class="string">&quot;help&quot;</span>, <span class="string">&quot;copyright&quot;</span>, <span class="string">&quot;credits&quot;</span> or <span class="string">&quot;license&quot;</span> <span class="keyword">for</span> more information.</span><br><span class="line">Using Spark<span class="string">&#x27;s default log4j profile: org/apache/spark/log4j-defaults.properties</span></span><br><span class="line"><span class="string">Setting default log level to &quot;WARN&quot;.</span></span><br><span class="line"><span class="string">To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).</span></span><br><span class="line"><span class="string">Welcome to</span></span><br><span class="line"><span class="string">      ____              __</span></span><br><span class="line"><span class="string">     / __/__  ___ _____/ /__</span></span><br><span class="line"><span class="string">    _\ \/ _ \/ _ `/ __/  &#x27;</span>_/</span><br><span class="line">   /__ / .__/\_,_/_/ /_/\_\   version 2.4.7</span><br><span class="line">      /_/</span><br><span class="line"></span><br><span class="line">Using Python version 3.7.6 (default, Jan  8 2020 20:23:39)</span><br><span class="line">SparkSession available as <span class="string">&#x27;spark&#x27;</span>.</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hadoop </category>
          
          <category> spark </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hadoop </tag>
            
            <tag> spark </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hive2.3.8安装配置</title>
      <link href="post/hive-install.html"/>
      <url>post/hive-install.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>前面我们已经搭建了 <code>Hadoop</code> 环境,现在开始搭建 <code>Hive</code> 环境 - <code>Hive2.3.8</code> <a href="https://downloads.apache.org/hive/hive-2.3.8/apache-hive-2.3.8-bin.tar.gz">下载地址</a></p><h2 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h2><blockquote><p>下载并解压</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://downloads.apache.org/hive/hive-2.3.8/apache-hive-2.3.8-bin.tar.gz</span><br><span class="line">tar -zxvf apache-hive-2.3.8-bin.tar.gz -C /opt/bigdata</span><br><span class="line">mv /opt/bigdata/apache-hive-2.3.8-bin /opt/bigdata/hive-2.3.8</span><br></pre></td></tr></table></figure><blockquote><p>安装 <code>mysql</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y mysql-server-5.7</span><br></pre></td></tr></table></figure><p>输入 <code>root</code> 密码完成安装</p><blockquote><p>下载 mysql jdbc driver</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/bigdata/hive-2.3.8/lib</span><br><span class="line">wget https://maven.aliyun.com/repository/public/mysql/mysql-connector-java/8.0.20/mysql-connector-java-8.0.20.jar</span><br></pre></td></tr></table></figure><blockquote><p>配置环境变量</p></blockquote><p>在 <code>/etc/profile</code> 添加如下配置:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export HIVE_HOME=/opt/bigdata/hive-2.3.8</span><br><span class="line">PATH=$PATH:$HIVE_HOME/bin</span><br></pre></td></tr></table></figure><p><code>source /etc/profile</code> 使配置生效</p><blockquote><p>配置 <code>hive</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mv conf/hive-env.sh.template conf/hive-env.sh <span class="comment"># 重命名环境文件</span></span><br><span class="line">mv conf/hive-log4j2.properties.template conf/hive-log4j2.properties <span class="comment"># 重命名日志文件</span></span><br><span class="line">cp conf/hive-default.xml.template conf/hive-site.xml <span class="comment"># 拷贝生成 xml 文件</span></span><br></pre></td></tr></table></figure><p>然后修改 <code>hive-site.xml</code> 文件如下配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- hive元数据地址，默认是/user/hive/warehouse --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.metastore.warehouse.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>/user/hive/warehouse<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- hive查询时输出列名 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.cli.print.header<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 显示当前数据库名 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.cli.print.current.db<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 开启本地模式，默认是false --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.exec.mode.local.auto<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionUserName<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>root<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Username to use against metastore database<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionPassword<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>root<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>password to use against metastore database<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- URL用于连接远程元数据 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.metastore.uris<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>thrift://master1:9083<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 元数据使用mysql数据库 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionURL<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>jdbc:mysql://master1:3306/hivedb?createDatabaseIfNotExist=true<span class="symbol">&amp;amp;</span>userSSL=false<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionDriverName<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>com.mysql.cj.jdbc.Driver<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Driver class name for a JDBC metastore<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>开启 <code>mysql</code> 远程连接</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON *.* TO &#39;root&#39;@&#39;%&#39; IDENTIFIED BY &#39;密码&#39; WITH GRANT OPTION;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><p>再进入 <code>/etc/mysql/mysql.conf.d/mysqld.cnf</code> 文件将 <code>bind-address</code> 设置成 <code>0.0.0.0</code></p><p>重启 <code>mysql</code> 服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart mysql  </span><br></pre></td></tr></table></figure><blockquote><p>验证 <code>Hive</code> 安装</p></blockquote><p>运行<code>Hive</code>之前，需要创建 <code>/tmp</code> 文件夹在 <code>HDFS</code>  独立的 <code>Hive</code> 文件夹。在这里使用 <code>/user/hive/warehouse</code> 文件夹。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hadoop fs -mkdir /tmp </span><br><span class="line">hadoop fs -mkdir -p /user/hive/warehouse</span><br><span class="line">hadoop fs -chmod g+w /tmp </span><br><span class="line">hadoop fs -chmod g+w /user/hive/warehouse</span><br></pre></td></tr></table></figure><blockquote><p>初始化 <code>Hive</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schematool -dbType mysql -initSchema</span><br></pre></td></tr></table></figure><p>出现 <code>schemeTool completed</code> 表示初始化成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Metastore connection URL: jdbc:mysql:&#x2F;&#x2F;master1:3306&#x2F;hivedb?createDatabaseIfNotExist&#x3D;true&amp;userSSL&#x3D;false</span><br><span class="line">Metastore Connection Driver : com.mysql.cj.jdbc.Driver</span><br><span class="line">Metastore connection User: root</span><br><span class="line">Starting metastore schema initialization to 2.3.0</span><br><span class="line">Initialization script hive-schema-2.3.0.mysql.sql</span><br><span class="line">Initialization script completed</span><br><span class="line">schemaTool completed</span><br></pre></td></tr></table></figure><blockquote><p>开启元数据服务</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup hive --service metastore &amp; </span><br></pre></td></tr></table></figure><blockquote><p>进入 <code>Hive Shell</code></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">bennie@master1:&#x2F;opt&#x2F;bigdata&#x2F;hive-2.3.8$ hive</span><br><span class="line">Logging initialized using configuration in file:&#x2F;opt&#x2F;bigdata&#x2F;hive-2.3.8&#x2F;conf&#x2F;hive-log4j2.properties Async: true</span><br><span class="line">Hive-on-MR is deprecated in Hive 2 and may not be available in the future versions. Consider using a different execution engine (i.e. spark, tez) or using Hive 1.X releases.</span><br><span class="line">hive&gt; show databases;</span><br><span class="line">OK</span><br><span class="line">default</span><br><span class="line">Time taken: 8.601 seconds, Fetched: 1 row(s)</span><br><span class="line">hive&gt; </span><br></pre></td></tr></table></figure><h2 id="hiveserver2"><a class="markdownIt-Anchor" href="#hiveserver2"></a> Hiveserver2</h2><p>开启 <code>hiveserver2</code>,修改 <code>hive-site.xml</code> 配置文件,增加如下配置:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 这是hiveserver2 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.server2.thrift.port<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>10000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.server2.thrift.bind.host<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>master1<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>配置 <code>hadoop</code> 中的 <code>core-site.xml</code> 文件,并同步带其他主机</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.proxyuser.root.hosts<span class="tag">&lt;/<span class="name">name</span>&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>*<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.proxyuser.root.groups<span class="tag">&lt;/<span class="name">name</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>*<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.proxyuser.bennie.hosts<span class="tag">&lt;/<span class="name">name</span>&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>*<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.proxyuser.bennie.groups<span class="tag">&lt;/<span class="name">name</span>&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>*<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>启动 <code>hiveserver2</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hiveserver2</span><br><span class="line"><span class="comment">#或者</span></span><br><span class="line">hive --service hiveserver2</span><br><span class="line"><span class="comment"># 后台运行</span></span><br><span class="line">hiveserver2  &amp;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hadoop </category>
          
          <category> hive </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hadoop </tag>
            
            <tag> hive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop2.7.7 环境配置-HA高可用模式</title>
      <link href="post/hadoop-hight-avaliability.html"/>
      <url>post/hadoop-hight-avaliability.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>前面我们已经搭建了 <a href="/post/hadoop-standalone.html">本地模式</a> 、<a href="/post/hadoop-pseudo-distributed.html">伪分布式模式</a> 和 <a href="/post/hadoop-distributed.html">完全分布式模式</a></p><p>接着上节我们开始搭建一个<code>HA高可用模式</code>,上节我们创建了三个虚拟机,分别为 <code>master1</code>、<code>slave1</code> 和 <code>slave2</code>。</p><div class="note info flat"><p><strong>为啥要使用<code>HA高可用架构</code>?</strong></p><ol><li><strong>单点故障问题</strong>: 如果集群中的 <code>NameNode</code> 挂掉了,<code>HDFS</code> 服务就无法正常使用。<code>HDFS HA</code>就可以从新从可用的 <code>NameNode</code> 中选举一个新的主 <code>NameNode</code> 。</li><li><strong>内存受限问题</strong>：<code>Federation</code> 联邦通过多个 <code>namenode/namespace</code> 把元数据的存储和管理分散到多个节点中，使到 <code>namenode/namespace</code> 可以通过增加机器来进行水平扩展。</li></ol></div><p><code>HDFS HA</code> 高可用架构图：</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/hadoop-ha.png" alt="" /></p><ul><li><strong>Active NameNode 和 Standby NameNode</strong>：两台 <code>NameNode</code> 形成互备，一台处于 <code>Active</code> 状态，为主 <code>NameNode</code>，另外一台处于 <code>Standby</code> 状态，为备 <code>NameNode</code>，只有主 <code>NameNode</code> 才能对外提供读写服务。</li><li><strong>主备切换控制器 ZKFailoverController</strong>：<code>ZKFailoverController</code> 作为独立的进程运行，对 <code>NameNode</code> 的主备切换进行总体控制。<code>ZKFailoverController</code> 能及时检测到 <code>NameNode</code> 的健康状况，在主 <code>NameNode</code> 故障时借助 <code>Zookeeper</code> 实现自动的主备选举和切换，当然 <code>NameNode</code> 目前也支持不依赖于 <code>Zookeeper</code> 的手动主备切换。</li><li><strong>Zookeeper 集群</strong>：为主备切换控制器提供主备选举支持。</li><li><strong>共享存储系统</strong>：共享存储系统是实现 <code>NameNode</code> 的高可用最为关键的部分，共享存储系统保存了 <code>NameNode</code> 在运行过程中所产生的 <code>HDFS</code> 的元数据。主 <code>NameNode</code> 和 <code>NameNode</code> 通过共享存储系统实现元数据同步。在进行主备切换的时候，新的主 <code>NameNode</code> 在确认元数据完全同步之后才能继续对外提供服务。</li><li><strong>DataNode 节点</strong>：除了通过共享存储系统共享 <code>HDFS</code> 的元数据信息之外，主 <code>NameNode</code> 和备 <code>NameNode</code> 还需要共享 <code>HDFS</code> 的数据块和 <code>DataNode</code> <code>之间的映射关系。DataNode</code> 会同时向主 <code>NameNode</code> 和备 <code>NameNode</code> 上报数据块的位置信息。</li></ul><p>这个是<code>hadoop</code>官网关于部署 <code>HA高可用</code> 的 文档 <a href="http://hadoop.apache.org/docs/r2.7.7/hadoop-project-dist/hadoop-hdfs/HDFSHighAvailabilityWithNFS.html#Deployment">HDFS High Availability</a></p><blockquote><p>我们的<code>HA</code>架构如下:</p></blockquote><table><thead><tr><th style="text-align:center">HostName</th><th style="text-align:center">IP</th><th style="text-align:center">NN</th><th style="text-align:center">DN</th><th style="text-align:center">RM</th><th style="text-align:center">NM</th><th style="text-align:center">JN</th><th style="text-align:center">ZK</th><th style="text-align:center">ZKFC</th></tr></thead><tbody><tr><td style="text-align:center">master1</td><td style="text-align:center">192.168.8.101</td><td style="text-align:center">√</td><td style="text-align:center"></td><td style="text-align:center">√</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">√</td><td style="text-align:center">√</td></tr><tr><td style="text-align:center">slave1</td><td style="text-align:center">192.168.8.201</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center"></td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">√</td></tr><tr><td style="text-align:center">slave2</td><td style="text-align:center">192.168.8.202</td><td style="text-align:center"></td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center"></td></tr></tbody></table><div class="note info flat"><ul><li><strong>NN</strong> 是 <code>NameNode</code></li><li><strong>DN</strong> 是 <code>DataNode</code></li><li><strong>RM</strong> 是 <code>ResourceManager</code></li><li><strong>NM</strong> 是 <code>NodeManager</code></li><li><strong>JN</strong> 是 <code>JournalNode</code></li><li><strong>ZKFC</strong> 是 <code>DFSZKFailoverController</code></li></ul></div><h2 id="准备"><a class="markdownIt-Anchor" href="#准备"></a> 准备</h2><p><code>HA</code>高可用需要部署 <code>zookepper</code> 集群. <a href="https://archive.apache.org/dist/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1-bin.tar.gz">zk 下载地址</a></p><p>我们直接在 <code>master1</code> 下载并配置好 <code>zookepper</code> 然后同步到 <code>slave1</code> 和 <code>slave2</code>.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/bigdata</span><br><span class="line">wget https://archive.apache.org/dist/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1-bin.tar.gz</span><br><span class="line">tar -zxvf apache-zookeeper-3.6.1-bin.tar.gz</span><br><span class="line">mv apache-zookeeper-3.6.1-bin zookeeper-3.6.1</span><br></pre></td></tr></table></figure><h2 id="zookeeper-集群"><a class="markdownIt-Anchor" href="#zookeeper-集群"></a> zookeeper 集群</h2><blockquote><p>我们分别在 <code>master1</code>、<code>slave1</code> 和 <code>slave2</code> 分别部署,<code>zookeeper</code> 服务。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/bigdata/zookeeper-3.6.1</span><br></pre></td></tr></table></figure><blockquote><p>将 <code>zoo_sample.cfg</code> 文件复制并重命名为 <code>zoo.cfg</code> 文件。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim conf/zoo.cfg</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># The number of milliseconds of each tick</span><br><span class="line">tickTime&#x3D;2000</span><br><span class="line"># The number of ticks that the initial</span><br><span class="line"># synchronization phase can take</span><br><span class="line">initLimit&#x3D;10</span><br><span class="line"># The number of ticks that can pass between</span><br><span class="line"># sending a request and getting an acknowledgement</span><br><span class="line">syncLimit&#x3D;5</span><br><span class="line"># the directory where the snapshot is stored.</span><br><span class="line">dataDir&#x3D;&#x2F;opt&#x2F;bigdata&#x2F;zookeeper-3.6.1&#x2F;data</span><br><span class="line"># the port at which the clients will connect</span><br><span class="line">clientPort&#x3D;2181</span><br><span class="line"></span><br><span class="line">server.1&#x3D;master1:2888:3888</span><br><span class="line">server.2&#x3D;slave1:2888:3888</span><br><span class="line">server.3&#x3D;slave2:2888:3888</span><br></pre></td></tr></table></figure><blockquote><p>在 <code>dataDir</code> 指定的目录下，创建 <code>myid</code> 文件。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir vim data</span><br><span class="line"><span class="built_in">echo</span> 1 &gt; data/myid</span><br></pre></td></tr></table></figure><p>写入对应的集群<code>id</code>.</p><blockquote><p>配置环境变量</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/profile</span><br></pre></td></tr></table></figure><p>添加如下配置(三台机器都要配置):</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export ZK_HOME=/opt/bigdata/zookeeper-3.6.1</span><br><span class="line">PATH=$PATH:$ZK_HOME/bin</span><br></pre></td></tr></table></figure><p>执行 <code>source /etc/profile</code></p><blockquote><p>发送 配置好的 <code>ZK_HOME</code> 到 <code>slave1</code> 和 <code>slave2</code>,可以使用 <code>xsync</code> 脚本同步</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xsync file <span class="variable">$ZK_HOME</span></span><br></pre></td></tr></table></figure><div class="note warning flat"><p><strong>注意</strong></p><p>要修改 <code>slave1</code> 的 myid 为 1,<code>slave2</code> 的 myid 为 2</p></div><blockquote><p>启动 <code>zookeeper</code> 服务</p></blockquote><p>使用 <code>xsync</code> 脚本 同时开启 <code>zkServer</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">bennie@master1:~$ xsync cmd &quot;$ZK_HOME&#x2F;bin&#x2F;zkServer.sh start&quot;</span><br><span class="line"></span><br><span class="line">master1 execute cmd &#x2F;opt&#x2F;bigdata&#x2F;zookeeper-3.6.1&#x2F;bin&#x2F;zkServer.sh start</span><br><span class="line"></span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: &#x2F;opt&#x2F;bigdata&#x2F;zookeeper-3.6.1&#x2F;bin&#x2F;..&#x2F;conf&#x2F;zoo.cfg</span><br><span class="line">Starting zookeeper ... STARTED</span><br><span class="line"></span><br><span class="line">slave1 execute cmd &#x2F;opt&#x2F;bigdata&#x2F;zookeeper-3.6.1&#x2F;bin&#x2F;zkServer.sh start</span><br><span class="line"></span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: &#x2F;opt&#x2F;bigdata&#x2F;zookeeper-3.6.1&#x2F;bin&#x2F;..&#x2F;conf&#x2F;zoo.cfg</span><br><span class="line">Starting zookeeper ... STARTED</span><br><span class="line"></span><br><span class="line">slave2 execute cmd &#x2F;opt&#x2F;bigdata&#x2F;zookeeper-3.6.1&#x2F;bin&#x2F;zkServer.sh start</span><br><span class="line"></span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: &#x2F;opt&#x2F;bigdata&#x2F;zookeeper-3.6.1&#x2F;bin&#x2F;..&#x2F;conf&#x2F;zoo.cfg</span><br><span class="line">Starting zookeeper ... STARTED</span><br></pre></td></tr></table></figure><p>查看集群状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">bennie@master1:~$ xsync cmd &quot;$ZK_HOME&#x2F;bin&#x2F;zkServer.sh status&quot;</span><br><span class="line"></span><br><span class="line">master1 execute cmd &#x2F;opt&#x2F;bigdata&#x2F;zookeeper-3.6.1&#x2F;bin&#x2F;zkServer.sh status</span><br><span class="line"></span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: &#x2F;opt&#x2F;bigdata&#x2F;zookeeper-3.6.1&#x2F;bin&#x2F;..&#x2F;conf&#x2F;zoo.cfg</span><br><span class="line">Client port found: 2181. Client address: localhost.</span><br><span class="line">Mode: follower</span><br><span class="line"></span><br><span class="line">slave1 execute cmd &#x2F;opt&#x2F;bigdata&#x2F;zookeeper-3.6.1&#x2F;bin&#x2F;zkServer.sh status</span><br><span class="line"></span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: &#x2F;opt&#x2F;bigdata&#x2F;zookeeper-3.6.1&#x2F;bin&#x2F;..&#x2F;conf&#x2F;zoo.cfg</span><br><span class="line">Client port found: 2181. Client address: localhost.</span><br><span class="line">Mode: leader</span><br><span class="line"></span><br><span class="line">slave2 execute cmd &#x2F;opt&#x2F;bigdata&#x2F;zookeeper-3.6.1&#x2F;bin&#x2F;zkServer.sh status</span><br><span class="line"></span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: &#x2F;opt&#x2F;bigdata&#x2F;zookeeper-3.6.1&#x2F;bin&#x2F;..&#x2F;conf&#x2F;zoo.cfg</span><br><span class="line">Client port found: 2181. Client address: localhost.</span><br><span class="line">Mode: follower</span><br></pre></td></tr></table></figure><p><code>zkServer</code> 脚本命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动命令：</span></span><br><span class="line">zkServer.sh start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止命令：</span></span><br><span class="line">zkServer.sh stop</span><br><span class="line">　　</span><br><span class="line"><span class="comment"># 重启命令：</span></span><br><span class="line">zkServer.sh restart</span><br><span class="line">　　</span><br><span class="line"><span class="comment"># 查看集群节点状态：</span></span><br><span class="line">zkServer.sh status</span><br></pre></td></tr></table></figure><h2 id="hadoop-配置"><a class="markdownIt-Anchor" href="#hadoop-配置"></a> hadoop 配置</h2><p>我们修改 hadoop 的 env 脚本文件</p><ul><li>在 <code>hadoop-env.sh</code> 添加以下内容:<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">JAVA_HOME=/opt/java/jdk1.8.0_271</span><br><span class="line">HADOOP_OPTS=&quot;$HADOOP_OPTS -Duser.timezone=GMT+08&quot;</span><br></pre></td></tr></table></figure></li><li>在 <code>yarn-env.sh</code> 添加以下内容:<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">JAVA_HOME=/opt/java/jdk1.8.0_271</span><br><span class="line">YARN_OPTS=&quot;$YARN_OPTS -Duser.timezone=GMT+08&quot;</span><br></pre></td></tr></table></figure></li><li>同步到其他机器<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xsync file <span class="variable">$HADOOP_HOME</span>/etc/hadoop/</span><br></pre></td></tr></table></figure></li></ul><h3 id="hdfs-sitexml"><a class="markdownIt-Anchor" href="#hdfs-sitexml"></a> hdfs-site.xml</h3><blockquote><p>修改 <code>hdfs-site.xml</code> 文件,添加如下配置:</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 完全分布式集群名称 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.nameservices<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>mycluster<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 集群中NameNode节点名称 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.ha.namenodes.mycluster<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>master1,slave1<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- master1 的RPC通信地址 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.rpc-address.mycluster.master1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>master1:8020<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!-- slave1 的RPC通信地址 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.rpc-address.mycluster.slave1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>slave1:8020<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- master1 的http通信地址 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.http-address.mycluster.master1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>master1:50070<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- slave1 的http通信地址 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.http-address.mycluster.slave1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>slave1:50070<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定NameNode元数据在JournalNode上的存放位置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.shared.edits.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>qjournal://slave1:8485;slave2:8485/mycluster<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置失败自动切换实现方式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.client.failover.proxy.provider.mycluster<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置隔离机制方法，多个机制用换行分割，即每个机制暂用一行--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.ha.fencing.methods<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>sshfence<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>shell(/bin/true)<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 使用 sshfence 隔离机制时需要 ssh免登陆 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.ha.fencing.ssh.private-key-files<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>/home/bennie/.ssh/id_rsa<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置 sshfence 隔离机制超时时间 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.ha.fencing.ssh.connect-timeout<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>30000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 声明 journalnode 服务器存储目录--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.journalnode.edits.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>/opt/bigdata/hadoop-2.7.7/journal/node/local/data<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 关闭权限检查--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.permissions.enable<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--开启Automatic Failover模式--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.ha.automatic-failover.enabled<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定Hadoop SecondaryNameNode 主机配置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.secondary.http-address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>master1:9001<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.name.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>file:/opt/bigdata/hadoop-2.7.7/name<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.datanode.data.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>file:/opt/bigdata/hadoop-2.7.7/data<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置副本数量为2，默认为3 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.replication<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--开启 web hdfs --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.webhdfs.enabled<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.permissions<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.web.ugi<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>supergroup<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="core-sitexml"><a class="markdownIt-Anchor" href="#core-sitexml"></a> core-site.xml</h3><blockquote><p>修改 <code>core-site.xml</code> 文件,添加如下配置:</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.defaultFS<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://mycluster<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.tmp.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>file:/opt/bigdata/hadoop-2.7.7/tmp<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--zookeeper集群地址--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>ha.zookeeper.quorum<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>master1:2181,slave1:2181,slave2:2181<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="yarn-sitexml"><a class="markdownIt-Anchor" href="#yarn-sitexml"></a> yarn-site.xml</h3><blockquote><p>修改 <code>yarn-site.xml</code> 文件,添加如下配置:</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Reducer获取数据的方式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>mapreduce_shuffle<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.aux-services.mapreduce.shuffle.class<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>org.apache.hadoop.mapred.ShuffleHandler<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开启 ResourceManager HA --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.ha.enabled<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.cluster-id<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>yarnCluster<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>集群唯一标识<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.ha.rm-ids<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>rm1,rm2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>两个RM的唯一标识<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.hostname.rm1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>master1<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>第一个RM部署在的机器名<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.hostname.rm2<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>slave2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>第二个RM部署在的机器名<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.webapp.address.rm1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>master1:8088<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>第一个RM的web ui的端口<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.webapp.address.rm2<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>slave2:8088<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>第二个RM的web ui的端口<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.zk-address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>master1:2181,slave1:2181,slave2:2181<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>zk的部署的主机名和端口<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--启用RM重启的功能，默认为false--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.recovery.enabled<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="启动-hdfs"><a class="markdownIt-Anchor" href="#启动-hdfs"></a> 启动 HDFS</h2><blockquote><p>清空所有节点的 <code>data</code>,<code>name</code> 目录</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xsync cmd <span class="string">&#x27;rm -rf $HADOOP_HOME/data&#x27;</span></span><br><span class="line">xsync cmd <span class="string">&#x27;rm -rf $HADOOP_HOME/name&#x27;</span></span><br></pre></td></tr></table></figure><blockquote><p>启动集群的 <code>JournalNode</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bennie@master1:~$ <span class="variable">$HADOOP_HOME</span>/sbin/hadoop-daemons.sh start journalnode</span><br><span class="line">slave2: starting journalnode, logging to /opt/bigdata/hadoop-2.7.7/logs/hadoop-bennie-journalnode-slave2.out</span><br><span class="line">slave1: starting journalnode, logging to /opt/bigdata/hadoop-2.7.7/logs/hadoop-bennie-journalnode-slave1.out</span><br></pre></td></tr></table></figure><div class="note info flat"><p><a href="http://hadoop-daemon.sh">hadoop-daemon.sh</a> start journalnode 启动的是单个节点的 <code>JournalNode</code></p></div><blockquote><p>在 <code>master1</code> 节点格式化 <code>NameNode</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hdfs namenode -format</span><br><span class="line"><span class="variable">$HADOOP_HOME</span>/sbin/hadoop-daemon.sh start namenode</span><br></pre></td></tr></table></figure><p>namenode 格式化结果中出现 has been successfully formatted.说明格式化成功了。</p><blockquote><p>在 <code>slave1</code> 节点进行同步。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs namenode -bootstrapStandby</span><br></pre></td></tr></table></figure><blockquote><p>在 <code>master1</code> 初始化 <code>zkfc</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs zkfc -formatZK</span><br></pre></td></tr></table></figure><p>结果中出现 Successfully created /hadoop-ha/hdfs1 in ZK. 说明 ZK 格式化成功！</p><blockquote><p>停止已启动的 <code>hdfs</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$HADOOP_HOME</span>/sbin/stop-dfs.sh</span><br></pre></td></tr></table></figure><blockquote><p>启动 <code>hdfs</code> 服务</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">bennie@master1:~$ <span class="variable">$HADOOP_HOME</span>/sbin/start-dfs.sh</span><br><span class="line"></span><br><span class="line">Starting namenodes on [master1 slave1]</span><br><span class="line">master1: starting namenode, logging to /opt/bigdata/hadoop-2.7.7/logs/hadoop-bennie-namenode-master1.out</span><br><span class="line">slave1: starting namenode, logging to /opt/bigdata/hadoop-2.7.7/logs/hadoop-bennie-namenode-slave1.out</span><br><span class="line">slave2: starting datanode, logging to /opt/bigdata/hadoop-2.7.7/logs/hadoop-bennie-datanode-slave2.out</span><br><span class="line">slave1: starting datanode, logging to /opt/bigdata/hadoop-2.7.7/logs/hadoop-bennie-datanode-slave1.out</span><br><span class="line">Starting journal nodes [slave1 slave2]</span><br><span class="line">slave2: starting journalnode, logging to /opt/bigdata/hadoop-2.7.7/logs/hadoop-bennie-journalnode-slave2.out</span><br><span class="line">slave1: starting journalnode, logging to /opt/bigdata/hadoop-2.7.7/logs/hadoop-bennie-journalnode-slave1.out</span><br><span class="line">Starting ZK Failover Controllers on NN hosts [master1 slave1]</span><br><span class="line">master1: starting zkfc, logging to /opt/bigdata/hadoop-2.7.7/logs/hadoop-bennie-zkfc-master1.out</span><br><span class="line">slave1: starting zkfc, logging to /opt/bigdata/hadoop-2.7.7/logs/hadoop-bennie-zkfc-slave1.out</span><br></pre></td></tr></table></figure><blockquote><p><code>jps</code> 查看每台机器的 <code>java</code> 进程</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">bennie@master1:~$ xsync cmd <span class="variable">$JAVA_HOME</span>/bin/jps</span><br><span class="line"></span><br><span class="line">master1 execute cmd /opt/java/jdk1.8.0_271/bin/jps</span><br><span class="line">7909 DFSZKFailoverController</span><br><span class="line">1530 QuorumPeerMain</span><br><span class="line">7595 NameNode</span><br><span class="line">8015 Jps</span><br><span class="line"></span><br><span class="line">slave1 execute cmd /opt/java/jdk1.8.0_271/bin/jps</span><br><span class="line">12469 DFSZKFailoverController</span><br><span class="line">8805 QuorumPeerMain</span><br><span class="line">12550 Jps</span><br><span class="line">12216 DataNode</span><br><span class="line">12329 JournalNode</span><br><span class="line">12125 NameNode</span><br><span class="line"></span><br><span class="line">slave2 execute cmd /opt/java/jdk1.8.0_271/bin/jps</span><br><span class="line">8867 JournalNode</span><br><span class="line">8759 DataNode</span><br><span class="line">7227 QuorumPeerMain</span><br><span class="line">8956 Jps</span><br></pre></td></tr></table></figure><p>浏览器输入 <code>http://master1:50070</code> 查看 <code>master1</code> 的 <code>namenode</code> 节点状态</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/master1-namenode-webui.png" alt="" /></p><p>浏览器输入 <code>http://slave1:50070</code> 查看 <code>slave1</code> 的 <code>namenode</code> 节点状态</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/slave1-namenode-webui.png" alt="" /></p><blockquote><p>然后我们 kill <code>master1</code> 的 <code>namenode</code>, 再去看下 <code>slave1</code> 的 <code>namenode</code> 节点状态</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/ha-namenode-webui.png" alt="" /></p><p>此时发现<code>slave1</code>已经切换为 <code>active</code> 状态。</p><h2 id="启动-yarn"><a class="markdownIt-Anchor" href="#启动-yarn"></a> 启动 Yarn</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">bennie@master1:~$ <span class="variable">$HADOOP_HOME</span>/sbin/start-yarn.sh</span><br><span class="line"></span><br><span class="line">starting yarn daemons</span><br><span class="line">starting resourcemanager, logging to /opt/bigdata/hadoop-2.7.7/logs/yarn-bennie-resourcemanager-master1.out</span><br><span class="line">slave2: starting nodemanager, logging to /opt/bigdata/hadoop-2.7.7/logs/yarn-bennie-nodemanager-slave2.out</span><br><span class="line">slave1: starting nodemanager, logging to /opt/bigdata/hadoop-2.7.7/logs/yarn-bennie-nodemanager-slave1.out</span><br></pre></td></tr></table></figure><blockquote><p>到 <code>slave2</code> 节点启动 <code>resourcemanager</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bennie@slave2:~$ <span class="variable">$HADOOP_HOME</span>/sbin/yarn-daemon.sh start resourcemanager</span><br><span class="line"></span><br><span class="line">starting resourcemanager, logging to /opt/bigdata/hadoop-2.7.7/logs/yarn-bennie-resourcemanager-slave2.out</span><br></pre></td></tr></table></figure><blockquote><p>查询主备状态</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">bennie@slave2:~$ yarn rmadmin -getServiceState rm1</span><br><span class="line">active</span><br><span class="line"></span><br><span class="line">bennie@slave2:~$ yarn rmadmin -getServiceState rm2</span><br><span class="line">standby</span><br></pre></td></tr></table></figure><blockquote><p>手工切换主备状态</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yarn rmadmin -transitionToActive rm1</span><br><span class="line">yarn rmadmin -transitionToStandby rm1</span><br></pre></td></tr></table></figure><blockquote><p>对于自动切换模式，可以强制手工切换</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yarn rmadmin -transitionToActive rm1 --forcemanual</span><br><span class="line">yarn rmadmin -transitionToStandby rm1 --forcemanual</span><br></pre></td></tr></table></figure><blockquote><p><code>kill</code> 杀掉 <code>master1</code> 的 <code>resourcemanager</code> 进程,再次查看 <code>rm2</code> 的状态</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">bennie@master1:~$ jps</span><br><span class="line">1530 QuorumPeerMain</span><br><span class="line">11291 DFSZKFailoverController</span><br><span class="line">11389 NameNode</span><br><span class="line">12526 Jps</span><br><span class="line">12223 ResourceManager</span><br><span class="line">bennie@master1:~$ <span class="built_in">kill</span> 12223</span><br><span class="line">bennie@master1:~$ yarn rmadmin -getServiceState rm2</span><br><span class="line">active</span><br></pre></td></tr></table></figure><h2 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h2><p><a href="https://developer.ibm.com/zh/articles/os-cn-hadoop-name-node/">Hadoop NameNode 高可用 (High Availability) 实现解析</a></p>]]></content>
      
      
      <categories>
          
          <category> hadoop </category>
          
          <category> ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop2.7.7 环境配置-完全分布式模式</title>
      <link href="post/hadoop-distributed.html"/>
      <url>post/hadoop-distributed.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>前面我们已经搭建了 <a href="/post/hadoop-standalone.html">本地模式</a> 和 <a href="/post/hadoop-pseudo-distributed.html">伪分布式模式</a></p><p>接着上节我们开始搭建一个<code>完全分布式模式</code>.</p><p>再开始搭建之前我们要考虑有几台服务器,每天服务器怎么编排。</p><h2 id="准备"><a class="markdownIt-Anchor" href="#准备"></a> 准备</h2><p>将之前编译<code>hadoop</code>的虚拟机进行克隆(Ubuntu16.04)克隆出三台,分别为 <code>master1</code> 、<code>slave1</code> 和 <code>slave2</code>。</p><blockquote><p><strong>PS</strong> 最好是在配置完 <code>Hadoop</code> 之后再复制,然后再设置 <code>hostname</code> 修改静态 <code>ip</code>、最后配置免密登录。</p></blockquote><table><thead><tr><th style="text-align:center">HostName</th><th style="text-align:center">IP</th><th style="text-align:center">NN</th><th style="text-align:center">DN</th><th style="text-align:center">RM</th><th style="text-align:center">NM</th><th style="text-align:center">SNN</th></tr></thead><tbody><tr><td style="text-align:center">master1</td><td style="text-align:center">192.168.8.101</td><td style="text-align:center">√</td><td style="text-align:center"></td><td style="text-align:center">√</td><td style="text-align:center"></td><td style="text-align:center">√</td></tr><tr><td style="text-align:center">slave1</td><td style="text-align:center">192.168.8.201</td><td style="text-align:center"></td><td style="text-align:center">√</td><td style="text-align:center"></td><td style="text-align:center">√</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">slave2</td><td style="text-align:center">192.168.8.202</td><td style="text-align:center"></td><td style="text-align:center">√</td><td style="text-align:center"></td><td style="text-align:center">√</td><td style="text-align:center"></td></tr></tbody></table><div class="note info flat"><ul><li><strong>NN</strong> 是 <code>NameNode</code></li><li><strong>DN</strong> 是 <code>DataNode</code></li><li><strong>RM</strong> 是 <code>ResourceManager</code></li><li><strong>NM</strong> 是 <code>NodeManager</code></li><li><strong>SNN</strong> 是 <code>SecondaryNameNode</code></li></ul></div><h3 id="配置静态-ip"><a class="markdownIt-Anchor" href="#配置静态-ip"></a> 配置静态 IP</h3><p>分别在三台机器配置静态 <code>IP</code> 地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/network/interfaces</span><br></pre></td></tr></table></figure><blockquote><p>配置 <code>master1</code> 的 <code>IP</code></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">auto ens33</span><br><span class="line">iface ens33 inet static</span><br><span class="line">address 192.168.8.101</span><br><span class="line">netmask 255.255.255.0</span><br><span class="line">gateway 192.168.8.1</span><br><span class="line">dns-nameserver 114.114.114.114</span><br></pre></td></tr></table></figure><blockquote><p>配置 <code>slave1</code> 的 <code>IP</code></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">auto ens33</span><br><span class="line">iface ens33 inet static</span><br><span class="line">address 192.168.8.201</span><br><span class="line">netmask 255.255.255.0</span><br><span class="line">gateway 192.168.8.1</span><br><span class="line">dns-nameserver 114.114.114.114</span><br></pre></td></tr></table></figure><blockquote><p>配置 <code>slave2</code> 的 <code>IP</code></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">auto ens33</span><br><span class="line">iface ens33 inet static</span><br><span class="line">address 192.168.8.202</span><br><span class="line">netmask 255.255.255.0</span><br><span class="line">gateway 192.168.8.1</span><br><span class="line">dns-nameserver 114.114.114.114</span><br></pre></td></tr></table></figure><p>重启 <code>network</code> 服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/networking restart</span><br></pre></td></tr></table></figure><h3 id="配置-host"><a class="markdownIt-Anchor" href="#配置-host"></a> 配置 Host</h3><p>配置三台主机,主机名到 <code>ip</code> 的映射,首先修改三台虚拟机的 <code>hostname</code> 分别为 <code>master1</code> 、<code>slave1</code> 和 <code>slave2</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/hostname</span><br></pre></td></tr></table></figure><p>分别为三台虚拟机添加 host 配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/hosts</span><br></pre></td></tr></table></figure><p>在文件尾部添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">192.168.8.101 master1</span><br><span class="line">192.168.8.201 slave1</span><br><span class="line">192.168.8.202 slave2</span><br></pre></td></tr></table></figure><p>然后重启三台主机。</p><h3 id="免密登录"><a class="markdownIt-Anchor" href="#免密登录"></a> 免密登录</h3><p>首先分别为三天虚拟机生成 <code>ssh key</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure><p>生成密钥成功。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">SHA256:t4L2a8imf3c3osZdQ2sGQD1HkaskNomfAdwbgoHNF9o bennie@master1</span><br><span class="line">The key&#39;s randomart image is:</span><br><span class="line">+---[RSA 2048]----+</span><br><span class="line">|     +.+.+.. .oo |</span><br><span class="line">|    . +o&#x3D; + o o  |</span><br><span class="line">|      ..E+ &#x3D; o . |</span><br><span class="line">|        . B o o  |</span><br><span class="line">|        So.* + . |</span><br><span class="line">|       . .o.. *  |</span><br><span class="line">|     .o..... + . |</span><br><span class="line">|     .+.o.+ + o  |</span><br><span class="line">|    .+.oo+.o o . |</span><br><span class="line">+----[SHA256]-----+</span><br></pre></td></tr></table></figure><p>分别在三台虚拟机复制公钥到另外两天虚拟机</p><p>命令为 <code>ssh-copy-id 主机名</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id slave1</span><br><span class="line">ssh-copy-id slave2</span><br></pre></td></tr></table></figure><blockquote><p>然后使用 <code>ssh 主机名</code> 测试是否需要输入密码,如果无需密码说明设置成功。</p></blockquote><h3 id="时间同步"><a class="markdownIt-Anchor" href="#时间同步"></a> 时间同步</h3><blockquote><p>首先分别为三台虚拟机设置时区为 <code>Asia/Shanghai</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /usr/share/zoneinfo/Asia/Shanghai  /etc/localtime</span><br></pre></td></tr></table></figure><blockquote><p>然后安装 <code>ntpdate</code> 服务,并从阿里云时间同步服务器同步系统时间。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ntpdate -y</span><br><span class="line">ntpdate ntp1.aliyun.com</span><br><span class="line">hwclock --systohc</span><br></pre></td></tr></table></figure><h2 id="配置-hadoop"><a class="markdownIt-Anchor" href="#配置-hadoop"></a> 配置 Hadoop</h2><h3 id="core-sitexml"><a class="markdownIt-Anchor" href="#core-sitexml"></a> core-site.xml</h3><blockquote><p>修改 <code>core-site.xml</code> 文件,添加如下配置:</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定HDFS中NameNode的地址 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.defaultFS<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://master1:9000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>io.file.buffer.size<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>131072<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定Hadoop运行时产生文件的存储目录 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.tmp.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>file:/opt/bigdata/hadoop-2.7.7/tmp<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.proxyuser.root.hosts<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>*<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.proxyuser.root.groups<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>*<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="hdfs-sitexml"><a class="markdownIt-Anchor" href="#hdfs-sitexml"></a> hdfs-site.xml</h3><blockquote><p>修改 <code>hdfs-site.xml</code> 文件,添加如下配置:</p></blockquote><p>首先创建 <code>name</code> 和 <code>data</code> 目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir <span class="variable">$&#123;HADOOP_HOME&#125;</span>/name</span><br><span class="line">mkdir <span class="variable">$&#123;HADOOP_HOME&#125;</span>/data</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定Hadoop SecondaryNameNode 主机配置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.secondary.http-address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>master1:9001<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.name.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>file:/opt/bigdata/hadoop-2.7.7/name<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.datanode.data.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>file:/opt/bigdata/hadoop-2.7.7/data<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置副本数量为2，默认为3 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.replication<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--开启 web hdfs --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.webhdfs.enabled<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.permissions<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.web.ugi<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>supergroup<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="mapred-sitexml"><a class="markdownIt-Anchor" href="#mapred-sitexml"></a> mapred-site.xml</h3><blockquote><p>修改 <code>mapred-site.xml</code> 文件,添加如下配置:</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定MR运行在Yarn上 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.framework.name<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>yarn<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.jobhistory.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>master1:10020<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.jobhistory.webapp.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>master1:19888<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="yarn-sitexml"><a class="markdownIt-Anchor" href="#yarn-sitexml"></a> yarn-site.xml</h3><blockquote><p>修改 <code>yarn-site.xml</code> 文件,添加如下配置:</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Reducer获取数据的方式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>mapreduce_shuffle<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.aux-services.mapreduce.shuffle.class<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>org.apache.hadoop.mapred.ShuffleHandler<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定YARN的ResourceManager的地址 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.hostname<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>master1<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="群起集群"><a class="markdownIt-Anchor" href="#群起集群"></a> 群起集群</h2><ol><li>配置 <code>slaves</code></li><li>切换目录到：<code>hadoop</code> 安装目录 /opt/bigdata/hadoop-2.7.7</li><li>在 <code>$&#123;HADOOP_HOME&#125;/etc/hadoop/</code> 目录下的 <code>slaves</code> 文件中添加如下内容</li><li><code>scp</code> 发送 <code>hadooop</code> 目录到 <code>slave1</code> 和 <code>slave2</code> 上</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">slave1</span><br><span class="line">slave2</span><br></pre></td></tr></table></figure><div class="note warning flat"><p>注意结尾不能有空格，文件中不能有空行</p></div><blockquote><p>编写同步脚本 <code>xsync</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">pcount=<span class="variable">$#</span></span><br><span class="line"><span class="keyword">if</span>((pcount==0)); <span class="keyword">then</span></span><br><span class="line"> <span class="built_in">echo</span> no args;</span><br><span class="line"> <span class="built_in">exit</span>;</span><br><span class="line"><span class="keyword">elif</span>((pcount&gt;2)); <span class="keyword">then</span></span><br><span class="line"> <span class="built_in">echo</span> error args;</span><br><span class="line"> <span class="built_in">exit</span>;</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取当前用户名称</span></span><br><span class="line">user=`whoami`</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取文件名称</span></span><br><span class="line">p1=<span class="variable">$1</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$p1</span> = <span class="string">&quot;file&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">  file=<span class="variable">$2</span></span><br><span class="line">  fname=`basename <span class="variable">$file</span>`</span><br><span class="line">  <span class="built_in">echo</span> fname=<span class="variable">$fname</span></span><br><span class="line">  <span class="comment"># 获取上级目录到绝对路径 –P指向实际物理地址，防止软连接</span></span><br><span class="line">  pdir=`<span class="built_in">cd</span> -P $(dirname <span class="variable">$file</span>); <span class="built_in">pwd</span>`</span><br><span class="line">  <span class="built_in">echo</span> pdir=<span class="variable">$pdir</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 发送文件</span></span><br><span class="line">  <span class="keyword">for</span> slave <span class="keyword">in</span> <span class="variable">$slaves</span></span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">   rsync -rvl <span class="variable">$pdir</span>/<span class="variable">$fname</span> <span class="variable">$user</span>@$slave<span class="variable">$host</span>:<span class="variable">$pdir</span></span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$p1</span> = <span class="string">&quot;cmd&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">  cmd=<span class="variable">$2</span></span><br><span class="line">  <span class="keyword">for</span> slave <span class="keyword">in</span> <span class="variable">$slaves</span></span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$slave</span> execute cmd <span class="variable">$cmd</span>&quot;</span></span><br><span class="line">    ssh <span class="variable">$user</span>@$slave<span class="variable">$host</span> <span class="variable">$cmd</span></span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> error cmd;</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>将 <code>xsync</code> 脚本文件复制到 <code>$&#123;HDAOOP_HOME&#125;/bin</code> 目录下,并赋予执行权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp xsync <span class="variable">$&#123;HDAOOP_HOME&#125;</span>/bin/</span><br><span class="line">sudo chmod +x <span class="variable">$&#123;HDAOOP_HOME&#125;</span>/bin/xsync</span><br></pre></td></tr></table></figure><blockquote><p><code>scp</code> 命令发送 <code>hadoop</code> 到 <code>slave1</code> 和 <code>slave2</code></p></blockquote><div class="note warning flat"><p>如果没有请先创建 <code>bigdata</code> 目录,并修改目录所属用户,组</p></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp -r <span class="variable">$&#123;HADOOP_HOME&#125;</span> slave1:/opt/bigdata</span><br><span class="line">scp -r <span class="variable">$&#123;HADOOP_HOME&#125;</span> slave2:/opt/bigdata</span><br></pre></td></tr></table></figure><p>添加环境变量 <code>slaves</code>,多个用空格隔开</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> slaves=<span class="string">&quot;master1 slave1 slave2&quot;</span></span><br></pre></td></tr></table></figure><h2 id="启动-hadoop"><a class="markdownIt-Anchor" href="#启动-hadoop"></a> 启动 Hadoop</h2><blockquote><p>同步所有节点的配置文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xsync file <span class="variable">$&#123;HDAOOP_HOME&#125;</span>/etc/hadoop/slaves</span><br></pre></td></tr></table></figure><blockquote><p>分别到三台虚拟机格式化 <code>namenode</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xsync cmd <span class="string">&quot;hdfs namenode -format&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>启动 <code>hdfs</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$&#123;HADOOP_HOME&#125;</span>/sbin/start-dfs.sh</span><br></pre></td></tr></table></figure><p>输出日志</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Starting namenodes on [master1]</span><br><span class="line">master1: starting namenode, logging to &#x2F;opt&#x2F;bigdata&#x2F;hadoop-2.7.7&#x2F;logs&#x2F;hadoop-bennie-namenode-master1.out</span><br><span class="line">slave2: starting datanode, logging to &#x2F;opt&#x2F;bigdata&#x2F;hadoop-2.7.7&#x2F;logs&#x2F;hadoop-bennie-datanode-slave2.out</span><br><span class="line">slave1: starting datanode, logging to &#x2F;opt&#x2F;bigdata&#x2F;hadoop-2.7.7&#x2F;logs&#x2F;hadoop-bennie-datanode-slave1.out</span><br><span class="line">Starting secondary namenodes [master1]</span><br><span class="line">master1: starting secondarynamenode, logging to &#x2F;opt&#x2F;bigdata&#x2F;hadoop-2.7.7&#x2F;logs&#x2F;hadoop-bennie-secondarynamenode-master1.out</span><br></pre></td></tr></table></figure><p><code>jps</code> 查看 <code>java</code> 进程</p><p><code>jps</code> 查看 <code>java</code> 进程</p><ul><li>master1</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bennie@master1:&#x2F;opt&#x2F;bigdata&#x2F;hadoop-2.7.7$ jps</span><br><span class="line">62481 Jps</span><br><span class="line">62372 SecondaryNameNode</span><br><span class="line">62164 NameNode</span><br></pre></td></tr></table></figure><ul><li>slave1</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bennie@slave1:&#x2F;opt$ jps</span><br><span class="line">3667 Jps</span><br><span class="line">3593 DataNode</span><br></pre></td></tr></table></figure><ul><li>slave2</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bennie@slave1:&#x2F;opt$ jps</span><br><span class="line">3667 Jps</span><br><span class="line">3593 DataNode</span><br></pre></td></tr></table></figure><blockquote><p>启动 <code>yarn</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$&#123;HADOOP_HOME&#125;</span>/sbin/start-yarn.sh</span><br></pre></td></tr></table></figure><p>输出日志</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">starting yarn daemons</span><br><span class="line">starting resourcemanager, logging to &#x2F;opt&#x2F;bigdata&#x2F;hadoop-2.7.7&#x2F;logs&#x2F;yarn-bennie-resourcemanager-master1.out</span><br><span class="line">slave2: starting nodemanager, logging to &#x2F;opt&#x2F;bigdata&#x2F;hadoop-2.7.7&#x2F;logs&#x2F;yarn-bennie-nodemanager-slave2.out</span><br><span class="line">slave1: starting nodemanager, logging to &#x2F;opt&#x2F;bigdata&#x2F;hadoop-2.7.7&#x2F;logs&#x2F;yarn-bennie-nodemanager-slave1.out</span><br></pre></td></tr></table></figure><p><code>jps</code> 查看 <code>java</code> 进程</p><ul><li>master1</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">bennie@master1:&#x2F;opt&#x2F;bigdata&#x2F;hadoop-2.7.7$ jps</span><br><span class="line">62372 SecondaryNameNode</span><br><span class="line">62164 NameNode</span><br><span class="line">62534 ResourceManager</span><br><span class="line">62794 Jps</span><br></pre></td></tr></table></figure><ul><li>slave1</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bennie@slave1:&#x2F;opt$ jps</span><br><span class="line">3729 NodeManager</span><br><span class="line">3593 DataNode</span><br><span class="line">3850 Jps</span><br></pre></td></tr></table></figure><ul><li>slave2</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3382 NodeManager</span><br><span class="line">3503 Jps</span><br><span class="line">3247 DataNode</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hadoop </category>
          
          <category> ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop2.7.7 环境配置-伪分布式模式</title>
      <link href="post/hadoop-pseudo-distributed.html"/>
      <url>post/hadoop-pseudo-distributed.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>前面我们已经搭建了 <a href="/post/hadoop-standalone.html">本地模式</a></p><p>接着上节我们开始搭建一个<code>伪分布式模式</code></p><blockquote><p>前面已经配置好 <code>JAVA_HOME</code>、<code>HADOOP_HOME</code> 环境变量。</p></blockquote><p>首先创建 临时目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir <span class="variable">$&#123;HADOOP_HOME&#125;</span>/tmp</span><br></pre></td></tr></table></figure><h2 id="core-sitexml"><a class="markdownIt-Anchor" href="#core-sitexml"></a> core-site.xml</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim <span class="variable">$&#123;HADOOP_HOME&#125;</span>/etc/hadoop/core-site.xml</span><br></pre></td></tr></table></figure><p>在 <code>configuration</code>节点下添加如下配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定HADOOP所使用的文件系统 schema（URI），HDFS  NameNode 的地址 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.defaultFS<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://localhost:9000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定hadoop运行时产生临时文件的存储目录 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.tmp.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>/opt/bigdata/hadoop-2.7.7/tmp<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="hdfs-sitexml"><a class="markdownIt-Anchor" href="#hdfs-sitexml"></a> hdfs-site.xml</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim <span class="variable">$&#123;HADOOP_HOME&#125;</span>/etc/hadoop/hdfs-site.xml</span><br></pre></td></tr></table></figure><p>在 <code>configuration</code>节点下添加如下配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定HDFS副本的数量 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.replication<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>1<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.secondary.http.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>localhost:50090<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="mapred-sitexml"><a class="markdownIt-Anchor" href="#mapred-sitexml"></a> mapred-site.xml</h2><p>将 <code>mapred-site.xml.template</code> 复制为 <code>mapred-site.xml</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp <span class="variable">$&#123;HADOOP_HOME&#125;</span>/etc/hadoop/mapred-site.xml.template <span class="variable">$&#123;HADOOP_HOME&#125;</span>/etc/hadoop/mapred-site.xml</span><br><span class="line">vim <span class="variable">$&#123;HADOOP_HOME&#125;</span>/etc/hadoop/mapred-site.xml</span><br></pre></td></tr></table></figure><p>在 <code>configuration</code>节点下添加如下配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定mr运行在yarn上 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.framework.name<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>yarn<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="yarn-sitexml"><a class="markdownIt-Anchor" href="#yarn-sitexml"></a> yarn-site.xml</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim <span class="variable">$&#123;HADOOP_HOME&#125;</span>/etc/hadoop/yarn-site.xml</span><br></pre></td></tr></table></figure><p>在 <code>configuration</code>节点下添加如下配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定 YARN 的 ResourceManager 地址 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.hostname<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>localhost<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- reducer获取数据的方式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>mapreduce_shuffle<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="格式化namenode"><a class="markdownIt-Anchor" href="#格式化namenode"></a> 格式化<code>namenode</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs namenode -format</span><br></pre></td></tr></table></figure><p>格式化成功会在 <code>$&#123;HADOOP_HOME&#125;/tmp/dfs/name/current/</code> 目录生成几个文件，表示成功，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fsimage_0000000000000000000</span><br><span class="line">fsimage_0000000000000000000.md5</span><br><span class="line">seen_txid</span><br><span class="line">VERSION</span><br></pre></td></tr></table></figure><h2 id="启动服务"><a class="markdownIt-Anchor" href="#启动服务"></a> 启动服务</h2><p>进入${HADOOP_HOME}目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$&#123;HADOOP_HOME&#125;</span></span><br></pre></td></tr></table></figure><h3 id="启动-datanode"><a class="markdownIt-Anchor" href="#启动-datanode"></a> 启动 <code>datanode</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sbin/hadoop-daemon.sh start datanode</span><br></pre></td></tr></table></figure><h3 id="启动-secondarynamenode"><a class="markdownIt-Anchor" href="#启动-secondarynamenode"></a> 启动 <code>SecondaryNameNode</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sbin/hadoop-daemon.sh start secondarynamenode</span><br></pre></td></tr></table></figure><h3 id="启动-resourcemanager"><a class="markdownIt-Anchor" href="#启动-resourcemanager"></a> 启动 <code>Resourcemanager</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sbin/yarn-daemon.sh start resourcemanager</span><br></pre></td></tr></table></figure><h3 id="启动-nodemanager"><a class="markdownIt-Anchor" href="#启动-nodemanager"></a> 启动 <code>NodeManager</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sbin/yarn-daemon.sh start nodemanager</span><br></pre></td></tr></table></figure><p>启动完成后,使用<code>jps</code>命令查看<code>java</code>进程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">48295 Jps</span><br><span class="line">47776 NameNode</span><br><span class="line">47860 DataNode</span><br><span class="line">48084 NodeManager</span><br><span class="line">47945 SecondaryNameNode</span><br><span class="line">48219 ResourceManager</span><br></pre></td></tr></table></figure><p>启动<code>dfs</code>服务和<code>yarn</code>服务的另外方式</p><blockquote><p>开启 dfs，包括 namenode，datanode，secondarynamenode 服务</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sbin/start-dfs.sh</span><br></pre></td></tr></table></figure><blockquote><p>开启<code>yarn</code>，包括<code>resourcemanager</code>，<code>nodemanager</code></p></blockquote><p>sbin/start-yarn.sh</p><blockquote><p><s>开启所有的服务</s>(过时)</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bash</span><br><span class="line">sbin&#x2F;start-all.sh</span><br></pre></td></tr></table></figure><p>配置完成后,我们访问 <code>yarn</code> 的 web 管理页面 <code>http://ip:8088/</code></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/yarn-web-page.png" alt="" /></p><h3 id="运行-mapreduce-job"><a class="markdownIt-Anchor" href="#运行-mapreduce-job"></a> 运行 <code>MapReduce Job</code></h3><blockquote><p>使用 <code>hdfs shell</code> 将 <code>words</code> 文件上传到 <code>hdfs</code></p></blockquote><p>首先创建 <code>input</code> 目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs dfs -mkdir -p /input</span><br></pre></td></tr></table></figure><p>上传 <code>words</code> 文件到 <code>input</code> 目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs dfs -put words /input</span><br></pre></td></tr></table></figure><blockquote><p>运行 <code>WordCount MapReduce Job</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn jar share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.7.jar wordcount  /input /output</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">12&#x2F;01&#x2F;21 22:27:33 INFO mapreduce.JobSubmitter: Submitting tokens for job: job_1611223975969_0001</span><br><span class="line">12&#x2F;01&#x2F;21 22:27:35 INFO impl.YarnClientImpl: Submitted application application_1611223975969_0001</span><br><span class="line">12&#x2F;01&#x2F;21 22:27:36 INFO mapreduce.Job: The url to track the job: http:&#x2F;&#x2F;master1:8088&#x2F;proxy&#x2F;application_1611223975969_0001&#x2F;</span><br><span class="line">12&#x2F;01&#x2F;21 22:27:36 INFO mapreduce.Job: Running job: job_1611223975969_0001</span><br><span class="line">12&#x2F;01&#x2F;21 22:28:07 INFO mapreduce.Job: Job job_1611223975969_0001 running in uber mode : false</span><br><span class="line">12&#x2F;01&#x2F;21 22:28:07 INFO mapreduce.Job:  map 0% reduce 0%</span><br><span class="line">12&#x2F;01&#x2F;21 22:28:27 INFO mapreduce.Job:  map 100% reduce 0%</span><br><span class="line">12&#x2F;01&#x2F;21 22:28:34 INFO mapreduce.Job:  map 100% reduce 100%</span><br><span class="line">12&#x2F;01&#x2F;21 22:28:35 INFO mapreduce.Job: Job job_1611223975969_0001 completed successfully</span><br><span class="line">12&#x2F;01&#x2F;21 22:28:35 INFO mapreduce.Job: Counters: 49</span><br><span class="line">    File System Counters</span><br><span class="line">        FILE: Number of bytes read&#x3D;123</span><br><span class="line">        FILE: Number of bytes written&#x3D;245681</span><br><span class="line">        FILE: Number of read operations&#x3D;0</span><br><span class="line">        FILE: Number of large read operations&#x3D;0</span><br><span class="line">        FILE: Number of write operations&#x3D;0</span><br><span class="line">        HDFS: Number of bytes read&#x3D;179</span><br><span class="line">        HDFS: Number of bytes written&#x3D;77</span><br><span class="line">        HDFS: Number of read operations&#x3D;6</span><br><span class="line">        HDFS: Number of large read operations&#x3D;0</span><br><span class="line">        HDFS: Number of write operations&#x3D;2</span><br><span class="line">    Job Counters</span><br><span class="line">        Launched map tasks&#x3D;1</span><br><span class="line">        Launched reduce tasks&#x3D;1</span><br><span class="line">        Data-local map tasks&#x3D;1</span><br><span class="line">        Total time spent by all maps in occupied slots (ms)&#x3D;18107</span><br><span class="line">        Total time spent by all reduces in occupied slots (ms)&#x3D;4454</span><br><span class="line">        Total time spent by all map tasks (ms)&#x3D;18107</span><br><span class="line">        Total time spent by all reduce tasks (ms)&#x3D;4454</span><br><span class="line">        Total vcore-milliseconds taken by all map tasks&#x3D;18107</span><br><span class="line">        Total vcore-milliseconds taken by all reduce tasks&#x3D;4454</span><br><span class="line">        Total megabyte-milliseconds taken by all map tasks&#x3D;18541568</span><br><span class="line">        Total megabyte-milliseconds taken by all reduce tasks&#x3D;4560896</span><br><span class="line">    Map-Reduce Framework</span><br><span class="line">        Map input records&#x3D;4</span><br><span class="line">        Map output records&#x3D;14</span><br><span class="line">        Map output bytes&#x3D;137</span><br><span class="line">        Map output materialized bytes&#x3D;123</span><br><span class="line">        Input split bytes&#x3D;98</span><br><span class="line">        Combine input records&#x3D;14</span><br><span class="line">        Combine output records&#x3D;10</span><br><span class="line">        Reduce input groups&#x3D;10</span><br><span class="line">        Reduce shuffle bytes&#x3D;123</span><br><span class="line">        Reduce input records&#x3D;10</span><br><span class="line">        Reduce output records&#x3D;10</span><br><span class="line">        Spilled Records&#x3D;20</span><br><span class="line">        Shuffled Maps &#x3D;1</span><br><span class="line">        Failed Shuffles&#x3D;0</span><br><span class="line">        Merged Map outputs&#x3D;1</span><br><span class="line">        GC time elapsed (ms)&#x3D;205</span><br><span class="line">        CPU time spent (ms)&#x3D;8210</span><br><span class="line">        Physical memory (bytes) snapshot&#x3D;324100096</span><br><span class="line">        Virtual memory (bytes) snapshot&#x3D;3861331968</span><br><span class="line">        Total committed heap usage (bytes)&#x3D;170004480</span><br><span class="line">    Shuffle Errors</span><br><span class="line">        BAD_ID&#x3D;0</span><br><span class="line">        CONNECTION&#x3D;0</span><br><span class="line">        IO_ERROR&#x3D;0</span><br><span class="line">        WRONG_LENGTH&#x3D;0</span><br><span class="line">        WRONG_MAP&#x3D;0</span><br><span class="line">        WRONG_REDUCE&#x3D;0</span><br><span class="line">    File Input Format Counters</span><br><span class="line">        Bytes Read&#x3D;81</span><br><span class="line">    File Output Format Counters</span><br><span class="line">        Bytes Written&#x3D;77</span><br></pre></td></tr></table></figure><blockquote><p>查看输出结果目录</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs dfs -ls /output</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Found 2 items</span><br><span class="line">-rw-r--r--   1 bennie supergroup          0 2021-01-12 22:28 &#x2F;output&#x2F;_SUCCESS</span><br><span class="line">-rw-r--r--   1 bennie supergroup         77 2021-01-12 22:28 &#x2F;output&#x2F;part-r-00000</span><br></pre></td></tr></table></figure><ul><li><code>output</code>目录中有两个文件，<code>_SUCCESS</code>文件是空文件，有这个文件说明<code>Job</code>执行成功。</li><li><code>part-r-00000</code>文件是结果文件，其中<code>-r-</code>说明这个文件是<code>Reduce</code>阶段产生的结果。</li></ul><blockquote><p>查看输出文件结果</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs dfs -cat  /output/part-r-00000</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">hadoop  2</span><br><span class="line">hbase   1</span><br><span class="line">hive    2</span><br><span class="line">java    2</span><br><span class="line">php 1</span><br><span class="line">python  1</span><br><span class="line">scala   2</span><br><span class="line">spark   3</span><br></pre></td></tr></table></figure><h3 id="停止hadoop服务"><a class="markdownIt-Anchor" href="#停止hadoop服务"></a> 停止<code>Hadoop</code>服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 停止namenode</span></span><br><span class="line">sbin/hadoop-daemon.sh stop namenode</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止datanode</span></span><br><span class="line">sbin/hadoop-daemon.sh stop datanode</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止resourcemanager</span></span><br><span class="line">sbin/yarn-daemon.sh stop resourcemanager</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止nodemanager</span></span><br><span class="line">sbin/yarn-daemon.sh stop nodemanager</span><br></pre></td></tr></table></figure><blockquote><p>停止<code>Hadoop</code>服务的其他方式</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 停止dfs服务</span></span><br><span class="line">sbin/stop-dfs.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止yarn服务</span></span><br><span class="line">sbin/stop-yarn.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止所有服务</span></span><br><span class="line">sbin/stop-all.sh</span><br></pre></td></tr></table></figure><div class="note info flat"><p><strong>注意</strong></p><blockquote><p>开启历史服务</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sbin/mr-jobhistory-daemon.sh start historyserver</span><br></pre></td></tr></table></figure><p>可以通过<code>http://ip:19888</code>打开，可看到<code>JobHistory</code>页面</p><blockquote><p>开启日志</p></blockquote><p><code>hadoop</code>默认不启动日志，我们可以在<code>yarn-site.xml</code>文件中配置启用日志。</p><ul><li><code>log</code>环境配置</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;property&gt;</span></span><br><span class="line"><span class="string">&lt;!--是否启用日志--&gt;</span></span><br><span class="line"><span class="string">&lt;name&gt;yarn.log-aggregation-enable&lt;/name&gt;</span></span><br><span class="line"><span class="string">&lt;value&gt;true&lt;/value&gt;</span></span><br><span class="line"><span class="string">&lt;/property&gt;</span></span><br><span class="line"><span class="string">&lt;property&gt;</span></span><br><span class="line"><span class="string">&lt;!--设置日志保存时间,单位秒--&gt;</span></span><br><span class="line"><span class="string">&lt;name&gt;yarn.log-aggregation.retain-seconds&lt;/name&gt;</span></span><br><span class="line"><span class="string">&lt;value&gt;106800&lt;/value&gt;</span></span><br><span class="line"><span class="string">&lt;/property&gt;</span></span><br></pre></td></tr></table></figure><ul><li>重启<code>Yarn</code>进程</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 停止yarn服务</span></span><br><span class="line">sbin/stop-yarn.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动yarn服务</span></span><br><span class="line">sbin/start-yarn.sh</span><br></pre></td></tr></table></figure><ul><li>重启<code>HistoryServer</code>进程</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 停止HistoryServer服务</span></span><br><span class="line">sbin/mr-jobhistory-daemon.sh stop historyserver</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启HistoryServer服务</span></span><br><span class="line">sbin/mr-jobhistory-daemon.sh start historyserver</span><br></pre></td></tr></table></figure><ul><li>测试日志，运行一个<code>MapReduce</code>的<code>demo</code>，产生日志</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn jar share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.7.jar wordcount /input /output2</span><br></pre></td></tr></table></figure></div><h2 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h2><p><a href="https://blog.csdn.net/qq_33689414/article/details/79223186">hadoop 集群环境搭建</a></p>]]></content>
      
      
      <categories>
          
          <category> hadoop </category>
          
          <category> ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop2.7.7 环境配置-本地模式</title>
      <link href="post/hadoop-standalone.html"/>
      <url>post/hadoop-standalone.html</url>
      
        <content type="html"><![CDATA[<h2 id="准备"><a class="markdownIt-Anchor" href="#准备"></a> 准备</h2><p>前面我们已经编译好了 <code>hadoop2.7.7</code>,在 <code>/opt/hadoop/hadoop-2.7.7/hadoop-dist/target/</code> 下 生成了 <code>hadoop-2.7.7.tar.gz</code></p><blockquote><p>首先我们创建一个 <code>/opt/bigdata</code> 目录,并修改所属为当前用户</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /opt/bigdata</span><br><span class="line">sudo chown -R <span class="variable">$USER</span>:<span class="variable">$GROUPS</span> /opt/bigdata</span><br></pre></td></tr></table></figure><blockquote><p>将安装包复制到 <code>/opt/bigdata/</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /opt/hadoop/hadoop-2.7.7/hadoop-dist/target/hadoop-2.7.7.tar.gz /opt/bigdata/</span><br></pre></td></tr></table></figure><blockquote><p>解压安装包</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/bigdata/</span><br><span class="line">tar -zxvf hadoop-2.7.7.tar.gz</span><br></pre></td></tr></table></figure><blockquote><p>配置环境变量</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/profile</span><br></pre></td></tr></table></figure><p>配置 <code>HADOOP_HOME</code> 变量,将 <code>hadoop</code> 的 <code>bin</code> 目录加入到 <code>PATH</code> 变量中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export HADOOP_HOME=/opt/bigdata/hadoop-2.7.7</span><br><span class="line">PATH=$PATH:$HADOOP_HOME/bin</span><br></pre></td></tr></table></figure><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p><code>Hadoop</code> 的集中安装模式</p><ol><li><strong>本地模式</strong>: <code>Hadoop</code> 本地模式只是用于本地开发调试，或者快速安装体验 <code>Hadoop</code></li><li><strong>伪分布式模式</strong>: 学习 <code>Hadoop</code> 一般是在伪分布式模式下进行。这种模式是在一台机器上各个进程上运行 <code>Hadoop</code> 的各个模块，伪分布式的意思是虽然各个模块是在各个进程上分开运行的，但是只是运行在一个操作系统上的，并不是真正的分布式。</li><li><strong>完全分布式安装</strong>: 完全分布式模式才是生产环境采用的模式，<code>Hadoop</code> 运行在服务器集群上，生产环境一般都会做 <code>HA</code>，以实现高可用。</li><li><strong>HA 完全分布式</strong>: <code>HA</code> 是指高可用，为了解决 <code>Hadoop</code> 单点故障问题，生产环境一般都做 <code>HA</code> 部署。</li></ol><p>不同模式安装的区分的依据是<code>NameNode</code>、<code>DataNode</code>、<code>ResourceManager</code>、<code>NodeManager</code> 等模块运行在几个 JVM 进程、几个机器。</p><table><thead><tr><th style="text-align:center">模式名称</th><th style="text-align:center">各个模块占用的 JVM 进程数</th><th style="text-align:center">各个模块运行在几个机器数上</th></tr></thead><tbody><tr><td style="text-align:center">本地模式</td><td style="text-align:center">1 个</td><td style="text-align:center">1 个</td></tr><tr><td style="text-align:center">伪分布式模式</td><td style="text-align:center">N 个</td><td style="text-align:center">1 个</td></tr><tr><td style="text-align:center">完全分布式模式</td><td style="text-align:center">N 个</td><td style="text-align:center">N 个</td></tr><tr><td style="text-align:center">HA 完全分布式</td><td style="text-align:center">N 个</td><td style="text-align:center">N 个</td></tr></tbody></table><blockquote><p>本地模式也就是单机模式,本地模式是最简单的模式，所有模块都运行与一个<code>JVM</code>进程中，使用的本地文件系统，而不是<code>HDFS</code>，本地模式主要是用于本地开发过程中的运行调试用。</p></blockquote><h2 id="linux-环境"><a class="markdownIt-Anchor" href="#linux-环境"></a> <code>Linux</code> 环境</h2><p>前面编译<code>hadoop</code>到时候已经配置过<code>JDK</code>相关环境变量,下面我们直接运行<code>hadoop</code>自带的<code>wordcount</code>示例</p><p>首先创建一个 <code>words</code> 文件,</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim words</span><br></pre></td></tr></table></figure><p>随机输入一些单词</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">java hadoop spark</span><br><span class="line">python scala hive</span><br><span class="line">hive hbase scala spark</span><br><span class="line">java php spark hadoop</span><br></pre></td></tr></table></figure><p>运行 <code>hadoop</code> 的 wordcount <code>mapreduce</code> 示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop jar <span class="variable">$HADOOP_HOME</span>/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.7.jar wordcount words output</span><br></pre></td></tr></table></figure><p>查看<code>output</code> 目录下生成了两个文件 <code>part-r-00000</code> 和 <code>_SUCCESS</code><br /><code>_SUCCESS</code> 说明运行成功了,我们查看 <code>part-r-00000</code> 的输出结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">hadoop2</span><br><span class="line">hbase1</span><br><span class="line">hive2</span><br><span class="line">java2</span><br><span class="line">php1</span><br><span class="line">python1</span><br><span class="line">scala2</span><br><span class="line">spark3</span><br></pre></td></tr></table></figure><h2 id="windows-环境"><a class="markdownIt-Anchor" href="#windows-环境"></a> <code>Windows</code> 环境</h2><blockquote><p><code>windows</code> 需要配置 <code>hadoop</code> 环境,配置 <code>HADOOP_HOME</code> 环境变量<br /><code>windows</code> 环境需要 <code>hadoop.dll</code> 动态链接库, <code>winutils.exe</code> 文件。</p></blockquote><p>关于这些文件,我们可以选择自己编译,也可以下载别人已经编译好的。<br />贴心的博主在<code>github</code>找到了已经编译好的<a href="https://github.com/speedsky/hadoop2.7.7/tree/master/hadoop-2.7.7">hadoop2.7.7</a>文件。</p><ul><li>将 <code>hadoop2.7.7</code> 下载下来, 配置好环境 <code>HADOOP_HOME</code> 以及 <code>PATH</code> 变量。(可选)</li><li>将 bin 目录下的 <code>hadoop.dll</code> 复制到 <code>C:\Windows\System32</code> 下。</li></ul><blockquote><p><code>windows</code>我们直接使用 <code>IDE</code> 写一个 <code>wordcount</code> 示例运行。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Word Count</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WordCount</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="comment">// 如果没有配置过 HADOOP_HOME 设置 property 也是可以的</span></span><br><span class="line">        System.setProperty(<span class="string">&quot;hadoop.home.dir&quot;</span>,<span class="string">&quot;D:\\Program Files\\hadoop-2.7.7&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">WordCountMapper</span> <span class="keyword">extends</span> <span class="title">MapReduceBase</span> <span class="keyword">implements</span> <span class="title">Mapper</span>&lt;<span class="title">LongWritable</span>, <span class="title">Text</span>, <span class="title">Text</span>, <span class="title">IntWritable</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> IntWritable ONE = <span class="keyword">new</span> IntWritable(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">private</span> Text text = <span class="keyword">new</span> Text();</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">map</span><span class="params">(LongWritable key, Text value, OutputCollector&lt;Text, IntWritable&gt; output, Reporter reporter)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">            String line = value.toString();</span><br><span class="line">            <span class="comment">// 将字符串根据 , 进行切割</span></span><br><span class="line">            StringTokenizer tokenizer = <span class="keyword">new</span> StringTokenizer(line);</span><br><span class="line">            <span class="keyword">while</span> (tokenizer.hasMoreTokens()) &#123;</span><br><span class="line">                String token = tokenizer.nextToken();</span><br><span class="line">                <span class="keyword">if</span> (StringUtils.isNotBlank(token)) &#123;</span><br><span class="line">                    text.set(token);</span><br><span class="line">                    <span class="comment">// 输出为 text:1  的格式</span></span><br><span class="line">                    output.collect(text, ONE);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">WordCountReducer</span> <span class="keyword">extends</span> <span class="title">MapReduceBase</span> <span class="keyword">implements</span> <span class="title">Reducer</span>&lt;<span class="title">Text</span>, <span class="title">IntWritable</span>, <span class="title">Text</span>, <span class="title">IntWritable</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">reduce</span><span class="params">(Text key, Iterator&lt;IntWritable&gt; values, OutputCollector&lt;Text, IntWritable&gt; output, Reporter reporter)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">            <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (values.hasNext()) &#123;</span><br><span class="line">                sum += values.next().get();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 统计每个 text 出现的格式,输出格式为 key:sum</span></span><br><span class="line">            output.collect(key, <span class="keyword">new</span> IntWritable(sum));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        JobConf conf = <span class="keyword">new</span> JobConf(WordCount.class);</span><br><span class="line">        conf.setJobName(<span class="string">&quot;WordCount&quot;</span>);</span><br><span class="line">        <span class="comment">// 指定 MapTask 的输出类型</span></span><br><span class="line">        conf.setOutputKeyClass(Text.class);</span><br><span class="line">        conf.setOutputValueClass(IntWritable.class);</span><br><span class="line">        <span class="comment">// 指定 Mapper 类</span></span><br><span class="line">        conf.setMapperClass(WordCountMapper.class);</span><br><span class="line">        <span class="comment">// 指定 Combiner 类</span></span><br><span class="line">        conf.setCombinerClass(WordCountReducer.class);</span><br><span class="line">        <span class="comment">// 指定 Reducer 类</span></span><br><span class="line">        conf.setReducerClass(WordCountReducer.class);</span><br><span class="line">        <span class="comment">//指定输入/输出格式化类型</span></span><br><span class="line">        conf.setInputFormat(TextInputFormat.class);</span><br><span class="line">        conf.setOutputFormat(TextOutputFormat.class);</span><br><span class="line">        <span class="comment">// 指定 MapReduce 程序数据的输入和输出路径</span></span><br><span class="line">        FileInputFormat.setInputPaths(conf, <span class="keyword">new</span> Path(<span class="string">&quot;words&quot;</span>));</span><br><span class="line">        FileOutputFormat.setOutputPath(conf, <span class="keyword">new</span> Path(<span class="string">&quot;output&quot;</span>));</span><br><span class="line">        JobClient.runJob(conf);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>运行一下,看看结果。</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/windows-wordcount-console-output.png" alt="" /></p><blockquote><p>我们再看一下输出目录 <code>output</code>。</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/windows-wordcount-output-directory.png" alt="" /></p><blockquote><p><code>_SUCCESS</code> 说明运行成功了,我们查看 <code>part-00000</code> 的输出结果。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">hadoop2</span><br><span class="line">hbase1</span><br><span class="line">hive2</span><br><span class="line">java2</span><br><span class="line">php1</span><br><span class="line">python1</span><br><span class="line">scala2</span><br><span class="line">spark3</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hadoop </category>
          
          <category> ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu16.04 编译 Hadoop2.7.7</title>
      <link href="post/hadoop-ubuntu-compile.html"/>
      <url>post/hadoop-ubuntu-compile.html</url>
      
        <content type="html"><![CDATA[<h2 id="准备"><a class="markdownIt-Anchor" href="#准备"></a> 准备</h2><ol><li><a href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html"><code>JDK 1.8</code></a></li><li><a href="https://downloads.apache.org/maven/maven-3/3.5.4/binaries/apache-maven-3.5.4-bin.tar.gz"><code>Maven 3.5.4</code></a></li><li><a href="https://ftp-stud.hs-esslingen.de/pub/Mirrors/ftp.apache.org/dist/ant/binaries/apache-ant-1.9.15-bin.tar.gz"><code>Ant 1.9.15</code></a></li><li><a href="https://codeload.github.com/apache/hadoop/zip/rel/release-2.7.7"><code>Hadoop 2.7.7</code></a></li><li><a href="https://github.com/protocolbuffers/protobuf/releases/download/v2.5.0/protobuf-2.5.0.tar.gz"><code>Protobuf 2.5.0</code></a></li></ol><h2 id="配置运行环境"><a class="markdownIt-Anchor" href="#配置运行环境"></a> 配置运行环境</h2><blockquote><p>安装系统依赖包</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install libxrender1 libxtst6 libxi6 g++ autoconf automake libtool cmake zlib1g-dev pkg-config libssl-dev -y</span><br></pre></td></tr></table></figure><blockquote><p>下载完 <code>Jdk</code> 、 <code>ant</code> 、 <code>Maven</code> 后,将压缩包解压到 <code>/opt/java</code> 、 <code>/opt/maven</code> 和 <code>/opt/ant/</code> 目录下。</p></blockquote><p>Jdk</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /opt/java </span><br><span class="line">sudo tar -zxvf jdk-8u271-linux-x64.tar.gz -C /opt/java/</span><br></pre></td></tr></table></figure><p>Maven</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /opt/maven</span><br><span class="line">sudo tar -zxvf apache-maven-3.5.4-bin.tar.gz -C /opt/maven/</span><br></pre></td></tr></table></figure><p>Ant</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /opt/ant</span><br><span class="line">sudo tar -zxvf apache-ant-1.9.15-bin.tar.gz -C /opt/ant/</span><br></pre></td></tr></table></figure><blockquote><p>配置环境变量</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/profile</span><br></pre></td></tr></table></figure><p>在文件尾部追加以下内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/opt/java/jdk1.8.0_271</span><br><span class="line">export JRE_HOME=$JAVA_HOME/jre</span><br><span class="line">export MAVEN_HOME=/opt/maven/apache-maven-3.5.4</span><br><span class="line">export ANT_HOME=/opt/ant/apache-ant-1.9.15</span><br><span class="line">PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin:$MAVEN_HOME/bin:$ANT_HOME/bin</span><br></pre></td></tr></table></figure><p>使配置文件生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><blockquote><p>终端输入 <code>java -version</code></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">java version &quot;1.8.0_271&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_271-b09)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.271-b09, mixed mode)</span><br></pre></td></tr></table></figure><blockquote><p>终端输入 <code>mvn -version</code></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T11:33:14-07:00)</span><br><span class="line">Maven home: &#x2F;opt&#x2F;maven&#x2F;apache-maven-3.5.4</span><br><span class="line">Java version: 1.8.0_271, vendor: Oracle Corporation, runtime: &#x2F;opt&#x2F;java&#x2F;jdk1.8.0_271&#x2F;jre</span><br><span class="line">Default locale: en_US, platform encoding: UTF-8</span><br><span class="line">OS name: &quot;linux&quot;, version: &quot;4.4.0-186-generic&quot;, arch: &quot;amd64&quot;, family: &quot;unix&quot;</span><br></pre></td></tr></table></figure><blockquote><p>使用阿里云镜像仓库</p></blockquote><p>修改 <code>maven</code> 配置文件,在 <code>mirrors</code> 标签下新增 阿里云镜像仓库配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus-aliyun<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>Nexus aliyun<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="编译-protobuf"><a class="markdownIt-Anchor" href="#编译-protobuf"></a> 编译 protobuf</h2><blockquote><p>将 <code>protobuf</code> 解压到 <code>/opt/protobuf</code> 目录下</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /opt/protobuf</span><br><span class="line">sudo tar -zxvf protobuf-2.5.0.tar.gz -C /opt/protobuf/</span><br></pre></td></tr></table></figure><blockquote><p>开始编译 <code>protobuf</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span>  /opt/protobuf/protobuf-2.5.0</span><br><span class="line">sudo ./configure --prefix=/usr/<span class="built_in">local</span></span><br><span class="line">sudo make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><blockquote><p>终端输入 <code>protoc --version</code></p></blockquote><p><code>libprotoc 2.5.0</code></p><h2 id="编译-hadoop"><a class="markdownIt-Anchor" href="#编译-hadoop"></a> 编译 hadoop</h2><blockquote><p>解压 <code>hadoop</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /opt/hadoop</span><br><span class="line">sudo tar -zxvf hadoop-rel-release-2.7.7.tar.gz -C /opt/hadoop/</span><br></pre></td></tr></table></figure><blockquote><p>进入 <code>hadoop</code> 根目录,并使用 <code>maven package</code> 编译打包</p></blockquote><div class="note info flat"><p>我们把提前准备好的<code>tomcat6.0.48</code>文件放到下载目录,不然的话编译的时候去官网下载,那速度。。。,而且有可能会一直下载是吧。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /opt/hadoop/hadoop-2.7.7/hadoop-common-project/hadoop-kms/downloads</span><br><span class="line">mkdir -p /opt/hadoop/hadoop-2.7.7/hadoop-hdfs-project/hadoop-hdfs-httpfs/downloads</span><br><span class="line">cp apache-tomcat-6.0.48.tar.gz /opt/hadoop/hadoop-2.7.7/hadoop-common-project/hadoop-kms/downloads/</span><br><span class="line">cp apache-tomcat-6.0.48.tar.gz /opt/hadoop/hadoop-2.7.7/hadoop-hdfs-project/hadoop-hdfs-httpfs/downloads/</span><br></pre></td></tr></table></figure></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/hadoop</span><br><span class="line">sudo chown -R <span class="variable">$USER</span>:<span class="variable">$GROUPS</span> .</span><br><span class="line">mv hadoop-rel-release-2.7.7 hadoop-2.7.7</span><br><span class="line"><span class="built_in">cd</span> hadoop-2.7.7</span><br><span class="line">mvn package -Pdist,native -DskipTests -Dtar</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Reactor Summary:</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] Apache Hadoop Main 2.7.7 ........................... SUCCESS [  2.163 s]</span><br><span class="line">[INFO] Apache Hadoop Build Tools .......................... SUCCESS [  2.272 s]</span><br><span class="line">[INFO] Apache Hadoop Project POM .......................... SUCCESS [  1.461 s]</span><br><span class="line">[INFO] Apache Hadoop Annotations .......................... SUCCESS [  3.528 s]</span><br><span class="line">[INFO] Apache Hadoop Assemblies ........................... SUCCESS [  0.403 s]</span><br><span class="line">[INFO] Apache Hadoop Project Dist POM ..................... SUCCESS [  2.059 s]</span><br><span class="line">[INFO] Apache Hadoop Maven Plugins ........................ SUCCESS [  4.722 s]</span><br><span class="line">[INFO] Apache Hadoop MiniKDC .............................. SUCCESS [  6.255 s]</span><br><span class="line">[INFO] Apache Hadoop Auth ................................. SUCCESS [  5.903 s]</span><br><span class="line">[INFO] Apache Hadoop Auth Examples ........................ SUCCESS [  4.657 s]</span><br><span class="line">[INFO] Apache Hadoop Common ............................... SUCCESS [01:20 min]</span><br><span class="line">[INFO] Apache Hadoop NFS .................................. SUCCESS [  6.239 s]</span><br><span class="line">[INFO] Apache Hadoop KMS .................................. SUCCESS [ 11.640 s]</span><br><span class="line">[INFO] Apache Hadoop Common Project ....................... SUCCESS [  0.124 s]</span><br><span class="line">[INFO] Apache Hadoop HDFS ................................. SUCCESS [01:48 min]</span><br><span class="line">[INFO] Apache Hadoop HttpFS ............................... SUCCESS [ 19.675 s]</span><br><span class="line">[INFO] Apache Hadoop HDFS BookKeeper Journal .............. SUCCESS [ 48.737 s]</span><br><span class="line">[INFO] Apache Hadoop HDFS-NFS ............................. SUCCESS [  4.538 s]</span><br><span class="line">[INFO] Apache Hadoop HDFS Project ......................... SUCCESS [  0.118 s]</span><br><span class="line">[INFO] hadoop-yarn ........................................ SUCCESS [  0.133 s]</span><br><span class="line">[INFO] hadoop-yarn-api .................................... SUCCESS [ 37.421 s]</span><br><span class="line">[INFO] hadoop-yarn-common ................................. SUCCESS [02:46 min]</span><br><span class="line">[INFO] hadoop-yarn-server ................................. SUCCESS [  0.118 s]</span><br><span class="line">[INFO] hadoop-yarn-server-common .......................... SUCCESS [ 10.927 s]</span><br><span class="line">[INFO] hadoop-yarn-server-nodemanager ..................... SUCCESS [ 20.784 s]</span><br><span class="line">[INFO] hadoop-yarn-server-web-proxy ....................... SUCCESS [  3.615 s]</span><br><span class="line">[INFO] hadoop-yarn-server-applicationhistoryservice ....... SUCCESS [  7.805 s]</span><br><span class="line">[INFO] hadoop-yarn-server-resourcemanager ................. SUCCESS [ 20.598 s]</span><br><span class="line">[INFO] hadoop-yarn-server-tests ........................... SUCCESS [  5.801 s]</span><br><span class="line">[INFO] hadoop-yarn-client ................................. SUCCESS [  6.577 s]</span><br><span class="line">[INFO] hadoop-yarn-server-sharedcachemanager .............. SUCCESS [  3.816 s]</span><br><span class="line">[INFO] hadoop-yarn-applications ........................... SUCCESS [  0.104 s]</span><br><span class="line">[INFO] hadoop-yarn-applications-distributedshell .......... SUCCESS [  3.102 s]</span><br><span class="line">[INFO] hadoop-yarn-applications-unmanaged-am-launcher ..... SUCCESS [  2.308 s]</span><br><span class="line">[INFO] hadoop-yarn-site ................................... SUCCESS [  0.078 s]</span><br><span class="line">[INFO] hadoop-yarn-registry ............................... SUCCESS [  5.831 s]</span><br><span class="line">[INFO] hadoop-yarn-project ................................ SUCCESS [  3.839 s]</span><br><span class="line">[INFO] hadoop-mapreduce-client ............................ SUCCESS [  0.234 s]</span><br><span class="line">[INFO] hadoop-mapreduce-client-core ....................... SUCCESS [ 20.956 s]</span><br><span class="line">[INFO] hadoop-mapreduce-client-common ..................... SUCCESS [ 17.338 s]</span><br><span class="line">[INFO] hadoop-mapreduce-client-shuffle .................... SUCCESS [  3.806 s]</span><br><span class="line">[INFO] hadoop-mapreduce-client-app ........................ SUCCESS [  9.730 s]</span><br><span class="line">[INFO] hadoop-mapreduce-client-hs ......................... SUCCESS [  6.573 s]</span><br><span class="line">[INFO] hadoop-mapreduce-client-jobclient .................. SUCCESS [ 21.295 s]</span><br><span class="line">[INFO] hadoop-mapreduce-client-hs-plugins ................. SUCCESS [  2.017 s]</span><br><span class="line">[INFO] Apache Hadoop MapReduce Examples ................... SUCCESS [  6.246 s]</span><br><span class="line">[INFO] hadoop-mapreduce ................................... SUCCESS [  2.363 s]</span><br><span class="line">[INFO] Apache Hadoop MapReduce Streaming .................. SUCCESS [ 11.421 s]</span><br><span class="line">[INFO] Apache Hadoop Distributed Copy ..................... SUCCESS [ 13.918 s]</span><br><span class="line">[INFO] Apache Hadoop Archives ............................. SUCCESS [  2.359 s]</span><br><span class="line">[INFO] Apache Hadoop Rumen ................................ SUCCESS [  5.266 s]</span><br><span class="line">[INFO] Apache Hadoop Gridmix .............................. SUCCESS [  4.152 s]</span><br><span class="line">[INFO] Apache Hadoop Data Join ............................ SUCCESS [  2.902 s]</span><br><span class="line">[INFO] Apache Hadoop Ant Tasks ............................ SUCCESS [  2.081 s]</span><br><span class="line">[INFO] Apache Hadoop Extras ............................... SUCCESS [  3.052 s]</span><br><span class="line">[INFO] Apache Hadoop Pipes ................................ SUCCESS [  7.431 s]</span><br><span class="line">[INFO] Apache Hadoop OpenStack support .................... SUCCESS [  5.002 s]</span><br><span class="line">[INFO] Apache Hadoop Amazon Web Services support .......... SUCCESS [02:46 min]</span><br><span class="line">[INFO] Apache Hadoop Azure support ........................ SUCCESS [ 26.999 s]</span><br><span class="line">[INFO] Apache Hadoop Client ............................... SUCCESS [  7.450 s]</span><br><span class="line">[INFO] Apache Hadoop Mini-Cluster ......................... SUCCESS [  1.024 s]</span><br><span class="line">[INFO] Apache Hadoop Scheduler Load Simulator ............. SUCCESS [  5.816 s]</span><br><span class="line">[INFO] Apache Hadoop Tools Dist ........................... SUCCESS [  7.048 s]</span><br><span class="line">[INFO] Apache Hadoop Tools ................................ SUCCESS [  0.055 s]</span><br><span class="line">[INFO] Apache Hadoop Distribution 2.7.7 ................... SUCCESS [ 35.905 s]</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time: 16:55 min</span><br><span class="line">[INFO] Finished at: 2021-01-10T21:51:46-08:00</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hadoop </category>
          
          <category> ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Selenium实现12306自动购票</title>
      <link href="post/selenium-12306-ticket.html"/>
      <url>post/selenium-12306-ticket.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p>前面分享了<a href="/post/selenium-12306-login.html">Selenium实现12306自动登录</a>,今天我们接着分享登录后查询余票和下单功能的实现<br />完整项目 <a href="https://github.com/hvnobug/12306_ticket">GitHub地址</a></p></div><h2 id="准备"><a class="markdownIt-Anchor" href="#准备"></a> 准备</h2><ol><li><code>Python 3.7 - 3.9</code></li><li><code>Chrome Driver</code>: <a href="https://npm.taobao.org/mirrors/chromedriver/">下载地址</a></li><li><code>打码服务</code>: 打码服务使用<a href="https://github.com/YinAoXiong/12306_code_server">12306_code_server</a>,可以自建打码服务,也可以使用云打码服务。</li><li><code>Pip 依赖</code>: pip install requests==2.25.1 selenium==3.141.0</li></ol><h2 id="查询余票"><a class="markdownIt-Anchor" href="#查询余票"></a> 查询余票</h2><p>假设我们已经登录成功,下一步我们需要跳转到<a href="https://kyfw.12306.cn/otn/leftTicket/init">查询余票页面</a></p><h3 id="读取车站信息"><a class="markdownIt-Anchor" href="#读取车站信息"></a> 读取车站信息</h3><blockquote><p>首先我们根据出发站和目的站获取车站信息</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">look_up_station</span>():</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    读取车站信息</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">import</span> os</span><br><span class="line">    path = os.path.join(os.path.dirname(__file__), <span class="string">&#x27;./station_names.js&#x27;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(path, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> result:</span><br><span class="line">            info = result.read().split(<span class="string">&#x27;=&#x27;</span>)[<span class="number">1</span>].strip(<span class="string">&quot;&#x27;&quot;</span>).split(<span class="string">&#x27;@&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(e)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(path) <span class="keyword">as</span> result:</span><br><span class="line">            info = result.read().split(<span class="string">&#x27;=&#x27;</span>)[<span class="number">1</span>].strip(<span class="string">&quot;&#x27;&quot;</span>).split(<span class="string">&#x27;@&#x27;</span>)</span><br><span class="line">    <span class="keyword">del</span> info[<span class="number">0</span>]</span><br><span class="line">    station_name = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(info)):</span><br><span class="line">        n_info = info[i].split(<span class="string">&#x27;|&#x27;</span>)</span><br><span class="line">        station_name[n_info[<span class="number">1</span>]] = n_info[<span class="number">2</span>]</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        fs = station_name[from_station.encode(<span class="string">&quot;utf8&quot;</span>)]</span><br><span class="line">        ts = station_name[to_station.encode(<span class="string">&quot;utf8&quot;</span>)]</span><br><span class="line">    <span class="keyword">except</span> KeyError:</span><br><span class="line">        fs = station_name[from_station]</span><br><span class="line">        ts = station_name[to_station]</span><br><span class="line">    <span class="keyword">return</span> fs, ts</span><br></pre></td></tr></table></figure><p>车站信息文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> station_names =<span class="string">&#x27;@bjb|北京北|VAP|beijingbei|bjb|0@bjd|北京东|BOP|beijingdong|bjd|1@bji|北京|BJP|beijing|bj|2@bjn|北京南|VNP|beijingnan|bjn|3@bjx|北京西|BXP|beijingxi|bjx|4@gzn|广州南|IZQ|guangzhounan|gzn|5@cqb|重庆北|CUW|chongqingbei|cqb|6@cqi|重庆|CQW|chongqing|cq|7@cqn|重庆南|CRW|chongqingnan|cqn|8@cqx|重庆西|CXW|chongqingxi|cqx|9@gzd|广州东|GGQ|guangzhoudong|gzd|10@sha|上海|SHH|shanghai|sh|11@shn|上海南|SNH|shanghainan|shn|12@shq|上海虹桥|AOH|shanghaihongqiao|shhq|13@shx|上海西|SXH|shanghaixi|shx|14@tjb|天津北|TBP|tianjinbei|tjb|15@tji|天津|TJP|tianjin|tj|16@tjn|天津南|TIP|tianjinnan|tjn|17@tjx|天津西|TXP|tianjinxi|tjx|18@xgl|香港西九龙|XJA|hkwestkowloon|xgxjl|19@cch|长春|CCT|changchun|cc|20@ccn|长春南|CET|changchunnan|ccn|21@ccx|长春西|CRT|changchunxi|ccx|22@cdd|成都东|ICW|chengdudong|cdd|23@cdn|成都南|CNW|chengdunan|cdn|24@cdu|成都|CDW|chengdu|cd|25@cdx|成都西|CMW|chengduxi|cdx|26@csh|长沙|CSQ|changsha|cs|27@csn|长沙南|CWQ|changshanan|csn|28@dmh|大明湖|JAK|daminghu|dmh|29@fzh|福州|FZS|fuzhou|fz|30@fzn|福州南|FYS|fuzhounan|fzn|31@gya|贵阳|GIW|guiyang|gy|32@gzh|广州|GZQ|guangzhou|gz|33@gzx|广州西|GXQ|guangzhouxi|gzx|34@heb|哈尔滨|HBB|haerbin|heb|35@hed|哈尔滨东|VBB|haerbindong|hebd|36@hex|哈尔滨西|VAB|haerbinxi|hebx|37@hfe|合肥|HFH|hefei|hf|38@hhd|呼和浩特东|NDC|huhehaotedong|hhhtd|39@hht|呼和浩特|HHC|huhehaote|hhht|40@hkd|海口东|HMQ|haikoudong|hkd|42@hko|海口|VUQ|haikou|hk|43@hzd|杭州东|HGH|hangzhoudong|hzd|44@hzh|杭州|HZH|hangzhou|hz|45@hzn|杭州南|XHH|hangzhounan|hzn|46@jna|济南|JNK|jinan|jn|47@jna|济  南|EEI|jinan|jn|48@jnx|济南西|JGK|jinanxi|jnx|49@jnx|济  南西|EII|jinanxi|jnx|50@kmi|昆明|KMM|kunming|km|51@kmx|昆明西|KXM|kunmingxi|kmx|52@lsa|拉萨|LSO|lasa|ls|53@lzd|兰州东|LVJ|lanzhoudong|lzd|54@lzh|兰州|LZJ|lanzhou|lz|55@lzx|兰州西|LAJ|lanzhouxi|lzx|56@nch|南昌|NCG|nanchang|nc|57@nji|南京|NJH|nanjing|nj|58@njn|南京南|NKH|nanjingnan|njn|59@nni|南宁|NNZ|nanning|nn|60@sjb|石家庄北|VVP|shijiazhuangbei|sjzb|61@sjz|石家庄|SJP|shijiazhuang|sjz|62@ssd|蜀山东|HTH|shushandong|ssd|63@sya|沈阳|SYT|shenyang|sy|64@syb|沈阳北|SBT|shenyangbei|syb|65@syd|沈阳东|SDT|shenyangdong|syd|66@syn|沈阳南|SOT|shenyangnan|syn|67@tyb|太原北|TBV|taiyuanbei|tyb|68@tyd|太原东|TDV|taiyuandong|tyd|69@tyu|太原|TYV|taiyuan|ty|70@wha|武汉|WHN|wuhan|wh|71@wjx|王家营西|KNM|wangjiayingxi|wjyx|72@wlq|乌鲁木齐|WAR|wulumuqi|wlmq|73@xab|西安北|EAY|xianbei|xab|74@xan|西安|XAY|xian|xa|75@xan|西安南|CAY|xiannan|xan|76@xni|西宁|XNO|xining|xn|77@ych|银川|YIJ|yinchuan|yc|78@zzh|郑州|ZZF|zhengzhou|zz|79@aes|阿尔山|ART|aershan|aes|80@aka|安康|AKY|ankang|ak|81@aks|阿克苏|ASR|akesu|aks|82@alh|阿里河|AHX|alihe|alh|83@alk|阿拉山口|AKR|alashankou|alsk|84@api|安平|APT|anping|ap|85@aqi|安庆|AQH|anqing|aq|86@ash|安顺|ASW|anshun|as|87@ash|鞍山|AST|anshan|as|88@aya|安阳|AYF|anyang|ay|89@ban|北安|BAB|beian|ba|90@bbu|蚌埠|BBH|bengbu|bb|91@bch|白城|BCT|baicheng|bc|92@bha|北海|BHZ|beihai|bh|93@bhe|白河|BEL|baihe|bh|94@bji|白涧|BAP|baijian|bj|95@bji|宝鸡|BJY|baoji|bj|96@bji|滨江|BJB|binjiang|bj|97@bkt|博克图|BKX|boketu|bkt|98@bse|百色|BIZ|baise|bs|99@bss|白山市|HJL|baishanshi|bss|100@bta|北台|BTT|beitai|bt|101@btd|包头东|BDC|baotoudong|btd|102@bto|包头|BTC|baotou|bt|103@bts|北屯市|BXR|beitunshi|bts|104@bxi|本溪|BXT|benxi|bx|105@byb|白云鄂博|BEC|baiyunebo|byeb|106@byx|白银西|BXJ|baiyinxi|byx|107@bzh|亳州|BZH|bozhou|bz|108@cbi|赤壁|CBN|chibi|cb|109@cde|常德|VGQ|changde|cd|110@cde|承德|CDP|chengde|cd|111@cdi|长甸|CDT|changdian|cd|112@cfn|赤峰南|CFD|chifengnan|cfn|113@cli|茶陵|CDG|chaling|cl|114@cna|苍南|CEH|cangnan|cn|115@cpi|昌平|CPP|changping|cp|116@cre|崇仁|CRG|chongren|cr|117@ctu|昌图|CTT|changtu|ct|118@ctz|长汀镇|CDB|changtingzhen|ctz|119@cxi|曹县|CXK|caoxian|cx|120@cxn|楚雄南|COM|chuxiongnan|cxn|121@cxt|陈相屯|CXT|chenxiangtun|cxt|122@czb|长治北|CBF|changzhibei|czb|123@czh|池州|IYH|chizhou|cz|124@czh|长征|CZJ|changzheng|cz|125@czh|常州|CZH|changzhou|cz|126@czh|郴州|CZQ|chenzhou|cz|127@czh|长治|CZF|changzhi|cz|128@czh|沧州|COP|cangzhou|cz|129@czu|崇左|CZZ|chongzuo|cz|130@dab|大安北|RNT|daanbei|dab|131@dch|大成|DCT|dacheng|dc|132@ddo|丹东|DUT|dandong|dd|133@dfh|东方红|DFB|dongfanghong|dfh|134@dgd|东莞东|DMQ|dongguandong|dgd|135@dhs|大虎山|DHD|dahushan|dhs|136@dhu|敦煌|DHJ|dunhuang|dh|137@dhu|敦化|DHL|dunhua|dh|138@dhu|德惠|DHT|dehui|dh|139@djc|东京城|DJB|dongjingcheng|djc|140@dji|大涧|DFP|dajian|dj|141@djy|都江堰|DDW|dujiangyan|djy|142@dlb|大连北|DFT|dalianbei|dlb|143@dli|大理|DKM|dali|dl|144@dli|大连|DLT|dalian|dl|145@dna|定南|DNG|dingnan|dn|146@dqi|大庆|DZX|daqing|dq|147@dsh|东胜|DOC|dongsheng|ds|148@dsq|大石桥|DQT|dashiqiao|dsq|149@dto|大同|DTV|datong|dt|150@dyi|东营|DPK|dongying|dy|151@dys|大杨树|DUX|dayangshu|dys|152@dyu|都匀|RYW|duyun|dy|153@dzh|邓州|DOF|dengzhou|dz|154@dzh|达州|RXW|dazhou|dz|155@dzh|德州|DZP|dezhou|dz|156@ejn|额济纳|EJC|ejina|ejn|157@eli|二连|RLC|erlian|el|158@esh|恩施|ESN|enshi|es|159@fdi|福鼎|FES|fuding|fd|160@fhc|凤凰机场|FJQ|fenghuangjichang|fhjc|161@fld|风陵渡|FLV|fenglingdu|fld|162@fli|涪陵|FLW|fuling|fl|163@flj|富拉尔基|FRX|fulaerji|flej|164@fsb|抚顺北|FET|fushunbei|fsb|165@fsh|佛山|FSQ|foshan|fs|166@fxn|阜新南|FXD|fuxinnan|fxn|167@fya|阜阳|FYH|fuyang|fy|168@gem|格尔木|GRO|geermu|gem|169@gha|广汉|GHW|guanghan|gh|170@gji|古交|GJV|gujiao|gj|171@glb|桂林北|GBZ|guilinbei|glb|172@gli|古莲|GRX|gulian|gl|173@gli|桂林|GLZ|guilin|gl|174@gsh|固始|GXN|gushi|gs|175@gsh|广水|GSN|guangshui|gs|176@gta|干塘|GNJ|gantang|gt|177@gyu|广元|GYW|guangyuan|gy|178@gzb|广州北|GBQ|guangzhoubei|gzb|179@gzh|赣州|GZG|ganzhou|gz|180@gzl|公主岭|GLT|gongzhuling|gzl|181@gzn|公主岭南|GBT|gongzhulingnan|gzln|182@han|淮安|AUH|huaian|ha|183@hbe|淮北|HRH|huaibei|hb|184@hbe|鹤北|HMB|hebei|hb|185@hbi|淮滨|HVN|huaibin|hb|186@hbi|河边|HBV|hebian|hb|187@hch|潢川|KCN|huangchuan|hc|188@hch|韩城|HCY|hancheng|hc|189@hda|邯郸|HDP|handan|hd|190@hdz|横道河子|HDB|hengdaohezi|hdhz|191@hga|鹤岗|HGB|hegang|hg|192@hgt|皇姑屯|HTT|huanggutun|hgt|193@hgu|红果|HEM|hongguo|hg|194@hhe|黑河|HJB|heihe|hh|195@hhu|怀化|HHQ|huaihua|hh|196@hko|汉口|HKN|hankou|hk|197@hld|葫芦岛|HLD|huludao|hld|198@hle|海拉尔|HRX|hailaer|hle|199@hll|霍林郭勒|HWD|huolinguole|hlgl|200@hlu|海伦|HLB|hailun|hl|201@hma|侯马|HMV|houma|hm|202@hmi|哈密|HMR|hami|hm|203@hna|淮南|HAH|huainan|hn|204@hna|桦南|HNB|huanan|hn|205@hnx|海宁西|EUH|hainingxi|hnx|206@hqi|鹤庆|HQM|heqing|hq|207@hrb|怀柔北|HBP|huairoubei|hrb|208@hro|怀柔|HRP|huairou|hr|209@hsd|黄石东|OSN|huangshidong|hsd|210@hsh|华山|HSY|huashan|hs|211@hsh|黄山|HKH|huangshan|hs|212@hsh|黄石|HSN|huangshi|hs|213@hsh|衡水|HSP|hengshui|hs|214@hya|衡阳|HYQ|hengyang|hy|215@hze|菏泽|HIK|heze|hz|216@hzh|贺州|HXZ|hezhou|hz|217@hzh|汉中|HOY|hanzhong|hz|218@hzh|惠州|HCQ|huizhou|hz|219@jan|吉安|VAG|jian|ja|220@jan|集安|JAL|jian|ja|221@jbc|江边村|JBG|jiangbiancun|jbc|222@jch|晋城|JCF|jincheng|jc|223@jcj|金城江|JJZ|jinchengjiang|jcj|224@jdz|景德镇|JCG|jingdezhen|jdz|225@jfe|嘉峰|JFF|jiafeng|jf|226@jgq|加格达奇|JGX|jiagedaqi|jgdq|227@jgs|井冈山|JGG|jinggangshan|jgs|228@jhe|蛟河|JHL|jiaohe|jh|229@jhn|金华南|RNH|jinhuanan|jhn|230@jhu|金华|JBH|jinhua|jh|231@jji|九江|JJG|jiujiang|jj|232@jli|吉林|JLL|jilin|jl|233@jme|荆门|JMN|jingmen|jm|234@jms|佳木斯|JMB|jiamusi|jms|235@jni|济宁|JIK|jining|jn|236@jnn|集宁南|JAC|jiningnan|jnn|237@jqu|酒泉|JQJ|jiuquan|jq|238@jsh|江山|JUH|jiangshan|js|239@jsh|吉首|JIQ|jishou|js|240@jta|九台|JTL|jiutai|jt|241@jts|镜铁山|JVJ|jingtieshan|jts|242@jxi|鸡西|JXB|jixi|jx|243@jxx|绩溪县|JRH|jixixian|jxx|244@jyg|嘉峪关|JGJ|jiayuguan|jyg|245@jyo|江油|JFW|jiangyou|jy|246@jzb|蓟州北|JKP|jizhoubei|jzb|247@jzh|锦州|JZD|jinzhou|jz|248@jzh|金州|JZT|jinzhou|jz|249@kel|库尔勒|KLR|kuerle|kel|250@kfe|开封|KFF|kaifeng|kf|251@kla|岢岚|KLV|kelan|kl|252@kli|凯里|KLW|kaili|kl|253@ksh|喀什|KSR|kashi|ks|254@ksn|昆山南|KNH|kunshannan|ksn|255@ktu|奎屯|KTR|kuitun|kt|256@kyu|开原|KYT|kaiyuan|ky|257@lan|六安|UAH|luan|la|258@lba|灵宝|LBF|lingbao|lb|259@lcg|芦潮港|UCH|luchaogang|lcg|260@lch|隆昌|LCW|longchang|lc|261@lch|陆川|LKZ|luchuan|lc|262@lch|利川|LCN|lichuan|lc|263@lch|潞城|UTP|lucheng|lc|264@lch|临川|LCG|linchuan|lc|265@lda|鹿道|LDL|ludao|ld|266@ldi|娄底|LDQ|loudi|ld|267@lfe|临汾|LFV|linfen|lf|268@lgz|良各庄|LGP|lianggezhuang|lgz|269@lhe|临河|LHC|linhe|lh|270@lhe|漯河|LON|luohe|lh|271@lhu|绿化|LWJ|lvhua|lh|272@lhu|隆化|UHP|longhua|lh|273@lji|丽江|LHM|lijiang|lj|274@lji|临江|LQL|linjiang|lj|275@lji|龙井|LJL|longjing|lj|276@lli|吕梁|LHV|lvliang|ll|277@lli|醴陵|LLG|liling|ll|278@lln|柳林南|LKV|liulinnan|lln|279@lpi|滦平|UPP|luanping|lp|280@lps|六盘水|UMW|liupanshui|lps|281@lqi|灵丘|LVV|lingqiu|lq|282@lsh|旅顺|LST|lvshun|ls|283@lxi|兰溪|LWH|lanxi|lx|284@lxi|陇西|LXJ|longxi|lx|285@lxi|澧县|LEQ|lixian|lx|286@lxi|临西|UEP|linxi|lx|287@lya|龙岩|LYS|longyan|ly|288@lya|耒阳|LYQ|leiyang|ly|289@lya|洛阳|LYF|luoyang|ly|290@lyd|连云港东|UKH|lianyungangdong|lygd|291@lyd|洛阳东|LDF|luoyangdong|lyd|292@lyi|临沂|LVK|linyi|ly|293@lym|洛阳龙门|LLF|luoyanglongmen|lylm|294@lyu|柳园|DHR|liuyuan|ly|295@lyu|凌源|LYD|lingyuan|ly|296@lyu|辽源|LYL|liaoyuan|ly|297@lzh|立志|LZX|lizhi|lz|298@lzh|柳州|LZZ|liuzhou|lz|299@lzh|辽中|LZD|liaozhong|lz|300@mch|麻城|MCN|macheng|mc|301@mdh|免渡河|MDX|mianduhe|mdh|302@mdj|牡丹江|MDB|mudanjiang|mdj|303@meg|莫尔道嘎|MRX|moerdaoga|medg|304@mgu|满归|MHX|mangui|mg|305@mgu|明光|MGH|mingguang|mg|306@mhe|漠河|MVX|mohe|mh|307@mmi|茂名|MDQ|maoming|mm|308@mmx|茂名西|MMZ|maomingxi|mmx|309@msh|密山|MSB|mishan|ms|310@msj|马三家|MJT|masanjia|msj|311@mwe|麻尾|VAW|mawei|mw|312@mya|绵阳|MYW|mianyang|my|313@mzh|梅州|MOQ|meizhou|mz|314@mzl|满洲里|MLX|manzhouli|mzl|315@nbd|宁波东|NVH|ningbodong|nbd|316@nbo|宁波|NGH|ningbo|nb|317@nch|南岔|NCB|nancha|nc|318@nch|南充|NCW|nanchong|nc|319@nda|南丹|NDZ|nandan|nd|320@ndm|南大庙|NMP|nandamiao|ndm|321@nfe|南芬|NFT|nanfen|nf|322@nhe|讷河|NHX|nehe|nh|323@nji|嫩江|NGX|nenjiang|nj|324@nji|内江|NJW|neijiang|nj|325@nto|南通|NUH|nantong|nt|326@nya|南阳|NFF|nanyang|ny|327@nzs|碾子山|NZX|nianzishan|nzs|328@pds|平顶山|PEN|pingdingshan|pds|329@pji|盘锦|PVD|panjin|pj|330@pli|平凉|PIJ|pingliang|pl|331@pln|平凉南|POJ|pingliangnan|pln|332@pqu|平泉|PQP|pingquan|pq|333@psh|坪石|PSQ|pingshi|ps|334@pxi|萍乡|PXG|pingxiang|px|335@pxi|凭祥|PXZ|pingxiang|px|336@pxx|郫县西|PCW|pixianxi|pxx|337@pzh|攀枝花|PRW|panzhihua|pzh|338@qch|蕲春|QRN|qichun|qc|339@qcs|青城山|QSW|qingchengshan|qcs|340@qda|青岛|QDK|qingdao|qd|341@qhc|清河城|QYP|qinghecheng|qhc|342@qji|曲靖|QJM|qujing|qj|343@qji|黔江|QNW|qianjiang|qj|344@qjz|前进镇|QEB|qianjinzhen|qjz|345@qqe|齐齐哈尔|QHX|qiqihaer|qqhe|346@qth|七台河|QTB|qitaihe|qth|347@qxi|沁县|QVV|qinxian|qx|348@qzd|泉州东|QRS|quanzhoudong|qzd|349@qzh|泉州|QYS|quanzhou|qz|350@qzh|衢州|QEH|quzhou|qz|351@ran|融安|RAZ|rongan|ra|352@rjg|汝箕沟|RQJ|rujigou|rjg|353@rji|瑞金|RJG|ruijin|rj|354@rzh|日照|RZK|rizhao|rz|355@scp|双城堡|SCB|shuangchengpu|scp|356@sfh|绥芬河|SFB|suifenhe|sfh|357@sgd|韶关东|SGQ|shaoguandong|sgd|358@shg|山海关|SHD|shanhaiguan|shg|359@shu|绥化|SHB|suihua|sh|360@sjf|三间房|SFX|sanjianfang|sjf|361@sjt|苏家屯|SXT|sujiatun|sjt|362@sla|舒兰|SLL|shulan|sl|363@smn|神木南|OMY|shenmunan|smn|364@smx|三门峡|SMF|sanmenxia|smx|365@sna|商南|ONY|shangnan|sn|366@sni|遂宁|NIW|suining|sn|367@spi|四平|SPT|siping|sp|368@sqi|商丘|SQF|shangqiu|sq|369@sra|上饶|SRG|shangrao|sr|370@ssh|韶山|SSQ|shaoshan|ss|371@sso|宿松|OAH|susong|ss|372@sto|汕头|OTQ|shantou|st|373@swu|邵武|SWS|shaowu|sw|374@sxi|涉县|OEP|shexian|sx|375@sya|三亚|SEQ|sanya|sy|376@sya|邵阳|SYQ|shaoyang|sy|378@sya|十堰|SNN|shiyan|sy|379@syq|三元区|SMS|sanyuanqu|syq|380@sys|双鸭山|SSB|shuangyashan|sys|381@syu|松原|VYT|songyuan|sy|382@szh|宿州|OXH|suzhou|sz|383@szh|苏州|SZH|suzhou|sz|384@szh|深圳|SZQ|shenzhen|sz|385@szh|随州|SZN|suizhou|sz|386@szh|朔州|SUV|shuozhou|sz|387@szx|深圳西|OSQ|shenzhenxi|szx|388@tba|塘豹|TBQ|tangbao|tb|389@teq|塔尔气|TVX|taerqi|teq|390@tgu|潼关|TGY|tongguan|tg|391@tgu|塘沽|TGP|tanggu|tg|392@the|塔河|TXX|tahe|th|393@thu|通化|THL|tonghua|th|394@tla|泰来|TLX|tailai|tl|395@tlf|吐鲁番|TFR|tulufan|tlf|396@tli|通辽|TLD|tongliao|tl|397@tli|铁岭|TLT|tieling|tl|398@tlz|陶赖昭|TPT|taolaizhao|tlz|399@tme|图们|TML|tumen|tm|400@tre|铜仁|RDQ|tongren|tr|401@tsb|唐山北|FUP|tangshanbei|tsb|402@tsf|田师府|TFT|tianshifu|tsf|403@tsh|泰山|TAK|taishan|ts|404@tsh|天水|TSJ|tianshui|ts|405@tsh|唐山|TSP|tangshan|ts|406@typ|通远堡|TYT|tongyuanpu|typ|407@tys|太阳升|TQT|taiyangsheng|tys|408@tzh|泰州|UTH|taizhou|tz|409@tzi|桐梓|TZW|tongzi|tz|410@tzx|通州西|TAP|tongzhouxi|tzx|411@wch|五常|WCB|wuchang|wc|412@wch|武昌|WCN|wuchang|wc|413@wfd|瓦房店|WDT|wafangdian|wfd|414@wha|威海|WKK|weihai|wh|415@whu|芜湖|WHH|wuhu|wh|416@whx|乌海西|WXC|wuhaixi|whx|417@wjt|吴家屯|WJT|wujiatun|wjt|418@wln|乌鲁木齐南|WMR|wulumuqinan|wlmqn|419@wlo|武隆|WLW|wulong|wl|420@wlt|乌兰浩特|WWT|wulanhaote|wlht|421@wna|渭南|WNY|weinan|wn|422@wsh|威舍|WSM|weishe|ws|423@wts|歪头山|WIT|waitoushan|wts|424@wwe|武威|WUJ|wuwei|ww|425@wwn|武威南|WWJ|wuweinan|wwn|426@wxi|无锡|WXH|wuxi|wx|427@wxi|乌西|WXR|wuxi|wx|428@wyl|乌伊岭|WPB|wuyiling|wyl|429@wys|武夷山|WAS|wuyishan|wys|430@wyu|万源|WYY|wanyuan|wy|431@wzh|万州|WYW|wanzhou|wz|432@wzh|梧州|WZZ|wuzhou|wz|433@wzh|温州|RZH|wenzhou|wz|434@wzn|温州南|VRH|wenzhounan|wzn|435@xch|西昌|ECW|xichang|xc|436@xch|许昌|XCF|xuchang|xc|437@xcn|西昌南|ENW|xichangnan|xcn|438@xlt|锡林浩特|XTC|xilinhaote|xlht|439@xmb|厦门北|XKS|xiamenbei|xmb|440@xme|厦门|XMS|xiamen|xm|441@xmq|厦门高崎|XBS|xiamengaoqi|xmgq|442@xwe|宣威|XWM|xuanwei|xw|443@xxi|新乡|XXF|xinxiang|xx|444@xya|信阳|XUN|xinyang|xy|445@xya|咸阳|XYY|xianyang|xy|446@xya|襄阳|XFN|xiangyang|xy|447@xyc|熊岳城|XYT|xiongyuecheng|xyc|448@xyu|新余|XUG|xinyu|xy|449@xzh|徐州|XCH|xuzhou|xz|450@yan|延安|YWY|yanan|ya|451@ybi|宜宾|YBW|yibin|yb|452@ybn|亚布力南|YWB|yabulinan|ybln|453@ybs|叶柏寿|YBD|yebaishou|ybs|454@ycd|宜昌东|HAN|yichangdong|ycd|455@ych|永川|YCW|yongchuan|yc|456@ych|盐城|AFH|yancheng|yc|457@ych|运城|YNV|yuncheng|yc|458@ych|伊春|YCB|yichun|yc|459@ych|宜昌|YCN|yichang|yc|460@yci|榆次|YCV|yuci|yc|461@ycu|杨村|YBP|yangcun|yc|462@ycx|宜春西|YCG|yichunxi|ycx|463@yes|伊尔施|YET|yiershi|yes|464@yga|燕岗|YGW|yangang|yg|465@yji|永济|YIV|yongji|yj|466@yji|延吉|YJL|yanji|yj|467@yko|营口|YKT|yingkou|yk|468@yks|牙克石|YKX|yakeshi|yks|469@yli|阎良|YNY|yanliang|yl|470@yli|玉林|YLZ|yulin|yl|471@yli|榆林|ALY|yulin|yl|472@ylw|亚龙湾|TWQ|yalongwan|ylw|473@ymp|一面坡|YPB|yimianpo|ymp|474@yni|伊宁|YMR|yining|yn|475@ypg|阳平关|YAY|yangpingguan|ypg|476@ypi|玉屏|YZW|yuping|yp|477@ypi|原平|YPV|yuanping|yp|478@yqi|延庆|YNP|yanqing|yq|479@yqq|阳泉曲|YYV|yangquanqu|yqq|480@yqu|玉泉|YQB|yuquan|yq|481@yqu|阳泉|AQP|yangquan|yq|482@ysh|营山|NUW|yingshan|ys|483@ysh|玉山|YNG|yushan|ys|484@ysh|燕山|AOP|yanshan|ys|485@ysh|榆树|YRT|yushu|ys|486@yta|鹰潭|YTG|yingtan|yt|487@yta|烟台|YAK|yantai|yt|488@yth|伊图里河|YEX|yitulihe|ytlh|489@ytx|玉田县|ATP|yutianxian|ytx|490@ywu|义乌|YWH|yiwu|yw|491@yxi|阳新|YON|yangxin|yx|492@yxi|义县|YXD|yixian|yx|493@yya|益阳|AEQ|yiyang|yy|494@yya|岳阳|YYQ|yueyang|yy|495@yzh|崖州|YUQ|yazhou|yz|496@yzh|扬州|YLH|yangzhou|yz|497@yzh|永州|AOQ|yongzhou|yz|498@zbo|淄博|ZBK|zibo|zb|499@zcd|镇城底|ZDV|zhenchengdi|zcd|500@zgo|自贡|ZGW|zigong|zg|501@zha|珠海|ZHQ|zhuhai|zh|502@zhb|珠海北|ZIQ|zhuhaibei|zhb|503@zji|湛江|ZJZ|zhanjiang|zj|504@zji|镇江|ZJH|zhenjiang|zj|505@zjj|张家界|DIQ|zhangjiajie|zjj|506@zjk|张家口|ZMP|zhangjiakou|zjk|507@zko|周口|ZKN|zhoukou|zk|508@zlt|扎兰屯|ZTX|zhalantun|zlt|509@zmd|驻马店|ZDN|zhumadian|zmd|510@zqi|肇庆|ZVQ|zhaoqing|zq|511@zsz|周水子|ZIT|zhoushuizi|zsz|512@zto|昭通|ZDW|zhaotong|zt|513@zwe|中卫|ZWJ|zhongwei|zw|514@zya|资阳|ZYW|ziyang|zy|515@zyx|遵义西|ZIW|zunyixi|zyx|516@zzh|资中|ZZW|zizhong|zz|517@zzh|枣庄|ZEK|zaozhuang|zz|518@zzh|株洲|ZZQ|zhuzhou|zz|519@zzx|枣庄西|ZFK|zaozhuangxi|zzx|520@aax|昂昂溪|AAX|angangxi|aax|521@ach|阿城|ACB|acheng|ac|522@ada|安达|ADX|anda|ad|523@ade|安德|ARW|ande|ad|524@adi|安定|ADP|anding|ad|525@adu|安多|ADO|anduo|ad|526@agu|安广|AGT|anguang|ag|527@aha|敖汉|YED|aohan|ah|528@ahe|艾河|AHP|aihe|ah|529@ahu|安化|PKQ|anhua|ah|530@ajc|艾家村|AJJ|aijiacun|ajc|531@aji|安家|AJB|anjia|aj|532@aji|阿金|AJD|ajin|aj|533@aji|安靖|PYW|anjing|aj|534@akt|阿克陶|AER|aketao|akt|535@aky|安口窑|AYY|ankouyao|aky|536@alg|敖力布告|ALD|aolibugao|albg|537@alo|安龙|AUZ|anlong|al|538@als|阿龙山|ASX|alongshan|als|539@alu|安陆|ALN|anlu|al|540@ame|阿木尔|JTX|amuer|ame|541@anz|阿南庄|AZM|ananzhuang|anz|542@asx|鞍山西|AXT|anshanxi|asx|543@ata|安塘|ATV|antang|at|544@atb|安亭北|ASH|antingbei|atb|545@ats|阿图什|ATR|atushi|ats|546@atu|安图|ATL|antu|at|547@axi|安溪|AXS|anxi|ax|548@bao|博鳌|BWQ|boao|ba|549@bbe|北碚|BPW|beibei|bb|550@bbg|白壁关|BGV|baibiguan|bbg|551@bbn|蚌埠南|BMH|bengbunan|bbn|552@bch|巴楚|BCR|bachu|bc|553@bch|板城|BUP|bancheng|bc|554@bdh|北戴河|BEP|beidaihe|bdh|555@bdi|保定|BDP|baoding|bd|556@bdi|宝坻|BPP|baodi|bd|557@bdl|八达岭|ILP|badaling|bdl|558@bdo|巴东|BNN|badong|bd|559@bfe|宝丰|BFF|baofeng|bf|560@bgu|柏果|BGM|baiguo|bg|561@bha|布海|BUT|buhai|bh|562@bhd|白河东|BIY|baihedong|bhd|563@bhs|宝华山|BWH|baohuashan|bhs|564@bhx|白河县|BEY|baihexian|bhx|565@bjg|白芨沟|BJJ|baijigou|bjg|566@bjg|碧鸡关|BJM|bijiguan|bjg|567@bji|北滘|IBQ|beijiao|bj|568@bji|碧江|BLQ|bijiang|bj|569@bjp|白鸡坡|BBM|baijipo|bjp|570@bjs|笔架山|BSB|bijiashan|bjs|571@bjt|八角台|BTD|bajiaotai|bjt|572@bka|保康|BKD|baokang|bk|573@bkp|白奎堡|BKB|baikuipu|bkp|574@bla|白狼|BAT|bailang|bl|575@bla|百浪|BRZ|bailang|bl|576@ble|博乐|BOR|bole|bl|577@bli|巴林|BLX|balin|bl|578@bli|宝林|BNB|baolin|bl|579@bli|北流|BOZ|beiliu|bl|580@bli|勃利|BLB|boli|bl|581@blk|布列开|BLR|buliekai|blk|582@bls|宝龙山|BND|baolongshan|bls|583@blx|百里峡|AAP|bailixia|blx|584@bmc|八面城|BMD|bamiancheng|bmc|585@bmq|班猫箐|BNM|banmaoqing|bmq|586@bmt|八面通|BMB|bamiantong|bmt|587@bmz|北马圈子|BRP|beimaquanzi|bmqz|588@bpn|北票南|RPD|beipiaonan|bpn|589@bqi|白旗|BQP|baiqi|bq|590@bql|宝泉岭|BQB|baoquanling|bql|591@bqu|白泉|BQL|baiquan|bq|592@bsh|巴山|BAY|bashan|bs|593@bsj|白水江|BSY|baishuijiang|bsj|594@bsp|白沙坡|BPM|baishapo|bsp|595@bss|白石山|BAL|baishishan|bss|596@bsz|白水镇|BUM|baishuizhen|bsz|597@btd|包头 东|FDC|baotoudong|btd|598@bti|坂田|BTQ|bantian|bt|599@bto|泊头|BZP|botou|bt|600@btu|北屯|BYP|beitun|bt|601@bxh|本溪湖|BHT|benxihu|bxh|602@bxi|博兴|BXK|boxing|bx|603@bxt|八仙筒|VXD|baxiantong|bxt|604@byg|白音察干|BYC|baiyinchagan|bycg|605@byh|背荫河|BYB|beiyinhe|byh|606@byi|北营|BIV|beiying|by|607@byl|巴彦高勒|BAC|bayangaole|bygl|608@byl|白音他拉|BID|baiyintala|bytl|609@byq|鲅鱼圈|BYT|bayuquan|byq|610@bys|白银市|BNJ|baiyinshi|bys|611@bys|白音胡硕|BCD|baiyinhushuo|byhs|612@bzh|巴中|IEW|bazhong|bz|613@bzh|霸州|RMP|bazhou|bz|614@bzh|北宅|BVP|beizhai|bz|615@cbb|赤壁北|CIN|chibibei|cbb|616@cbg|查布嘎|CBC|chabuga|cbg|617@cch|长城|CEJ|changcheng|cc|618@cch|长冲|CCM|changchong|cc|619@cdd|承德东|CCP|chengdedong|cdd|620@cfe|赤峰|CID|chifeng|cf|621@cga|嵯岗|CAX|cuogang|cg|622@cga|柴岗|CGT|chaigang|cg|623@cge|长葛|CEF|changge|cg|624@cgp|柴沟堡|CGV|chaigoupu|cgp|625@cgu|城固|CGY|chenggu|cg|626@cgy|陈官营|CAJ|chenguanying|cgy|627@cgz|成高子|CZB|chenggaozi|cgz|628@cha|草海|WBW|caohai|ch|629@che|柴河|CHB|chaihe|ch|630@che|册亨|CHZ|ceheng|ch|631@chk|草河口|CKT|caohekou|chk|632@chk|崔黄口|CHP|cuihuangkou|chk|633@chu|巢湖|CIH|chaohu|ch|634@cjg|蔡家沟|CJT|caijiagou|cjg|635@cjh|成吉思汗|CJX|chengjisihan|cjsh|636@cji|岔江|CAM|chajiang|cj|637@cjp|蔡家坡|CJY|caijiapo|cjp|638@cle|昌乐|CLK|changle|cl|639@clg|超梁沟|CYP|chaolianggou|clg|640@cli|慈利|CUQ|cili|cl|641@cli|昌黎|CLP|changli|cl|642@clz|长岭子|CLT|changlingzi|clz|643@cmi|晨明|CMB|chenming|cm|644@cno|长农|CNJ|changnong|cn|645@cpb|昌平北|VBP|changpingbei|cpb|646@cpi|常平|DAQ|changping|cp|647@cpl|长坡岭|CPM|changpoling|cpl|648@cqi|辰清|CQB|chenqing|cq|649@csh|楚山|CSB|chushan|cs|650@csh|长寿|EFW|changshou|cs|651@csh|蔡山|CON|caishan|cs|652@csh|磁山|CSP|cishan|cs|653@csh|苍石|CST|cangshi|cs|654@csh|草市|CSL|caoshi|cs|655@csq|察素齐|CSC|chasuqi|csq|656@cst|长山屯|CVT|changshantun|cst|657@cti|长汀|CES|changting|ct|658@ctn|朝天南|CTY|chaotiannan|ctn|659@ctx|昌图西|CPT|changtuxi|ctx|660@cwa|春湾|CQQ|chunwan|cw|661@cxi|磁县|CIP|cixian|cx|662@cxi|岑溪|CNZ|cenxi|cx|663@cxi|辰溪|CXQ|chenxi|cx|664@cxi|磁西|CRP|cixi|cx|665@cxn|长兴南|CFH|changxingnan|cxn|666@cya|磁窑|CYK|ciyao|cy|667@cya|春阳|CAL|chunyang|cy|668@cya|城阳|CEK|chengyang|cy|669@cyc|创业村|CEX|chuangyecun|cyc|670@cyc|朝阳川|CYL|chaoyangchuan|cyc|671@cyd|朝阳地|CDD|chaoyangdi|cyd|672@cyn|朝阳南|CYD|chaoyangnan|cyn|673@cyu|长垣|CYF|changyuan|cy|674@cyz|朝阳镇|CZL|chaoyangzhen|cyz|675@czb|滁州北|CUH|chuzhoubei|czb|676@czb|常州北|ESH|changzhoubei|czb|677@czh|滁州|CXH|chuzhou|cz|678@czh|潮州|CKQ|chaozhou|cz|679@czh|常庄|CVK|changzhuang|cz|680@czl|曹子里|CFP|caozili|czl|681@czw|车转湾|CWM|chezhuanwan|czw|682@czx|郴州西|ICQ|chenzhouxi|czx|683@czx|沧州西|CBP|cangzhouxi|czx|684@dan|德安|DAG|dean|da|685@dan|大安|RAT|daan|da|686@dba|大板|DBC|daban|db|687@dba|大坝|DBJ|daba|db|688@dba|大巴|DBD|daba|db|689@dba|电白|NWQ|dianbai|db|690@dba|到保|RBT|daobao|db|691@dbc|达坂城|DCR|dabancheng|dbc|692@dbi|定边|DYJ|dingbian|db|693@dbj|东边井|DBB|dongbianjing|dbj|694@dbs|德伯斯|RDT|debosi|dbs|695@dcg|打柴沟|DGJ|dachaigou|dcg|696@dch|德昌|DVW|dechang|dc|697@dda|滴道|DDB|didao|dd|698@ddg|大磴沟|DKJ|dadenggou|ddg|699@ded|刀尔登|DRD|daoerdeng|ded|700@dee|得耳布尔|DRX|deerbuer|debe|701@det|杜尔伯特|TKX|duerbote|debt|702@dfa|东方|UFQ|dongfang|df|703@dfe|丹凤|DGY|danfeng|df|704@dfe|东丰|DIL|dongfeng|df|705@dge|都格|DMM|duge|dg|706@dgt|大官屯|DTT|daguantun|dgt|707@dgu|大关|RGW|daguan|dg|708@dgu|东光|DGP|dongguang|dg|709@dha|东海|DHB|donghai|dh|710@dhc|大灰厂|DHP|dahuichang|dhc|711@dhq|大红旗|DQD|dahongqi|dhq|712@dht|大禾塘|SOQ|shaodong|dh|713@dhx|东海县|DQH|donghaixian|dhx|714@dhx|德惠西|DXT|dehuixi|dhx|715@djg|达家沟|DJT|dajiagou|djg|716@dji|东津|DKB|dongjin|dj|717@dji|杜家|DJL|dujia|dj|718@dkt|大口屯|DKP|dakoutun|dkt|719@dla|东来|RVD|donglai|dl|720@dlh|德令哈|DHO|delingha|dlh|721@dli|带岭|DLB|dailing|dl|722@dli|大林|DLD|dalin|dl|723@dlq|达拉特旗|DIC|dalateqi|dltq|724@dlt|独立屯|DTX|dulitun|dlt|725@dlu|豆罗|DLV|douluo|dl|726@dlx|达拉特西|DNC|dalatexi|dltx|727@dlx|大连西|GZT|dalianxi|dlx|728@dmc|东明村|DMD|dongmingcun|dmc|729@dmh|洞庙河|DEP|dongmiaohe|dmh|730@dmx|东明县|DNF|dongmingxian|dmx|731@dni|大拟|DNZ|dani|dn|732@dpf|大平房|DPD|dapingfang|dpf|733@dps|大盘石|RPP|dapanshi|dps|734@dpu|大埔|DPI|dapu|dp|735@dpu|大堡|DVT|dapu|dp|736@dqd|大庆东|LFX|daqingdong|dqd|737@dqh|大其拉哈|DQX|daqilaha|dqlh|738@dqi|道清|DML|daoqing|dq|739@dqs|对青山|DQB|duiqingshan|dqs|740@dqx|德清西|MOH|deqingxi|dqx|741@dqx|大庆西|RHX|daqingxi|dqx|742@dsh|砀山|DKH|dangshan|ds|743@dsh|独山|RWW|dushan|ds|744@dsh|东升|DRQ|dongsheng|ds|745@dsh|登沙河|DWT|dengshahe|dsh|746@dsp|读书铺|DPM|dushupu|dsp|747@dst|大石头|DSL|dashitou|dst|748@dsx|东胜西|DYC|dongshengxi|dsx|749@dsz|大石寨|RZT|dashizhai|dsz|750@dta|东台|DBH|dongtai|dt|751@dta|定陶|DQK|dingtao|dt|752@dta|灯塔|DGT|dengta|dt|753@dtb|大田边|DBM|datianbian|dtb|754@dth|东通化|DTL|dongtonghua|dth|755@dtu|丹徒|RUH|dantu|dt|756@dtu|大屯|DNT|datun|dt|757@dwa|东湾|DRJ|dongwan|dw|758@dwk|大武口|DFJ|dawukou|dwk|759@dwp|低窝铺|DWJ|diwopu|dwp|760@dwt|大王滩|DZZ|dawangtan|dwt|761@dwz|大湾子|DFM|dawanzi|dwz|762@dxg|大兴沟|DXL|daxinggou|dxg|763@dxi|大兴|DXX|daxing|dx|764@dxi|定西|DSJ|dingxi|dx|765@dxi|东乡|DXG|dongxiang|dx|766@dxi|代县|DKV|daixian|dx|767@dxi|定襄|DXV|dingxiang|dx|768@dxi|甸心|DXM|dianxin|dx|769@dxu|东戌|RXP|dongxu|dx|770@dxz|东辛庄|DXD|dongxinzhuang|dxz|771@dya|丹阳|DYH|danyang|dy|772@dya|大雁|DYX|dayan|dy|773@dya|德阳|DYW|deyang|dy|774@dya|当阳|DYN|dangyang|dy|775@dyb|丹阳北|EXH|danyangbei|dyb|776@dyd|大英东|IAW|dayingdong|dyd|777@dyd|东淤地|DBV|dongyudi|dyd|778@dyi|大营|DYV|daying|dy|779@dyu|定远|EWH|dingyuan|dy|780@dyu|岱岳|RYV|daiyue|dy|781@dyu|大元|DYZ|dayuan|dy|782@dyz|大营镇|DJP|dayingzhen|dyz|783@dyz|大营子|DZD|dayingzi|dyz|784@dzc|大战场|DTJ|dazhanchang|dzc|785@dzd|德州东|DIP|dezhoudong|dzd|786@dzh|东至|DCH|dongzhi|dz|787@dzh|低庄|DVQ|dizhuang|dz|788@dzh|东镇|DNV|dongzhen|dz|789@dzh|道州|DFZ|daozhou|dz|790@dzh|东庄|DZV|dongzhuang|dz|791@dzh|兑镇|DWV|duizhen|dz|792@dzh|定州|DXP|dingzhou|dz|793@dzh|豆庄|ROP|douzhuang|dz|794@dzy|大竹园|DZY|dazhuyuan|dzy|795@dzz|大杖子|DAP|dazhangzi|dzz|796@dzz|豆张庄|RZP|douzhangzhuang|dzz|797@ebi|峨边|EBW|ebian|eb|798@edm|二道沟门|RDP|erdaogoumen|edgm|799@edw|二道湾|RDX|erdaowan|edw|800@ees|鄂尔多斯|EEC|eerduosi|eeds|801@elo|二龙|RLD|erlong|el|802@elt|二龙山屯|ELA|erlongshantun|elst|803@eme|峨眉|EMW|emei|em|804@emh|二密河|RML|ermihe|emh|805@epi|恩平|PXQ|enping|ep|806@eyi|二营|RYJ|erying|ey|807@ezh|鄂州|ECN|ezhou|ez|808@fan|福安|FAS|fuan|fa|809@fch|丰城|FCG|fengcheng|fc|810@fcn|丰城南|FNG|fengchengnan|fcn|811@fdo|肥东|FIH|feidong|fd|812@fer|发耳|FEM|faer|fe|813@fha|富海|FHX|fuhai|fh|814@fha|福海|FHR|fuhai|fh|815@fhc|凤凰城|FHT|fenghuangcheng|fhc|816@fhe|汾河|FEV|fenhe|fh|817@fhu|奉化|FHH|fenghua|fh|818@fji|富锦|FIB|fujin|fj|819@fjt|范家屯|FTT|fanjiatun|fjt|820@flq|福利区|FLJ|fuliqu|flq|821@flt|福利屯|FTB|fulitun|flt|822@flz|丰乐镇|FZB|fenglezhen|flz|823@fna|阜南|FNH|funan|fn|824@fni|阜宁|AKH|funing|fn|825@fni|抚宁|FNP|funing|fn|826@fqi|福清|FQS|fuqing|fq|827@fqu|福泉|VMW|fuquan|fq|828@fsc|丰水村|FSJ|fengshuicun|fsc|829@fsh|丰顺|FUQ|fengshun|fs|830@fsh|繁峙|FSV|fanshi|fs|831@fsh|抚顺|FST|fushun|fs|832@fsk|福山口|FKP|fushankou|fsk|833@fsu|扶绥|FSZ|fusui|fs|834@ftu|冯屯|FTX|fengtun|ft|835@fty|浮图峪|FYP|futuyu|fty|836@fxd|富县东|FDY|fuxiandong|fxd|837@fxi|凤县|FXY|fengxian|fx|838@fxi|费县|FXK|feixian|fx|839@fxi|富县|FEY|fuxian|fx|840@fxi|肥西|FAH|feixi|fx|841@fya|汾阳|FAV|fenyang|fy|842@fya|凤阳|FUH|fengyang|fy|843@fyb|扶余北|FBT|fuyubei|fyb|844@fyi|分宜|FYG|fenyi|fy|845@fyu|富源|FYM|fuyuan|fy|846@fyu|扶余|FYT|fuyu|fy|847@fyu|富裕|FYX|fuyu|fy|848@fzb|抚州北|FBG|fuzhoubei|fzb|849@fzh|凤州|FZY|fengzhou|fz|850@fzh|丰镇|FZC|fengzhen|fz|851@fzh|范镇|VZK|fanzhen|fz|852@gan|广安|VJW|guangan|ga|853@gan|固安|GFP|guan|ga|854@gbd|高碑店|GBP|gaobeidian|gbd|855@gbz|沟帮子|GBD|goubangzi|gbz|856@gcd|甘草店|GDJ|gancaodian|gcd|857@gch|谷城|GCN|gucheng|gc|858@gch|藁城|GEP|gaocheng|gc|859@gcu|高村|GCV|gaocun|gc|860@gcz|古城镇|GZB|guchengzhen|gcz|861@gde|广德|GRH|guangde|gd|862@gdi|贵定|GTW|guiding|gd|863@gdn|贵定南|IDW|guidingnan|gdn|864@gdo|古东|GDV|gudong|gd|865@gga|贵港|GGZ|guigang|gg|866@gga|官高|GVP|guangao|gg|867@ggm|葛根庙|GGT|gegenmiao|ggm|868@ggo|干沟|GGL|gangou|gg|869@ggu|甘谷|GGJ|gangu|gg|870@ggz|高各庄|GGP|gaogezhuang|ggz|871@ghe|甘河|GAX|ganhe|gh|872@ghe|根河|GEX|genhe|gh|873@gjd|郭家店|GDT|guojiadian|gjd|874@gjz|孤家子|GKT|gujiazi|gjz|875@gla|古浪|GLJ|gulang|gl|876@gla|皋兰|GEJ|gaolan|gl|877@glf|高楼房|GFM|gaoloufang|glf|878@glh|归流河|GHT|guiliuhe|glh|879@gli|关林|GLF|guanlin|gl|880@glu|甘洛|VOW|ganluo|gl|881@glz|郭磊庄|GLP|guoleizhuang|glz|882@gmi|高密|GMK|gaomi|gm|883@gmz|公庙子|GMC|gongmiaozi|gmz|884@gnh|工农湖|GRT|gongnonghu|gnh|885@gnn|广宁寺南|GNT|guangningsinan|gnn|886@gnw|广南卫|GNM|guangnanwei|gnw|887@gpi|高平|GPF|gaoping|gp|888@gqb|甘泉北|GEY|ganquanbei|gqb|889@gqc|共青城|GAG|gongqingcheng|gqc|890@gqk|甘旗卡|GQD|ganqika|gqk|891@gqu|甘泉|GQY|ganquan|gq|892@gqz|高桥镇|GZD|gaoqiaozhen|gqz|893@gsh|灌水|GST|guanshui|gs|894@gsh|赶水|GSW|ganshui|gs|895@gsk|孤山口|GSP|gushankou|gsk|896@gso|果松|GSL|guosong|gs|897@gsz|高山子|GSD|gaoshanzi|gsz|898@gsz|嘎什甸子|GXD|gashidianzi|gsdz|899@gta|高台|GTJ|gaotai|gt|900@gta|高滩|GAY|gaotan|gt|901@gti|官厅|GTP|guanting|gt|902@gti|古田|GTS|gutian|gt|903@gtx|官厅西|KEP|guantingxi|gtx|904@gxi|贵溪|GXG|guixi|gx|905@gya|涡阳|GYH|guoyang|gy|906@gyi|巩义|GXF|gongyi|gy|907@gyi|高邑|GIP|gaoyi|gy|908@gyn|巩义南|GYF|gongyinan|gyn|909@gyn|广元南|GAW|guangyuannan|gyn|910@gyu|固原|GUJ|guyuan|gy|911@gyu|菇园|GYL|guyuan|gy|912@gyz|公营子|GYD|gongyingzi|gyz|913@gze|光泽|GZS|guangze|gz|914@gzh|固镇|GEH|guzhen|gz|915@gzh|瓜州|GZJ|guazhou|gz|916@gzh|古镇|GNQ|guzhen|gz|917@gzh|高州|GSQ|gaozhou|gz|918@gzh|盖州|GXT|gaizhou|gz|919@gzh|虢镇|GZY|guozhen|gz|920@gzj|官字井|GOT|guanzijing|gzj|921@gzs|冠豸山|GSS|guanzhaishan|gzs|922@gzx|盖州西|GAT|gaizhouxi|gzx|923@han|海安|HIH|haian|ha|924@han|淮安南|AMH|huaiannan|han|925@han|红安|HWN|hongan|ha|926@hax|红安西|VXN|honganxi|hax|927@hba|黄柏|HBL|huangbai|hb|928@hbe|海北|HEB|haibei|hb|929@hbi|鹤壁|HAF|hebi|hb|930@hcb|会昌北|XEG|huichangbei|hcb|931@hch|华城|VCQ|huacheng|hc|932@hch|河唇|HCZ|hechun|hc|933@hch|汉川|HCN|hanchuan|hc|934@hch|海城|HCT|haicheng|hc|935@hch|合川|WKW|hechuan|hc|936@hct|黑冲滩|HCJ|heichongtan|hct|937@hcu|黄村|HCP|huangcun|hc|938@hcx|海城西|HXT|haichengxi|hcx|939@hde|化德|HGC|huade|hd|940@hdo|洪洞|HDV|hongtong|hd|941@hes|霍尔果斯|HFR|huoerguosi|hegs|942@hfe|横峰|HFG|hengfeng|hf|943@hfw|韩府湾|HXJ|hanfuwan|hfw|944@hgu|汉沽|HGP|hangu|hg|945@hgy|黄瓜园|HYM|huangguayuan|hgy|946@hgz|红光镇|IGW|hongguangzhen|hgz|947@hhe|浑河|HHT|hunhe|hh|948@hhg|红花沟|VHD|honghuagou|hhg|949@hht|黄花筒|HUD|huanghuatong|hht|950@hjd|贺家店|HJJ|hejiadian|hjd|951@hji|和静|HJR|hejing|hj|952@hji|获嘉|HJF|huojia|hj|953@hji|河津|HJV|hejin|hj|954@hji|红江|HFM|hongjiang|hj|955@hji|黑井|HIM|heijing|hj|956@hji|涵江|HJS|hanjiang|hj|957@hji|华家|HJT|huajia|hj|958@hjq|杭锦后旗|HDC|hangjinhouqi|hjhq|959@hjx|河间西|HXP|hejianxi|hjx|960@hjz|花家庄|HJM|huajiazhuang|hjz|961@hkn|河口南|HKJ|hekounan|hkn|962@hko|黄口|KOH|huangkou|hk|963@hko|湖口|HKG|hukou|hk|964@hla|呼兰|HUB|hulan|hl|965@hlb|葫芦岛北|HPD|huludaobei|hldb|966@hlh|浩良河|HHB|haolianghe|hlh|967@hlh|哈拉海|HIT|halahai|hlh|968@hli|鹤立|HOB|heli|hl|969@hli|桦林|HIB|hualin|hl|970@hli|黄陵|ULY|huangling|hl|971@hli|海林|HRB|hailin|hl|972@hli|虎林|VLB|hulin|hl|973@hli|寒岭|HAT|hanling|hl|974@hlo|和龙|HLL|helong|hl|975@hlo|海龙|HIL|hailong|hl|976@hls|哈拉苏|HAX|halasu|hls|977@hlt|呼鲁斯太|VTJ|hulusitai|hlst|978@hlz|火连寨|HLT|huolianzhai|hlz|979@hme|黄梅|VEH|huangmei|hm|980@hmy|韩麻营|HYP|hanmaying|hmy|981@hnh|黄泥河|HHL|huangnihe|hnh|982@hni|海宁|HNH|haining|hn|983@hni|怀宁|APH|huaining|hn|984@hno|惠农|HMJ|huinong|hn|985@hpi|和平|VAQ|heping|hp|986@hpz|花棚子|HZM|huapengzi|hpz|987@hqi|花桥|VQH|huaqiao|hq|988@hqi|宏庆|HEY|hongqing|hq|989@hre|怀仁|HRV|huairen|hr|990@hro|华容|HRN|huarong|hr|991@hsb|华山北|HDY|huashanbei|hsb|992@hsd|黄松甸|HDL|huangsongdian|hsd|993@hsg|和什托洛盖|VSR|heshituoluogai|hstlg|994@hsh|红山|VSB|hongshan|hs|995@hsh|汉寿|VSQ|hanshou|hs|996@hsh|衡山|HSQ|hengshan|hs|997@hsh|黑水|HOT|heishui|hs|998@hsh|惠山|VCH|huishan|hs|999@hsh|虎什哈|HHP|hushiha|hsh|1000@hsp|红寺堡|HSJ|hongsipu|hsp|1001@hst|虎石台|HUT|hushitai|hst|1002@hsw|海石湾|HSO|haishiwan|hsw|1003@hsx|衡山西|HEQ|hengshanxi|hsx|1004@hsx|红砂岘|VSJ|hongshaxian|hsx|1005@hta|黑台|HQB|heitai|ht|1006@hta|桓台|VTK|huantai|ht|1007@hti|和田|VTR|hetian|ht|1008@hto|会同|VTQ|huitong|ht|1009@htz|海坨子|HZT|haituozi|htz|1010@hwa|黑旺|HWK|heiwang|hw|1011@hwa|海湾|RWH|haiwan|hw|1012@hxi|红星|VXB|hongxing|hx|1013@hxi|徽县|HYY|huixian|hx|1014@hxl|红兴隆|VHB|hongxinglong|hxl|1015@hxt|换新天|VTB|huanxintian|hxt|1016@hxt|红岘台|HTJ|hongxiantai|hxt|1017@hya|红彦|VIX|hongyan|hy|1018@hya|海晏|HFO|haiyan|hy|1019@hya|合阳|HAY|heyang|hy|1020@hyd|衡阳东|HVQ|hengyangdong|hyd|1021@hyi|华蓥|HUW|huaying|hy|1022@hyi|汉阴|HQY|hanyin|hy|1023@hyt|黄羊滩|HGJ|huangyangtan|hyt|1024@hyu|汉源|WHW|hanyuan|hy|1025@hyu|河源|VIQ|heyuan|hy|1026@hyu|花园|HUN|huayuan|hy|1027@hyu|湟源|HNO|huangyuan|hy|1028@hyz|黄羊镇|HYJ|huangyangzhen|hyz|1029@hzh|湖州|VZH|huzhou|hz|1030@hzh|化州|HZZ|huazhou|hz|1031@hzh|黄州|VON|huangzhou|hz|1032@hzh|霍州|HZV|huozhou|hz|1033@hzx|惠州西|VXQ|huizhouxi|hzx|1034@jba|巨宝|JRT|jubao|jb|1035@jbi|靖边|JIY|jingbian|jb|1036@jbt|金宝屯|JBD|jinbaotun|jbt|1037@jcb|晋城北|JEF|jinchengbei|jcb|1038@jch|金昌|JCJ|jinchang|jc|1039@jch|鄄城|JCK|juancheng|jc|1040@jch|交城|JNV|jiaocheng|jc|1041@jch|建昌|JFD|jianchang|jc|1042@jde|峻德|JDB|junde|jd|1043@jdi|井店|JFP|jingdian|jd|1044@jdo|鸡东|JOB|jidong|jd|1045@jdu|江都|UDH|jiangdu|jd|1046@jgs|鸡冠山|JST|jiguanshan|jgs|1047@jgt|金沟屯|VGP|jingoutun|jgt|1048@jha|静海|JHP|jinghai|jh|1049@jhe|金河|JHX|jinhe|jh|1050@jhe|锦河|JHB|jinhe|jh|1051@jhe|精河|JHR|jinghe|jh|1052@jhn|精河南|JIR|jinghenan|jhn|1053@jhu|江华|JHZ|jianghua|jh|1054@jhu|建湖|AJH|jianhu|jh|1055@jjg|纪家沟|VJD|jijiagou|jjg|1056@jji|晋江|JJS|jinjiang|jj|1057@jji|锦界|JEY|jinjie|jj|1058@jji|姜家|JJB|jiangjia|jj|1059@jji|江津|JJW|jiangjin|jj|1060@jke|金坑|JKT|jinkeng|jk|1061@jli|芨岭|JLJ|jiling|jl|1062@jmc|金马村|JMM|jinmacun|jmc|1063@jmd|江门东|JWQ|jiangmendong|jmd|1064@jme|角美|JES|jiaomei|jm|1065@jme|江门|JOQ|jiangmen|jm|1066@jna|莒南|JOK|junan|jn|1067@jna|井南|JNP|jingnan|jn|1068@jou|建瓯|JVS|jianou|jo|1069@jpe|经棚|JPC|jingpeng|jp|1070@jqi|江桥|JQX|jiangqiao|jq|1071@jsa|九三|SSX|jiusan|js|1072@jsb|金山北|EGH|jinshanbei|jsb|1073@jsh|嘉善|JSH|jiashan|js|1074@jsh|京山|JCN|jingshan|js|1075@jsh|建始|JRN|jianshi|js|1076@jsh|稷山|JVV|jishan|js|1077@jsh|吉舒|JSL|jishu|js|1078@jsh|建设|JET|jianshe|js|1079@jsh|甲山|JOP|jiashan|js|1080@jsj|建三江|JIB|jiansanjiang|jsj|1081@jsn|嘉善南|EAH|jiashannan|jsn|1082@jst|金山屯|JTB|jinshantun|jst|1083@jst|江所田|JOM|jiangsuotian|jst|1084@jta|景泰|JTJ|jingtai|jt|1085@jtn|九台南|JNL|jiutainan|jtn|1086@jwe|吉文|JWX|jiwen|jw|1087@jxi|进贤|JUG|jinxian|jx|1088@jxi|莒县|JKK|juxian|jx|1089@jxi|嘉祥|JUK|jiaxiang|jx|1090@jxi|介休|JXV|jiexiu|jx|1091@jxi|嘉兴|JXH|jiaxing|jx|1092@jxi|井陉|JJP|jingxing|jx|1093@jxn|嘉兴南|EPH|jiaxingnan|jxn|1094@jxz|夹心子|JXT|jiaxinzi|jxz|1095@jya|简阳|JYW|jianyang|jy|1096@jya|姜堰|UEH|jiangyan|jy|1097@jya|建阳|JYS|jianyang|jy|1098@jye|巨野|JYK|juye|jy|1099@jyn|揭阳南|JRQ|jieyangnan|jyn|1100@jyo|江永|JYZ|jiangyong|jy|1101@jyu|缙云|JYH|jinyun|jy|1102@jyu|靖远|JYJ|jingyuan|jy|1103@jyu|江源|SZL|jiangyuan|jy|1104@jyu|济源|JYF|jiyuan|jy|1105@jyx|靖远西|JXJ|jingyuanxi|jyx|1106@jzb|胶州北|JZK|jiaozhoubei|jzb|1107@jzd|焦作东|WEF|jiaozuodong|jzd|1108@jzh|金寨|JZH|jinzhai|jz|1109@jzh|蓟州|JIP|jizhou|jz|1110@jzh|靖州|JEQ|jingzhou|jz|1111@jzh|荆州|JBN|jingzhou|jz|1112@jzh|胶州|JXK|jiaozhou|jz|1113@jzh|晋州|JXP|jinzhou|jz|1114@jzn|锦州南|JOD|jinzhounan|jzn|1115@jzu|焦作|JOF|jiaozuo|jz|1116@jzw|旧庄窝|JVP|jiuzhuangwo|jzw|1117@jzz|金杖子|JYD|jinzhangzi|jzz|1118@kan|开安|KAT|kaian|ka|1119@kch|库车|KCR|kuche|kc|1120@kch|康城|KCP|kangcheng|kc|1121@kde|库都尔|KDX|kuduer|kde|1122@kdi|宽甸|KDT|kuandian|kd|1123@kdo|克东|KOB|kedong|kd|1124@kdz|昆都仑召|KDC|kundulunzhao|kdlz|1125@kji|开江|KAW|kaijiang|kj|1126@kjj|康金井|KJB|kangjinjing|kjj|1127@klq|喀喇其|KQX|kalaqi|klq|1128@klu|开鲁|KLC|kailu|kl|1129@kly|克拉玛依|KHR|kelamayi|klmy|1130@kpn|开平南|PVQ|kaipingnan|kpn|1131@kqi|口前|KQL|kouqian|kq|1132@ksh|昆山|KSH|kunshan|ks|1133@ksh|奎山|KAB|kuishan|ks|1134@ksh|克山|KSB|keshan|ks|1135@kxl|康熙岭|KXZ|kangxiling|kxl|1136@kya|昆阳|KAM|kunyang|ky|1137@kyh|克一河|KHX|keyihe|kyh|1138@kyx|开原西|KXT|kaiyuanxi|kyx|1139@kzh|康庄|KZP|kangzhuang|kz|1140@lbi|来宾|UBZ|laibin|lb|1141@lbi|老边|LLT|laobian|lb|1142@lbx|灵宝西|LPF|lingbaoxi|lbx|1143@lcd|洛川东|LRY|luochuandong|lcd|1144@lch|龙川|LUQ|longchuan|lc|1145@lch|乐昌|LCQ|lechang|lc|1146@lch|黎城|UCP|licheng|lc|1147@lch|聊城|UCK|liaocheng|lc|1148@lcu|蓝村|LCK|lancun|lc|1149@lda|两当|LDY|liangdang|ld|1150@ldo|林东|LRC|lindong|ld|1151@ldu|乐都|LDO|ledu|ld|1152@ldx|梁底下|LDP|liangdixia|ldx|1153@ldz|六道河子|LVP|liudaohezi|ldhz|1154@lfa|鲁番|LVM|lufan|lf|1155@lfa|廊坊|LJP|langfang|lf|1156@lfa|落垡|LOP|luofa|lf|1157@lfb|廊坊北|LFP|langfangbei|lfb|1158@lfu|老府|UFD|laofu|lf|1159@lga|兰岗|LNB|langang|lg|1160@lgd|龙骨甸|LGM|longgudian|lgd|1161@lgo|芦沟|LOM|lugou|lg|1162@lgo|龙沟|LGJ|longgou|lg|1163@lgu|拉古|LGB|lagu|lg|1164@lha|临海|UFH|linhai|lh|1165@lha|拉哈|LHX|laha|lh|1166@lha|凌海|JID|linghai|lh|1167@lha|林海|LXX|linhai|lh|1168@lhe|柳河|LNL|liuhe|lh|1169@lhe|六合|KLH|liuhe|lh|1170@lhu|龙华|LHP|longhua|lh|1171@lhy|滦河沿|UNP|luanheyan|lhy|1172@lhz|六合镇|LEX|liuhezhen|lhz|1173@ljd|亮甲店|LRT|liangjiadian|ljd|1174@ljd|刘家店|UDT|liujiadian|ljd|1175@ljh|刘家河|LVT|liujiahe|ljh|1176@lji|连江|LKS|lianjiang|lj|1177@lji|庐江|UJH|lujiang|lj|1178@lji|李家|LJB|lijia|lj|1179@lji|廉江|LJZ|lianjiang|lj|1180@lji|两家|UJT|liangjia|lj|1181@lji|龙江|LJX|longjiang|lj|1182@lji|罗江|LJW|luojiang|lj|1183@lji|龙嘉|UJL|longjia|lj|1184@ljk|莲江口|LHB|lianjiangkou|ljk|1185@ljl|蔺家楼|ULK|linjialou|ljl|1186@ljp|李家坪|LIJ|lijiaping|ljp|1187@lka|兰考|LKF|lankao|lk|1188@lko|林口|LKB|linkou|lk|1189@lkp|路口铺|LKQ|lukoupu|lkp|1190@lla|老莱|LAX|laolai|ll|1191@lli|拉林|LAB|lalin|ll|1192@lli|陆良|LRM|luliang|ll|1193@lli|临澧|LWQ|linli|ll|1194@lli|兰棱|LLB|lanling|ll|1195@lli|龙里|LLW|longli|ll|1196@lli|零陵|UWZ|lingling|ll|1197@llo|卢龙|UAP|lulong|ll|1198@lmd|喇嘛甸|LMX|lamadian|lmd|1199@lmd|里木店|LMB|limudian|lmd|1200@lme|洛门|LMJ|luomen|lm|1201@lna|龙南|UNG|longnan|ln|1202@lpi|梁平|UQW|liangping|lp|1203@lpi|罗平|LPM|luoping|lp|1204@lpl|落坡岭|LPP|luopoling|lpl|1205@lps|乐平市|LPG|lepingshi|lps|1206@lps|六盘山|UPJ|liupanshan|lps|1207@lqi|临清|UQK|linqing|lq|1208@lqs|龙泉寺|UQJ|longquansi|lqs|1209@lsb|乐山北|UTW|leshanbei|ls|1210@lsc|乐善村|LUM|leshancun|lsc|1211@lsd|冷水江东|UDQ|lengshuijiangdong|lsjd|1212@lsg|连山关|LGT|lianshanguan|lsg|1213@lsg|流水沟|USP|liushuigou|lsg|1214@lsh|丽水|USH|lishui|ls|1215@lsh|陵水|LIQ|lingshui|ls|1216@lsh|罗山|LRN|luoshan|ls|1217@lsh|鲁山|LAF|lushan|ls|1218@lsh|梁山|LMK|liangshan|ls|1219@lsh|灵石|LSV|lingshi|ls|1220@lsh|露水河|LUL|lushuihe|lsh|1221@lsh|庐山|LSG|lushan|ls|1222@lsp|林盛堡|LBT|linshengpu|lsp|1223@lst|柳树屯|LSD|liushutun|lst|1224@lsz|龙山镇|LAS|longshanzhen|lsz|1225@lsz|梨树镇|LSB|lishuzhen|lsz|1226@lsz|李石寨|LET|lishizhai|lsz|1227@lta|黎塘|LTZ|litang|lt|1228@lta|轮台|LAR|luntai|lt|1229@lta|芦台|LTP|lutai|lt|1230@ltb|龙塘坝|LBM|longtangba|ltb|1231@ltu|濑湍|LVZ|laituan|lt|1232@ltx|骆驼巷|LTJ|luotuoxiang|ltx|1233@lwa|李旺|VLJ|liwang|lw|1234@lwd|莱芜东|LWK|laiwudong|lwd|1235@lws|狼尾山|LRJ|langweishan|lws|1236@lwu|灵武|LNJ|lingwu|lw|1237@lwx|莱芜西|UXK|laiwuxi|lwx|1238@lxi|滦县|UXP|luanxian|lx|1239@lxi|朗乡|LXB|langxiang|lx|1240@lxi|陇县|LXY|longxian|lx|1241@lxi|临湘|LXQ|linxiang|lx|1242@lxi|林西|LXC|linxi|lx|1243@lxi|芦溪|LUG|luxi|lx|1244@lxi|良乡|LAP|liangxiang|lx|1245@lxn|莱西南|LXK|laixinan|lxn|1246@lya|略阳|LYY|lueyang|ly|1247@lya|莱阳|LYK|laiyang|ly|1248@lya|辽阳|LYT|liaoyang|ly|1249@lyd|凌源东|LDD|lingyuandong|lyd|1250@lyd|临沂东|UYK|linyidong|lyd|1251@lyg|连云港|UIH|lianyungang|lyg|1252@lyi|临颍|LNF|linying|ly|1253@lyi|老营|LXL|laoying|ly|1254@lyo|龙游|LMH|longyou|ly|1255@lyu|罗源|LVS|luoyuan|ly|1256@lyu|涟源|LAQ|lianyuan|ly|1257@lyu|涞源|LYP|laiyuan|ly|1258@lyu|林源|LYX|linyuan|ly|1259@lyx|耒阳西|LPQ|leiyangxi|lyx|1260@lze|临泽|LEJ|linze|lz|1261@lzg|龙爪沟|LZT|longzhuagou|lzg|1262@lzh|雷州|UAQ|leizhou|lz|1263@lzh|六枝|LIW|liuzhi|lz|1264@lzh|龙镇|LZA|longzhen|lz|1265@lzh|鹿寨|LIZ|luzhai|lz|1266@lzh|来舟|LZS|laizhou|lz|1267@lzh|拉鲊|LEM|lazha|lz|1268@lzq|兰州新区|LQJ|lanzhouxinqu|lzxq|1269@mas|马鞍山|MAH|maanshan|mas|1270@mba|毛坝|MBY|maoba|mb|1271@mbg|毛坝关|MGY|maobaguan|mbg|1272@mcb|麻城北|MBN|machengbei|mcb|1273@mch|渑池|MCF|mianchi|mc|1274@mch|明城|MCL|mingcheng|mc|1275@mch|庙城|MAP|miaocheng|mc|1276@mcn|渑池南|MNF|mianchinan|mcn|1277@mcp|茅草坪|KPM|maocaoping|mcp|1278@mdh|猛洞河|MUQ|mengdonghe|mdh|1279@mds|磨刀石|MOB|modaoshi|mds|1280@mdu|弥渡|MDF|midu|md|1281@mes|帽儿山|MRB|maoershan|mes|1282@mga|明港|MGN|minggang|mg|1283@mhk|梅河口|MHL|meihekou|mhk|1284@mhu|马皇|MHZ|mahuang|mh|1285@mjg|孟家岗|MGB|mengjiagang|mjg|1286@mla|美兰|MHQ|meilan|ml|1287@mld|汨罗东|MQQ|miluodong|mld|1288@mlh|马莲河|MHB|malianhe|mlh|1289@mli|麻柳|MLY|maliu|ml|1290@mli|茂林|MLD|maolin|ml|1291@mli|穆棱|MLB|muling|ml|1292@mli|茅岭|MLZ|maoling|ml|1293@mli|庙岭|MLL|miaoling|ml|1294@mli|马林|MID|malin|ml|1295@mlo|马龙|MGM|malong|ml|1296@mlt|木里图|MUD|mulitu|mlt|1297@mlu|汨罗|MLQ|miluo|ml|1298@mnh|玛纳斯湖|MNR|manasihu|mnsh|1299@mni|冕宁|UGW|mianning|mn|1300@mpa|沐滂|MPQ|mupang|mp|1301@mqh|马桥河|MQB|maqiaohe|mqh|1302@mqi|闽清|MQS|minqing|mq|1303@mqu|民权|MQF|minquan|mq|1304@msh|明水河|MUT|mingshuihe|msh|1305@msh|麻山|MAB|mashan|ms|1306@msh|眉山|MSW|meishan|ms|1307@msw|漫水湾|MKW|manshuiwan|msw|1308@msz|米沙子|MST|mishazi|msz|1309@msz|茂舍祖|MOM|maoshezu|msz|1310@mta|马踏|PWQ|mata|mt|1311@mxi|美溪|MEB|meixi|mx|1312@mxi|勉县|MVY|mianxian|mx|1313@mya|麻阳|MVQ|mayang|my|1314@myb|密云北|MUP|miyunbei|myb|1315@myi|米易|MMW|miyi|my|1316@myu|墨玉|MUR|moyu|my|1317@myu|麦园|MYS|maiyuan|my|1318@mzh|米脂|MEY|mizhi|mz|1319@mzh|庙庄|MZJ|miaozhuang|mz|1320@mzh|明珠|MFQ|mingzhu|mz|1321@nan|宁安|NAB|ningan|na|1322@nan|农安|NAT|nongan|na|1323@nbs|南博山|NBK|nanboshan|nbs|1324@nch|南仇|NCK|nanqiu|nc|1325@ncs|南城司|NSP|nanchengsi|ncs|1326@ncu|宁村|NCZ|ningcun|nc|1327@nde|宁德|NES|ningde|nd|1328@ngc|南观村|NGP|nanguancun|ngc|1329@ngd|南宫东|NFP|nangongdong|ngd|1330@ngl|南关岭|NLT|nanguanling|ngl|1331@ngu|宁国|NNH|ningguo|ng|1332@nha|宁海|NHH|ninghai|nh|1333@nhb|南华北|NHS|nanhuabei|nhb|1334@nhc|南河川|NHJ|nanhechuan|nhc|1335@nhz|泥河子|NHD|nihezi|nhz|1336@nji|宁家|NVT|ningjia|nj|1337@nji|南靖|NJS|nanjing|nj|1338@nji|牛家|NJB|niujia|nj|1339@nji|能家|NJD|nengjia|nj|1340@nko|南口|NKP|nankou|nk|1341@nkq|南口前|NKT|nankouqian|nkq|1342@nla|南朗|NNQ|nanlang|nl|1343@nli|乃林|NLD|nailin|nl|1344@nlk|尼勒克|NIR|nileke|nlk|1345@nlu|那罗|ULZ|naluo|nl|1346@nlx|宁陵县|NLF|ninglingxian|nlx|1347@nma|奈曼|NMD|naiman|nm|1348@nmi|宁明|NMZ|ningming|nm|1349@nmu|南木|NMX|nanmu|nm|1350@npu|那铺|NPZ|napu|np|1351@nqi|南桥|NQD|nanqiao|nq|1352@nqu|那曲|NQO|naqu|nq|1353@nqu|暖泉|NQJ|nuanquan|nq|1354@nta|南台|NTT|nantai|nt|1355@nto|南头|NOQ|nantou|nt|1356@nwu|宁武|NWV|ningwu|nw|1357@nwz|南湾子|NWP|nanwanzi|nwz|1358@nxb|南翔北|NEH|nanxiangbei|nxb|1359@nxi|宁乡|NXQ|ningxiang|nx|1360@nxi|内乡|NXF|neixiang|nx|1361@nxt|牛心台|NXT|niuxintai|nxt|1362@nyu|南峪|NUP|nanyu|ny|1363@nzg|娘子关|NIP|niangziguan|nzg|1364@nzh|南召|NAF|nanzhao|nz|1365@nzm|南杂木|NZT|nanzamu|nzm|1366@pan|蓬安|PAW|pengan|pa|1367@pan|平安|PAL|pingan|pa|1368@pay|平安驿|PNO|pinganyi|pay|1369@paz|磐安镇|PAJ|pananzhen|paz|1370@paz|平安镇|PZT|pinganzhen|paz|1371@pcd|蒲城东|PEY|puchengdong|pcd|1372@pch|蒲城|PCY|pucheng|pc|1373@pde|裴德|PDB|peide|pd|1374@pdi|偏店|PRP|piandian|pd|1375@pdx|坡底下|PXJ|podixia|pdx|1376@pet|瓢儿屯|PRT|piaoertun|pet|1377@pfa|平房|PFB|pingfang|pf|1378@pga|平岗|PGL|pinggang|pg|1379@pgu|平果|PGZ|pingguo|pg|1380@pgu|平关|PGM|pingguan|pg|1381@pgu|盘关|PAM|panguan|pg|1382@phb|徘徊北|PHP|paihuaibei|phb|1383@phk|平河口|PHM|pinghekou|phk|1384@phu|平湖|PHQ|pinghu|ph|1385@pjb|盘锦北|PBD|panjinbei|pjb|1386@pjd|潘家店|PDP|panjiadian|pjd|1387@pkn|皮口南|PKT|pikounan|pk|1388@pld|普兰店|PLT|pulandian|pld|1389@pli|偏岭|PNT|pianling|pl|1390@psh|平山|PSB|pingshan|ps|1391@psh|彭山|PSW|pengshan|ps|1392@psh|皮山|PSR|pishan|ps|1393@psh|磐石|PSL|panshi|ps|1394@psh|平社|PSV|pingshe|ps|1395@psh|彭水|PHW|pengshui|ps|1396@pta|平台|PVT|pingtai|pt|1397@pti|平田|PTM|pingtian|pt|1398@pti|莆田|PTS|putian|pt|1399@ptq|葡萄菁|PTW|putaojing|ptq|1400@pwa|普湾|PWT|puwan|pw|1401@pwa|平旺|PWV|pingwang|pw|1402@pxg|平型关|PGV|pingxingguan|pxg|1403@pxi|普雄|POW|puxiong|px|1404@pxi|蓬溪|KZW|pengxi|px|1405@pxi|郫县|PWW|pixian|px|1406@pya|平阳|ARH|pingyang|py|1407@pya|平洋|PYX|pingyang|py|1408@pya|平遥|PYV|pingyao|py|1409@pya|彭阳|PYJ|pengyang|py|1410@pyi|平邑|PIK|pingyi|py|1411@pyp|平原堡|PPJ|pingyuanpu|pyp|1412@pyu|平原|PYK|pingyuan|py|1413@pyu|平峪|PYP|pingyu|py|1414@pzb|平庄北|PZD|pingzhuangbei|pzb|1415@pze|彭泽|PZG|pengze|pz|1416@pzh|邳州|PJH|pizhou|pz|1417@pzi|泡子|POD|paozi|pz|1418@pzn|平庄南|PND|pingzhuangnan|pzn|1419@qan|乾安|QOT|qianan|qa|1420@qan|庆安|QAB|qingan|qa|1421@qan|迁安|QQP|qianan|qa|1422@qdb|祁东北|QRQ|qidongbei|qd|1423@qdi|七甸|QDM|qidian|qd|1424@qfd|曲阜东|QAK|qufudong|qfd|1425@qfe|庆丰|QFT|qingfeng|qf|1426@qft|奇峰塔|QVP|qifengta|qft|1427@qfu|曲阜|QFK|qufu|qf|1428@qha|琼海|QYQ|qionghai|qh|1429@qhd|秦皇岛|QTP|qinhuangdao|qhd|1430@qhe|千河|QUY|qianhe|qh|1431@qhe|清河|QIP|qinghe|qh|1432@qhm|清河门|QHD|qinghemen|qhm|1433@qhy|清华园|QHP|qinghuayuan|qhy|1434@qji|全椒|INH|quanjiao|qj|1435@qji|渠旧|QJZ|qujiu|qj|1436@qji|潜江|QJN|qianjiang|qj|1437@qji|秦家|QJB|qinjia|qj|1438@qji|綦江|QJW|qijiang|qj|1439@qjp|祁家堡|QBT|qijiapu|qjp|1440@qjx|清涧县|QNY|qingjianxian|qjx|1441@qjz|秦家庄|QZV|qinjiazhuang|qjz|1442@qlh|七里河|QLD|qilihe|qlh|1443@qli|秦岭|QLY|qinling|ql|1444@qli|渠黎|QLZ|quli|ql|1445@qlo|青龙|QIB|qinglong|ql|1446@qls|青龙山|QGH|qinglongshan|qls|1447@qme|祁门|QIH|qimen|qm|1448@qmt|前磨头|QMP|qianmotou|qmt|1449@qsh|青山|QSB|qingshan|qs|1450@qsh|确山|QSN|queshan|qs|1451@qsh|清水|QUJ|qingshui|qs|1452@qsh|前山|QXQ|qianshan|qs|1453@qsy|戚墅堰|QYH|qishuyan|qsy|1454@qti|青田|QVH|qingtian|qt|1455@qto|桥头|QAT|qiaotou|qt|1456@qtx|青铜峡|QTJ|qingtongxia|qtx|1457@qwe|前卫|QWD|qianwei|qw|1458@qwt|前苇塘|QWP|qianweitang|qwt|1459@qxi|渠县|QRW|quxian|qx|1460@qxi|祁县|QXV|qixian|qx|1461@qxi|青县|QXP|qingxian|qx|1462@qxi|桥西|QXJ|qiaoxi|qx|1463@qxu|清徐|QUV|qingxu|qx|1464@qxy|旗下营|QXC|qixiaying|qxy|1465@qya|千阳|QOY|qianyang|qy|1466@qya|泉阳|QYL|quanyang|qy|1467@qya|沁阳|QYF|qinyang|qy|1468@qyb|祁阳北|QVQ|qiyangbei|qy|1469@qyi|七营|QYJ|qiying|qy|1470@qys|庆阳山|QSJ|qingyangshan|qys|1471@qyu|清远|QBQ|qingyuan|qy|1472@qyu|清原|QYT|qingyuan|qy|1473@qzd|钦州东|QDZ|qinzhoudong|qzd|1474@qzh|钦州|QRZ|qinzhou|qz|1475@qzs|青州市|QZK|qingzhoushi|qzs|1476@ran|瑞安|RAH|ruian|ra|1477@rch|荣昌|RCW|rongchang|rc|1478@rch|瑞昌|RCG|ruichang|rc|1479@rga|如皋|RBH|rugao|rg|1480@rgu|容桂|RUQ|ronggui|rg|1481@rqi|任丘|RQP|renqiu|rq|1482@rsh|乳山|ROK|rushan|rs|1483@rsh|融水|RSZ|rongshui|rs|1484@rsh|热水|RSD|reshui|rs|1485@rxi|容县|RXZ|rongxian|rx|1486@rya|饶阳|RVP|raoyang|ry|1487@rya|汝阳|RYF|ruyang|ry|1488@ryh|绕阳河|RHD|raoyanghe|ryh|1489@rzh|汝州|ROF|ruzhou|rz|1490@sba|石坝|OBJ|shiba|sb|1491@sbc|上板城|SBP|shangbancheng|sbc|1492@sbi|施秉|AQW|shibing|sb|1493@sbn|上板城南|OBP|shangbanchengnan|sbcn|1494@sby|世博园|ZWT|shiboyuan|sby|1495@scb|双城北|SBB|shuangchengbei|scb|1496@sch|舒城|OCH|shucheng|sc|1497@sch|商城|SWN|shangcheng|sc|1498@sch|莎车|SCR|shache|sc|1499@sch|顺昌|SCS|shunchang|sc|1500@sch|神池|SMV|shenchi|sc|1501@sch|沙城|SCP|shacheng|sc|1502@sch|石城|SCT|shicheng|sc|1503@scz|山城镇|SCL|shanchengzhen|scz|1504@sda|山丹|SDJ|shandan|sd|1505@sde|绥德|ODY|suide|sd|1506@sde|顺德|ORQ|shunde|sd|1507@sdo|水洞|SIL|shuidong|sd|1508@sdu|商都|SXC|shangdu|sd|1509@sdu|十渡|SEP|shidu|sd|1510@sdw|四道湾|OUD|sidaowan|sdw|1511@sdy|顺德学院|OJQ|shundexueyuan|sdxy|1512@sfa|绅坊|OLH|shenfang|sf|1513@sfe|双丰|OFB|shuangfeng|sf|1514@sft|四方台|STB|sifangtai|sft|1515@sfu|水富|OTW|shuifu|sf|1516@sgk|三关口|OKJ|sanguankou|sgk|1517@sgl|桑根达来|OGC|sanggendalai|sgdl|1518@sgu|韶关|SNQ|shaoguan|sg|1519@sgz|上高镇|SVK|shanggaozhen|sgz|1520@sha|沙海|SED|shahai|sh|1521@sha|上杭|JBS|shanghang|sh|1522@she|蜀河|SHY|shuhe|sh|1523@she|松河|SBM|songhe|sh|1524@she|沙河|SHP|shahe|sh|1525@shk|沙河口|SKT|shahekou|shk|1526@shl|赛汗塔拉|SHC|saihantala|shtl|1527@shs|沙河市|VOP|shaheshi|shs|1528@shs|沙后所|SSD|shahousuo|shs|1529@sht|山河屯|SHL|shanhetun|sht|1530@shx|三河县|OXP|sanhexian|shx|1531@shy|四合永|OHD|siheyong|shy|1532@shz|双河镇|SEL|shuanghezhen|shz|1533@shz|三汇镇|OZW|sanhuizhen|shz|1534@shz|石河子|SZR|shihezi|shz|1535@shz|三合庄|SVP|sanhezhuang|shz|1536@sjd|三家店|ODP|sanjiadian|sjd|1537@sjh|水家湖|SQH|shuijiahu|sjh|1538@sjh|松江河|SJL|songjianghe|sjh|1539@sjh|沈家河|OJJ|shenjiahe|sjh|1540@sji|尚家|SJB|shangjia|sj|1541@sji|孙家|SUB|sunjia|sj|1542@sji|沈家|OJB|shenjia|sj|1543@sji|双吉|SML|shuangji|sj|1544@sji|松江|SAH|songjiang|sj|1545@sjk|三江口|SKD|sanjiangkou|sjk|1546@sjl|司家岭|OLK|sijialing|sjl|1547@sjn|松江南|IMH|songjiangnan|sjn|1548@sjn|石景山南|SRP|shijingshannan|sjsn|1549@sjt|邵家堂|SJJ|shaojiatang|sjt|1550@sjx|三江县|SOZ|sanjiangxian|sjx|1551@sjz|松江镇|OZL|songjiangzhen|sjz|1552@sjz|三家寨|SMM|sanjiazhai|sjz|1553@sjz|十家子|SJD|shijiazi|sjz|1554@sjz|深井子|SWT|shenjingzi|sjz|1555@sjz|施家嘴|SHM|shijiazui|sjz|1556@sld|什里店|OMP|shilidian|sld|1557@sle|疏勒|SUR|shule|sl|1558@slh|疏勒河|SHJ|shulehe|slh|1559@slh|舍力虎|VLD|shelihu|slh|1560@sli|石磷|SPB|shilin|sl|1561@sli|石林|SLM|shilin|sl|1562@sli|双辽|ZJD|shuangliao|sl|1563@sli|绥棱|SIB|suiling|sl|1564@sli|石岭|SOL|shiling|sl|1565@sln|石林南|LNM|shilinnan|sln|1566@slo|石龙|SLQ|shilong|sl|1567@slq|萨拉齐|SLC|salaqi|slq|1568@slu|索伦|SNT|suolun|sl|1569@slu|商洛|OLY|shangluo|sl|1570@slz|沙岭子|SLP|shalingzi|slz|1571@smb|石门县北|VFQ|shimenxianbei|smxb|1572@smn|三门峡南|SCF|sanmenxianan|smxn|1573@smx|三门县|OQH|sanmenxian|smx|1574@smx|神木西|OUY|shenmuxi|smx|1575@smx|三门峡西|SXF|sanmenxiaxi|smxx|1576@smx|石门县|OMQ|shimenxian|smx|1577@sni|肃宁|SYP|suning|sn|1578@son|宋|SOB|song|son|1579@spa|双牌|SBZ|shuangpai|sp|1580@spb|沙坪坝|CYW|shapingba|spb|1581@spd|四平东|PPT|sipingdong|spd|1582@spi|遂平|SON|suiping|sp|1583@spt|沙坡头|SFJ|shapotou|spt|1584@sqi|沙桥|SQM|shaqiao|sq|1585@sqn|商丘南|SPF|shangqiunan|sqn|1586@squ|水泉|SID|shuiquan|sq|1587@sqx|石泉县|SXY|shiquanxian|sqx|1588@sqz|石桥子|SQT|shiqiaozi|sqz|1589@src|石人城|SRB|shirencheng|src|1590@sre|石人|SRL|shiren|sr|1591@ssh|山市|SQB|shanshi|ss|1592@ssh|神树|SWB|shenshu|ss|1593@ssh|鄯善|SSR|shanshan|ss|1594@ssh|三水|SJQ|sanshui|ss|1595@ssh|泗水|OSK|sishui|ss|1596@ssh|松树|SFT|songshu|ss|1597@ssh|石山|SAD|shishan|ss|1598@ssh|首山|SAT|shoushan|ss|1599@ssj|三十家|SRD|sanshijia|ssj|1600@ssp|三十里堡|SST|sanshilipu|sslp|1601@ssz|双水镇|PQQ|shuangshuizhen|ssz|1602@ssz|松树镇|SSL|songshuzhen|ssz|1603@sta|松桃|MZQ|songtao|st|1604@sth|索图罕|SHX|suotuhan|sth|1605@stj|三堂集|SDH|santangji|stj|1606@sto|石头|OTB|shitou|st|1607@sto|神头|SEV|shentou|st|1608@stu|沙沱|SFM|shatuo|st|1609@swa|上万|SWP|shangwan|sw|1610@swu|孙吴|SKB|sunwu|sw|1611@swx|沙湾县|SXR|shawanxian|swx|1612@sxi|歙县|OVH|shexian|sx|1613@sxi|遂溪|SXZ|suixi|sx|1614@sxi|沙县|SAS|shaxian|sx|1615@sxi|绍兴|SOH|shaoxing|sx|1616@sxi|石岘|SXL|shixian|sx|1617@sxp|上西铺|SXM|shangxipu|sxp|1618@sxz|石峡子|SXJ|shixiazi|sxz|1619@sya|沭阳|FMH|shuyang|sy|1620@sya|绥阳|SYB|suiyang|sy|1621@sya|寿阳|SYV|shouyang|sy|1622@sya|水洋|OYP|shuiyang|sy|1623@syc|三阳川|SYJ|sanyangchuan|syc|1624@syd|上腰墩|SPJ|shangyaodun|syd|1625@syi|三营|OEJ|sanying|sy|1626@syi|顺义|SOP|shunyi|sy|1627@syj|三义井|OYD|sanyijing|syj|1628@syp|三源浦|SYL|sanyuanpu|syp|1629@syu|上虞|BDH|shangyu|sy|1630@syu|三原|SAY|sanyuan|sy|1631@syu|上园|SUD|shangyuan|sy|1632@syu|水源|OYJ|shuiyuan|sy|1633@syz|桑园子|SAJ|sangyuanzi|syz|1634@szb|绥中北|SND|suizhongbei|szb|1635@szb|苏州北|OHH|suzhoubei|szb|1636@szd|宿州东|SRH|suzhoudong|szd|1637@szd|深圳东|BJQ|shenzhendong|szd|1638@szh|深州|OZP|shenzhou|sz|1639@szh|孙镇|OZY|sunzhen|sz|1640@szh|绥中|SZD|suizhong|sz|1641@szh|尚志|SZB|shangzhi|sz|1642@szh|师庄|SNM|shizhuang|sz|1643@szi|松滋|SIN|songzi|sz|1644@szo|师宗|SEM|shizong|sz|1645@szq|苏州园区|KAH|suzhouyuanqu|szyq|1646@szq|苏州新区|ITH|suzhouxinqu|szxq|1647@tan|泰安|TMK|taian|ta|1648@tan|台安|TID|taian|ta|1649@tay|通安驿|TAJ|tonganyi|tay|1650@tba|桐柏|TBF|tongbai|tb|1651@tbe|通北|TBB|tongbei|tb|1652@tch|桐城|TTH|tongcheng|tc|1653@tch|汤池|TCX|tangchi|tc|1654@tch|郯城|TZK|tancheng|tc|1655@tch|铁厂|TCL|tiechang|tc|1656@tcu|桃村|TCK|taocun|tc|1657@tda|通道|TRQ|tongdao|td|1658@tdo|田东|TDZ|tiandong|td|1659@tga|天岗|TGL|tiangang|tg|1660@tgl|土贵乌拉|TGC|tuguiwula|tgwl|1661@tgo|通沟|TOL|tonggou|tg|1662@tgu|太谷|TGV|taigu|tg|1663@tha|塔哈|THX|taha|th|1664@tha|棠海|THM|tanghai|th|1665@the|唐河|THF|tanghe|th|1666@the|泰和|THG|taihe|th|1667@thu|太湖|TKH|taihu|th|1668@tji|团结|TIX|tuanjie|tj|1669@tjj|谭家井|TNJ|tanjiajing|tjj|1670@tjt|陶家屯|TOT|taojiatun|tjt|1671@tjw|唐家湾|PDQ|tangjiawan|tjw|1672@tjz|统军庄|TZP|tongjunzhuang|tjz|1673@tld|吐列毛杜|TMD|tuliemaodu|tlmd|1674@tlh|图里河|TEX|tulihe|tlh|1675@tli|铜陵|TJH|tongling|tl|1676@tli|田林|TFZ|tianlin|tl|1677@tli|亭亮|TIZ|tingliang|tl|1678@tli|铁力|TLB|tieli|tl|1679@tlx|铁岭西|PXT|tielingxi|tlx|1680@tmb|图们北|QSL|tumenbei|tmb|1681@tme|天门|TMN|tianmen|tm|1682@tmn|天门南|TNN|tianmennan|tmn|1683@tms|太姥山|TLS|taimushan|tms|1684@tmt|土牧尔台|TRC|tumuertai|tmet|1685@tmz|土门子|TCJ|tumenzi|tmz|1686@tna|洮南|TVT|taonan|tn|1687@tna|潼南|TVW|tongnan|tn|1688@tpc|太平川|TIT|taipingchuan|tpc|1689@tpz|太平镇|TEB|taipingzhen|tpz|1690@tqi|图强|TQX|tuqiang|tq|1691@tqi|台前|TTK|taiqian|tq|1692@tql|天桥岭|TQL|tianqiaoling|tql|1693@tqz|土桥子|TQJ|tuqiaozi|tqz|1694@tsc|汤山城|TCT|tangshancheng|tsc|1695@tsh|桃山|TAB|taoshan|ts|1696@tsh|台山|PUQ|taishan|ts|1697@tsz|塔石嘴|TIM|tashizui|tsz|1698@ttu|通途|TUT|tongtu|tt|1699@twh|汤旺河|THB|tangwanghe|twh|1700@txi|同心|TXJ|tongxin|tx|1701@txi|土溪|TSW|tuxi|tx|1702@txi|桐乡|TCH|tongxiang|tx|1703@tya|田阳|TRZ|tianyang|ty|1704@tyi|天义|TND|tianyi|ty|1705@tyi|汤阴|TYF|tangyin|ty|1706@tyl|驼腰岭|TIL|tuoyaoling|tyl|1707@tys|太阳山|TYJ|taiyangshan|tys|1708@tyu|通榆|KTT|tongyu|ty|1709@tyu|汤原|TYB|tangyuan|ty|1710@tyy|塔崖驿|TYP|tayayi|tyy|1711@tzd|滕州东|TEK|tengzhoudong|tzd|1712@tzh|台州|TZH|taizhou|tz|1713@tzh|天祝|TZJ|tianzhu|tz|1714@tzh|滕州|TXK|tengzhou|tz|1715@tzh|天镇|TZV|tianzhen|tz|1716@tzl|桐子林|TEW|tongzilin|tzl|1717@tzs|天柱山|QWH|tianzhushan|tzs|1718@wan|武安|WAP|wuan|wa|1719@wan|文安|WBP|wenan|wa|1720@waz|王安镇|WVP|wanganzhen|waz|1721@wbu|吴堡|WUY|wubu|wb|1722@wca|旺苍|WEW|wangcang|wc|1723@wcg|五叉沟|WCT|wuchagou|wcg|1724@wch|温春|WDB|wenchun|wc|1725@wch|文昌|WEQ|wenchang|wc|1726@wdc|五大连池|WRB|wudalianchi|wdlc|1727@wde|文登|WBK|wendeng|wd|1728@wdg|五道沟|WDL|wudaogou|wdg|1729@wdh|五道河|WHP|wudaohe|wdh|1730@wdi|文地|WNZ|wendi|wd|1731@wdo|卫东|WVT|weidong|wd|1732@wds|武当山|WRN|wudangshan|wds|1733@wdu|望都|WDP|wangdu|wd|1734@weh|乌尔旗汗|WHX|wuerqihan|weqh|1735@wfa|潍坊|WFK|weifang|wf|1736@wft|万发屯|WFB|wanfatun|wft|1737@wfu|王府|WUT|wangfu|wf|1738@wfx|瓦房店西|WXT|wafangdianxi|wfdx|1739@wga|王岗|WGB|wanggang|wg|1740@wgo|武功|WGY|wugong|wg|1741@wgo|湾沟|WGL|wangou|wg|1742@wgt|吴官田|WGM|wuguantian|wgt|1743@wha|乌海|WVC|wuhai|wh|1744@whe|苇河|WHB|weihe|wh|1745@whu|卫辉|WHF|weihui|wh|1746@wjc|吴家川|WCJ|wujiachuan|wjc|1747@wji|五家|WUB|wujia|wj|1748@wji|威箐|WAM|weiqing|wj|1749@wji|午汲|WJP|wuji|wj|1750@wji|渭津|WJL|weijin|wj|1751@wjw|王家湾|WJJ|wangjiawan|wjw|1752@wke|倭肯|WQB|woken|wk|1753@wks|五棵树|WKT|wukeshu|wks|1754@wlb|五龙背|WBT|wulongbei|wlb|1755@wle|万乐|WEB|wanle|wl|1756@wlg|瓦拉干|WVX|walagan|wlg|1757@wli|温岭|VHH|wenling|wl|1758@wli|五莲|WLK|wulian|wl|1759@wlq|乌拉特前旗|WQC|wulateqianqi|wltqq|1760@wlt|卧里屯|WLX|wolitun|wlt|1761@wnb|渭南北|WBY|weinanbei|wnb|1762@wne|乌奴耳|WRX|wunuer|wne|1763@wni|万宁|WNQ|wanning|wn|1764@wni|万年|WWG|wannian|wn|1765@wnn|渭南南|WVY|weinannan|wnn|1766@wnz|渭南镇|WNJ|weinanzhen|wnz|1767@wpi|沃皮|WPT|wopi|wp|1768@wqi|吴桥|WUP|wuqiao|wq|1769@wqi|汪清|WQL|wangqing|wq|1770@wqi|武清|WWP|wuqing|wq|1771@wsh|武山|WSJ|wushan|ws|1772@wsh|文水|WEV|wenshui|ws|1773@wsz|魏善庄|WSP|weishanzhuang|wsz|1774@wto|王瞳|WTP|wangtong|wt|1775@wts|五台山|WSV|wutaishan|wts|1776@wtz|王团庄|WZJ|wangtuanzhuang|wtz|1777@wwu|五五|WVR|wuwu|ww|1778@wxd|武乡东|WVV|wuxiangdong|wxd|1779@wxd|无锡东|WGH|wuxidong|wxd|1780@wxi|卫星|WVB|weixing|wx|1781@wxi|闻喜|WXV|wenxi|wx|1782@wxq|无锡新区|IFH|wuxixinqu|wxxq|1783@wxu|武穴|WXN|wuxue|wx|1784@wxu|吴圩|WYZ|wuxu|wx|1785@wya|王杨|WYB|wangyang|wy|1786@wyi|武义|RYH|wuyi|wy|1787@wyi|五营|WWB|wuying|wy|1788@wyt|瓦窑田|WIM|wayaotian|wyt|1789@wyu|五原|WYC|wuyuan|wy|1790@wzg|苇子沟|WZL|weizigou|wzg|1791@wzh|韦庄|WZY|weizhuang|wz|1792@wzh|五寨|WZV|wuzhai|wz|1793@wzt|王兆屯|WZB|wangzhaotun|wzt|1794@wzz|微子镇|WQP|weizizhen|wzz|1795@wzz|魏杖子|WKD|weizhangzi|wzz|1796@xan|新安|EAM|xinan|xa|1797@xan|兴安|XAZ|xingan|xa|1798@xax|新安县|XAF|xinanxian|xax|1799@xba|新保安|XAP|xinbaoan|xba|1800@xbc|下板城|EBP|xiabancheng|xbc|1801@xbl|西八里|XLP|xibali|xbl|1802@xch|宣城|ECH|xuancheng|xc|1803@xch|兴城|XCD|xingcheng|xc|1804@xcu|小村|XEM|xiaocun|xc|1805@xcy|新绰源|XRX|xinchuoyuan|xcy|1806@xcz|下城子|XCB|xiachengzi|xcz|1807@xcz|新城子|XCT|xinchengzi|xcz|1808@xde|喜德|EDW|xide|xd|1809@xdj|小得江|EJM|xiaodejiang|xdj|1810@xdm|西大庙|XMP|xidamiao|xdm|1811@xdo|小东|XOD|xiaodong|xd|1812@xdo|小董|XEZ|xiaodong|xd|1813@xfa|香坊|XFB|xiangfang|xf|1814@xfe|信丰|EFG|xinfeng|xf|1815@xfe|襄汾|XFV|xiangfen|xf|1816@xfe|息烽|XFW|xifeng|xf|1817@xga|新干|EGG|xingan|xg|1818@xga|轩岗|XGV|xuangang|xg|1819@xga|孝感|XGN|xiaogan|xg|1820@xgc|西固城|XUJ|xigucheng|xgc|1821@xgu|兴国|EUG|xingguo|xg|1822@xgu|西固|XIJ|xigu|xg|1823@xgy|夏官营|XGJ|xiaguanying|xgy|1824@xgz|西岗子|NBB|xigangzi|xgz|1825@xha|宣汉|XHY|xuanhan|xh|1826@xhe|襄河|XXB|xianghe|xh|1827@xhe|新和|XIR|xinhe|xh|1828@xhe|宣和|XWJ|xuanhe|xh|1829@xhj|斜河涧|EEP|xiehejian|xhj|1830@xht|新华屯|XAX|xinhuatun|xht|1831@xhu|新华|XHB|xinhua|xh|1832@xhu|新会|EFQ|xinhui|xh|1833@xhu|新晃|XLQ|xinhuang|xh|1834@xhu|新化|EHQ|xinhua|xh|1835@xhu|宣化|XHP|xuanhua|xh|1836@xhx|兴和西|XEC|xinghexi|xhx|1837@xhy|下花园|XYP|xiahuayuan|xhy|1838@xhy|小河沿|XYD|xiaoheyan|xhy|1839@xhz|小河镇|EKY|xiaohezhen|xhz|1840@xjd|徐家店|HYK|xujiadian|xjd|1841@xji|徐家|XJB|xujia|xj|1842@xji|峡江|EJG|xiajiang|xj|1843@xji|新绛|XJV|xinjiang|xj|1844@xji|辛集|ENP|xinji|xj|1845@xji|新江|XJM|xinjiang|xj|1846@xjk|西街口|EKM|xijiekou|xjk|1847@xjt|许家屯|XJT|xujiatun|xjt|1848@xjt|许家台|XTJ|xujiatai|xjt|1849@xjz|谢家镇|XMT|xiejiazhen|xjz|1850@xka|兴凯|EKB|xingkai|xk|1851@xla|香兰|XNB|xianglan|xl|1852@xla|小榄|EAQ|xiaolan|xl|1853@xld|兴隆店|XDD|xinglongdian|xld|1854@xle|新乐|ELP|xinle|xl|1855@xli|新林|XPX|xinlin|xl|1856@xli|小岭|XLB|xiaoling|xl|1857@xli|西林|XYB|xilin|xl|1858@xli|西柳|GCT|xiliu|xl|1859@xli|新李|XLJ|xinli|xl|1860@xli|仙林|XPH|xianlin|xl|1861@xlt|新立屯|XLD|xinlitun|xlt|1862@xlx|兴隆县|EXP|xinglongxian|xlx|1863@xlz|兴隆镇|XZB|xinglongzhen|xlz|1864@xlz|新立镇|XGT|xinlizhen|xlz|1865@xmi|新民|XMD|xinmin|xm|1866@xms|西麻山|XMB|ximashan|xms|1867@xmt|下马塘|XAT|xiamatang|xmt|1868@xna|孝南|XNV|xiaonan|xn|1869@xnb|咸宁北|XRN|xianningbei|xnb|1870@xni|兴宁|ENQ|xingning|xn|1871@xni|咸宁|XNN|xianning|xn|1872@xpd|犀浦东|XAW|xipudong|xpd|1873@xpi|西平|XPN|xiping|xp|1874@xpi|兴平|XPY|xingping|xp|1875@xpt|新坪田|XPM|xinpingtian|xpt|1876@xpu|霞浦|XOS|xiapu|xp|1877@xpu|溆浦|EPQ|xupu|xp|1878@xpu|犀浦|XIW|xipu|xp|1879@xqi|新青|XQB|xinqing|xq|1880@xqi|新邱|XQD|xinqiu|xq|1881@xqp|兴泉堡|XQJ|xingquanbu|xqp|1882@xrq|仙人桥|XRL|xianrenqiao|xrq|1883@xsg|小寺沟|ESP|xiaosigou|xsg|1884@xsh|杏树|XSB|xingshu|xs|1885@xsh|浠水|XZN|xishui|xs|1886@xsh|下社|XSV|xiashe|xs|1887@xsh|小市|XST|xiaoshi|xs|1888@xsh|徐水|XSP|xushui|xs|1889@xsh|夏石|XIZ|xiashi|xs|1890@xsh|秀山|ETW|xiushan|xs|1891@xsh|小哨|XAM|xiaoshao|xs|1892@xsp|新松浦|XOB|xinsongpu|xsp|1893@xst|杏树屯|XDT|xingshutun|xst|1894@xsw|许三湾|XSJ|xusanwan|xsw|1895@xta|湘潭|XTQ|xiangtan|xt|1896@xta|邢台|XTP|xingtai|xt|1897@xta|向塘|XTG|xiangtang|xt|1898@xtx|仙桃西|XAN|xiantaoxi|xtx|1899@xtz|下台子|EIP|xiataizi|xtz|1900@xwe|徐闻|XJQ|xuwen|xw|1901@xwp|新窝铺|EPD|xinwopu|xwp|1902@xwu|修武|XWF|xiuwu|xw|1903@xxi|新县|XSN|xinxian|xx|1904@xxi|息县|ENN|xixian|xx|1905@xxi|西乡|XQY|xixiang|xx|1906@xxi|湘乡|XXQ|xiangxiang|xx|1907@xxi|西峡|XIF|xixia|xx|1908@xxi|孝西|XOV|xiaoxi|xx|1909@xxj|小新街|XXM|xiaoxinjie|xxj|1910@xxx|新兴县|XGQ|xinxingxian|xxx|1911@xxz|西小召|XZC|xixiaozhao|xxz|1912@xxz|小西庄|XXP|xiaoxizhuang|xxz|1913@xya|向阳|XDB|xiangyang|xy|1914@xya|旬阳|XUY|xunyang|xy|1915@xyb|旬阳北|XBY|xunyangbei|xyb|1916@xye|兴业|SNZ|xingye|xy|1917@xyg|小雨谷|XHM|xiaoyugu|xyg|1918@xyi|新沂|VIH|xinyi|xy|1919@xyi|兴义|XRZ|xingyi|xy|1920@xyi|信宜|EEQ|xinyi|xy|1921@xyj|小月旧|XFM|xiaoyuejiu|xyj|1922@xyq|小扬气|XYX|xiaoyangqi|xyq|1923@xyu|襄垣|EIF|xiangyuan|xy|1924@xyx|夏邑县|EJH|xiayixian|xyx|1925@xyx|祥云西|EXM|xiangyunxi|xyx|1926@xyy|新友谊|EYB|xinyouyi|xyy|1927@xyz|新阳镇|XZJ|xinyangzhen|xyz|1928@xzd|徐州东|UUH|xuzhoudong|xzd|1929@xzf|新帐房|XZX|xinzhangfang|xzf|1930@xzh|新肇|XZT|xinzhao|xz|1931@xzh|悬钟|XRP|xuanzhong|xz|1932@xzh|襄州|XWN|xiangzhou|xz|1933@xzh|忻州|XXV|xinzhou|xz|1934@xzi|汐子|XZD|xizi|xz|1935@xzm|西哲里木|XRD|xizhelimu|xzlm|1936@xzz|新杖子|ERP|xinzhangzi|xzz|1937@yan|依安|YAX|yian|ya|1938@yan|姚安|YAC|yaoan|ya|1939@yan|永安|YAS|yongan|ya|1940@yax|永安乡|YNB|yonganxiang|yax|1941@ybl|亚布力|YBB|yabuli|ybl|1942@ybs|元宝山|YUD|yuanbaoshan|ybs|1943@yca|羊草|YAB|yangcao|yc|1944@ycd|秧草地|YKM|yangcaodi|ycd|1945@ych|阳澄湖|AIH|yangchenghu|ych|1946@ych|迎春|YYB|yingchun|yc|1947@ych|叶城|YER|yecheng|yc|1948@ych|盐池|YKJ|yanchi|yc|1949@ych|砚川|YYY|yanchuan|yc|1950@ych|阳春|YQQ|yangchun|yc|1951@ych|宜城|YIN|yicheng|yc|1952@ych|应城|YHN|yingcheng|yc|1953@ych|禹城|YCK|yucheng|yc|1954@ych|晏城|YEK|yancheng|yc|1955@ych|阳岔|YAL|yangcha|yc|1956@ych|阳城|YNF|yangcheng|yc|1957@ych|郓城|YPK|yuncheng|yc|1958@ych|雁翅|YAP|yanchi|yc|1959@ycl|云彩岭|ACP|yuncailing|ycl|1960@ycx|虞城县|IXH|yuchengxian|ycx|1961@ycz|营城子|YCT|yingchengzi|ycz|1962@yde|英德|YDQ|yingde|yd|1963@yde|永登|YDJ|yongdeng|yd|1964@ydi|永定|YGS|yongding|yd|1965@ydi|尹地|YDM|yindi|yd|1966@ydo|阳东|WLQ|yangdong|yd|1967@yds|雁荡山|YGH|yandangshan|yds|1968@ydu|于都|YDG|yudu|yd|1969@ydu|园墩|YAJ|yuandun|yd|1970@ydx|英德西|IIQ|yingdexi|ydx|1971@yfy|永丰营|YYM|yongfengying|yfy|1972@yga|杨岗|YRB|yanggang|yg|1973@yga|阳高|YOV|yanggao|yg|1974@ygu|阳谷|YIK|yanggu|yg|1975@yha|友好|YOB|youhao|yh|1976@yha|余杭|EVH|yuhang|yh|1977@yhc|沿河城|YHP|yanhecheng|yhc|1978@yhu|岩会|AEP|yanhui|yh|1979@yjh|羊臼河|YHM|yangjiuhe|yjh|1980@yji|永嘉|URH|yongjia|yj|1981@yji|盐津|AEW|yanjin|yj|1982@yji|阳江|WRQ|yangjiang|yj|1983@yji|余江|YHG|yujiang|yj|1984@yji|燕郊|AJP|yanjiao|yj|1985@yji|营街|YAM|yingjie|yj|1986@yji|姚家|YAT|yaojia|yj|1987@yjj|岳家井|YGJ|yuejiajing|yjj|1988@yjp|一间堡|YJT|yijianpu|yjp|1989@yjs|英吉沙|YIR|yingjisha|yjs|1990@yjs|云居寺|AFP|yunjusi|yjs|1991@yjz|燕家庄|AZK|yanjiazhuang|yjz|1992@yka|永康|RFH|yongkang|yk|1993@ykd|营口东|YGT|yingkoudong|ykd|1994@yla|银浪|YJX|yinlang|yl|1995@yla|永郎|YLW|yonglang|yl|1996@ylb|宜良北|YSM|yiliangbei|ylb|1997@yld|永乐店|YDY|yongledian|yld|1998@ylh|伊拉哈|YLX|yilaha|ylh|1999@yli|杨陵|YSY|yangling|yl|2000@yli|伊林|YLB|yilin|yl|2001@yli|彝良|ALW|yiliang|yl|2002@yli|杨林|YLM|yanglin|yl|2003@ylp|余粮堡|YLD|yuliangpu|ylp|2004@ylq|杨柳青|YQP|yangliuqing|ylq|2005@ylt|月亮田|YUM|yueliangtian|ylt|2006@yma|义马|YMF|yima|ym|2007@ymb|阳明堡|YVV|yangmingbu|ymb|2008@yme|玉门|YXJ|yumen|ym|2009@yme|云梦|YMN|yunmeng|ym|2010@ymo|元谋|YMM|yuanmou|ym|2011@yms|一面山|YST|yimianshan|yms|2012@yna|沂南|YNK|yinan|yn|2013@yna|宜耐|YVM|yinai|yn|2014@ynd|伊宁东|YNR|yiningdong|ynd|2015@yps|营盘水|YZJ|yingpanshui|yps|2016@ypu|羊堡|ABM|yangpu|yp|2017@yqb|阳泉北|YPP|yangquanbei|yqb|2018@yqi|乐清|UPH|yueqing|yq|2019@yqi|焉耆|YSR|yanqi|yq|2020@yqi|源迁|AQK|yuanqian|yq|2021@yqt|姚千户屯|YQT|yaoqianhutun|yqht|2022@yqu|阳曲|YQV|yangqu|yq|2023@ysg|榆树沟|YGP|yushugou|ysg|2024@ysh|月山|YBF|yueshan|ys|2025@ysh|偃师|YSF|yanshi|ys|2026@ysh|颍上|YVH|yingshang|ys|2027@ysh|沂水|YUK|yishui|ys|2028@ysh|榆社|YSV|yushe|ys|2029@ysh|玉石|YSJ|yushi|ys|2030@ysh|玉舍|AUM|yushe|ys|2031@ysh|窑上|ASP|yaoshang|ys|2032@ysh|元氏|YSP|yuanshi|ys|2033@ysl|杨树岭|YAD|yangshuling|ysl|2034@ysp|野三坡|AIP|yesanpo|ysp|2035@yst|榆树屯|YSX|yushutun|yst|2036@yst|榆树台|YUT|yushutai|yst|2037@ysz|鹰手营子|YIP|yingshouyingzi|ysyz|2038@yta|源潭|YTQ|yuantan|yt|2039@ytp|牙屯堡|YTZ|yatunpu|ytp|2040@yts|烟筒山|YSL|yantongshan|yts|2041@ytt|烟筒屯|YUX|yantongtun|ytt|2042@yws|羊尾哨|YWM|yangweishao|yws|2043@yxi|越西|YHW|yuexi|yx|2044@yxi|阳西|WMQ|yangxi|yx|2045@yxi|永修|ACG|yongxiu|yx|2046@yxi|攸县|YOG|youxian|yx|2047@yxx|玉溪西|YXM|yuxixi|yxx|2048@yya|弋阳|YIG|yiyang|yy|2049@yya|余姚|YYH|yuyao|yy|2050@yya|酉阳|AFW|youyang|yy|2051@yyd|岳阳东|YIQ|yueyangdong|yyd|2052@yyi|阳邑|ARP|yangyi|yy|2053@yyu|鸭园|YYL|yayuan|yy|2054@yyz|鸳鸯镇|YYJ|yuanyangzhen|yyz|2055@yzb|燕子砭|YZY|yanzibian|yzb|2056@yzh|宜州|YSZ|yizhou|yz|2057@yzh|仪征|UZH|yizheng|yz|2058@yzh|兖州|YZK|yanzhou|yz|2059@yzi|迤资|YQM|yizi|yz|2060@yzw|羊者窝|AEM|yangzhewo|yzw|2061@yzz|杨杖子|YZD|yangzhangzi|yzz|2062@zan|镇安|ZEY|zhenan|za|2063@zan|治安|ZAD|zhian|za|2064@zba|招柏|ZBP|zhaobai|zb|2065@zbw|张百湾|ZUP|zhangbaiwan|zbw|2066@zcc|中川机场|ZJJ|zhongchuanjichang|zcjc|2067@zch|枝城|ZCN|zhicheng|zc|2068@zch|子长|ZHY|zichang|zc|2069@zch|诸城|ZQK|zhucheng|zc|2070@zch|邹城|ZIK|zoucheng|zc|2071@zch|赵城|ZCV|zhaocheng|zc|2072@zda|章党|ZHT|zhangdang|zd|2073@zdi|正定|ZDP|zhengding|zd|2074@zdo|肇东|ZDB|zhaodong|zd|2075@zfp|照福铺|ZFM|zhaofupu|zfp|2076@zgt|章古台|ZGD|zhanggutai|zgt|2077@zgu|赵光|ZGB|zhaoguang|zg|2078@zhe|中和|ZHX|zhonghe|zh|2079@zhm|中华门|VNH|zhonghuamen|zhm|2080@zjb|枝江北|ZIN|zhijiangbei|zjb|2081@zjc|钟家村|ZJY|zhongjiacun|zjc|2082@zjg|朱家沟|ZUB|zhujiagou|zjg|2083@zjg|紫荆关|ZYP|zijingguan|zjg|2084@zji|周家|ZOB|zhoujia|zj|2085@zji|诸暨|ZDH|zhuji|zj|2086@zjn|镇江南|ZEH|zhenjiangnan|zjn|2087@zjt|周家屯|ZOD|zhoujiatun|zjt|2088@zjw|褚家湾|CWJ|zhujiawan|zjw|2089@zjx|湛江西|ZWQ|zhanjiangxi|zjx|2090@zjy|朱家窑|ZUJ|zhujiayao|zjy|2091@zjz|曾家坪子|ZBW|zengjiapingzi|zjpz|2092@zla|张兰|ZLV|zhanglan|zl|2093@zla|镇赉|ZLT|zhenlai|zl|2094@zli|枣林|ZIV|zaolin|zl|2095@zlt|扎鲁特|ZLD|zhalute|zlt|2096@zlx|扎赉诺尔西|ZXX|zhalainuoerxi|zlnex|2097@zmt|樟木头|ZOQ|zhangmutou|zmt|2098@zmu|中牟|ZGF|zhongmu|zm|2099@znd|中宁东|ZDJ|zhongningdong|znd|2100@zni|中宁|VNJ|zhongning|zn|2101@znn|中宁南|ZNJ|zhongningnan|znn|2102@zpi|镇平|ZPF|zhenping|zp|2103@zpi|漳平|ZPS|zhangping|zp|2104@zpu|泽普|ZPR|zepu|zp|2105@zqi|枣强|ZVP|zaoqiang|zq|2106@zqi|张桥|ZQY|zhangqiao|zq|2107@zqi|章丘|ZTK|zhangqiu|zq|2108@zrh|朱日和|ZRC|zhurihe|zrh|2109@zrl|泽润里|ZLM|zerunli|zrl|2110@zsb|中山北|ZGQ|zhongshanbei|zsb|2111@zsd|樟树东|ZOG|zhangshudong|zsd|2112@zsh|柞水|ZSY|zhashui|zs|2113@zsh|中山|ZSQ|zhongshan|zs|2114@zsh|樟树|ZSG|zhangshu|zs|2115@zsh|珠斯花|ZHD|zhusihua|zsh|2116@zsh|钟山|ZSZ|zhongshan|zs|2117@zwo|珠窝|ZOP|zhuwo|zw|2118@zwt|张维屯|ZWB|zhangweitun|zwt|2119@zwu|彰武|ZWD|zhangwu|zw|2120@zxi|钟祥|ZTN|zhongxiang|zx|2121@zxi|资溪|ZXS|zixi|zx|2122@zxi|棕溪|ZOY|zongxi|zx|2123@zxi|镇西|ZVT|zhenxi|zx|2124@zxi|张辛|ZIP|zhangxin|zx|2125@zxq|正镶白旗|ZXC|zhengxiangbaiqi|zxbq|2126@zya|紫阳|ZVY|ziyang|zy|2127@zya|枣阳|ZYN|zaoyang|zy|2128@zyb|竹园坝|ZAW|zhuyuanba|zyb|2129@zye|张掖|ZYJ|zhangye|zy|2130@zyu|镇远|ZUW|zhenyuan|zy|2131@zzd|漳州东|GOS|zhangzhoudong|zzd|2132@zzh|漳州|ZUS|zhangzhou|zz|2133@zzh|子洲|ZZY|zizhou|zz|2134@zzh|涿州|ZXP|zhuozhou|zz|2135@zzh|壮志|ZUX|zhuangzhi|zz|2136@zzh|中寨|ZZM|zhongzhai|zz|2137@zzi|咋子|ZAL|zhazi|zz|2138@zzs|卓资山|ZZC|zhuozishan|zzs|2139@zzx|株洲西|ZAQ|zhuzhouxi|zzx|2140@zzx|郑州西|XPF|zhengzhouxi|zzx|2141@abq|阿巴嘎旗|AQC|abagaqi|abgq|2142@acb|阿城北|ABB|achengbei|acb|2143@aeb|阿尔山北|ARX|aershanbei|aesb|2144@ajd|安江东|ADA|anjiangdong|ajd|2145@aji|安吉|AJU|anji|aj|2146@aks|阿克塞|AKJ|akesai|aks|2147@alt|阿勒泰|AUR|aletai|alt|2148@alx|安陆西|AXN|anluxi|alx|2149@are|安仁|ARG|anren|ar|2150@asx|安顺西|ASE|anshunxi|asx|2151@atx|安图西|AXL|antuxi|atx|2152@atx|安亭西|AXU|antingxi|atx|2153@ayd|安阳东|ADF|anyangdong|ayd|2154@bba|博白|BBZ|bobai|bb|2155@bbu|八步|BBE|babu|bb|2156@bch|栟茶|FWH|bencha|bc|2157@bdc|八达岭长城|VLP|badalingchangcheng|bdlcc|2158@bdd|保定东|BMP|baodingdong|bdd|2159@bel|博尔塔拉|BER|boertala|betl|2160@bfs|八方山|FGQ|bafangshan|bfs|2161@bgo|白沟|FEP|baigou|bg|2162@bha|滨海|YKP|binhai|bh|2163@bhb|滨海北|FCP|binhaibei|bhb|2164@bhg|滨海港|BGU|binhaigang|bhg|2165@bhx|滨海西|FHP|binhaixi|bhx|2166@bji|毕节|BOE|bijie|bj|2167@bjn|宝鸡南|BBY|baojinan|bjn|2168@bjx|北京大兴|IPP|beijingdaxing|bjdx|2169@bjz|北井子|BRT|beijingzi|bjz|2170@blz|八里甸子|BLT|balidianzi|bldz|2171@bmj|白马井|BFQ|baimajing|bmj|2172@bpi|北票|BPT|beipiao|bp|2173@bqi|宝清|BUB|baoqing|bq|2174@bsh|璧山|FZW|bishan|bs|2175@bsp|白沙铺|BSN|baishapu|bsp|2176@bsx|白水县|BGY|baishuixian|bsx|2177@bta|板塘|NGQ|bantang|bt|2178@bwd|白文东|BCV|baiwendong|bwd|2179@bxb|宾西北|BBB|binxibei|bxb|2180@bxc|本溪新城|BVT|benxixincheng|bxxc|2181@bxj|步行街|BWW|buxingjie|bxj|2182@bya|宾阳|UKZ|binyang|by|2183@byb|白云北|BVE|baiyunbei|byb|2184@byb|白云机场北|BBA|baiyunjichangbei|byjcb|2185@byd|白洋淀|FWP|baiyangdian|byd|2186@byi|宝应|BAU|baoying|by|2187@byi|百宜|FHW|baiyi|by|2188@byn|白音华南|BOD|baiyinhuanan|byhn|2189@bzb|霸州北|VPP|bazhoubei|bzb|2190@bzd|彬州东|BFY|binzhoudong|bzd|2191@bzd|巴中东|BDE|bazhongdong|bzd|2192@bzh|彬州|BXY|binzhou|bz|2193@bzh|滨州|BIK|binzhou|bz|2194@bzh|宾州|BZB|binzhou|bz|2195@bzn|亳州南|BNU|bozhounan|bzn|2196@bzx|霸州西|FOP|bazhouxi|bzx|2197@can|长安|CAA|changan|ca|2198@cax|长安西|CXA|changanxi|cax|2199@cch|澄城|CUY|chengcheng|cc|2200@cdb|承德县北|IYP|chengdexianbei|cdxb|2201@cdd|成  都东|WEI|chengdudong|cdd|2202@cdn|承德南|IVP|chengdenan|cdn|2203@cfd|曹妃甸东|POP|caofeidiandong|cfdd|2204@cfg|曹妃甸港|PGP|caofeidiangang|cfdg|2205@cgb|城固北|CBY|chenggubei|cgb|2206@cgb|长葛北|CGF|changgebei|cgb|2207@cgh|查干湖|VAT|chaganhu|cgh|2208@chd|巢湖东|GUH|chaohudong|chd|2209@cji|从江|KNW|congjiang|cj|2210@cjy|蔡家崖|EBV|caijiaya|cjy|2211@cka|茶卡|CVO|chaka|ck|2212@cld|长乐东|CIS|changledong|cld|2213@cle|长乐|CAS|changle|cl|2214@clh|长临河|FVH|changlinhe|clh|2215@cli|长流|CLA|changliu|cl|2216@cln|长乐南|CVS|changlenan|cln|2217@cln|茶陵南|CNG|chalingnan|cln|2218@cni|长宁|CNE|changning|cn|2219@cpd|常平东|FQQ|changpingdong|cpd|2220@cpn|常平南|FPQ|changpingnan|cpn|2221@cqi|长箐|CQE|changqing|cq|2222@cqq|长庆桥|CQJ|changqingqiao|cqq|2223@cqx|重  庆西|WWI|chongqingxi|cqx|2224@csb|长寿北|COW|changshoubei|csb|2225@csh|长寿湖|CSE|changshouhu|csh|2226@csh|常熟|CAU|changshu|cs|2227@csh|潮汕|CBQ|chaoshan|cs|2228@csh|常山|CSU|changshan|cs|2229@csx|长沙西|RXQ|changshaxi|csx|2230@cti|朝天|CTE|chaotian|ct|2231@ctn|长汀南|CNS|changtingnan|ctn|2232@cwu|长武|CWY|changwu|cw|2233@cxi|长兴|CBH|changxing|cx|2234@cxi|苍溪|CXE|cangxi|cx|2235@cxi|楚雄|CUM|chuxiong|cx|2236@cxi|城西|CIA|chengxi|cx|2237@cya|长阳|CYN|changyang|cy|2238@cya|潮阳|CNQ|chaoyang|cy|2239@cyh|朝阳湖|CYE|chaoyanghu|cyh|2240@cyi|昌邑|CRK|changyi|cy|2241@czd|长治东|CUF|changzhidong|czd|2242@czh|崇州|CZE|chongzhou|cz|2243@czn|长治南|CAF|changzhinan|czn|2244@czt|城子坦|CWT|chengzitan|czt|2245@dad|东安东|DCZ|dongandong|dad|2246@dba|德保|RBZ|debao|db|2247@dch|都昌|DCG|duchang|dc|2248@dch|东岔|DCJ|dongcha|dc|2249@dcn|东城南|IYQ|dongchengnan|dcn|2250@ddh|东戴河|RDD|dongdaihe|ddh|2251@ddx|丹东西|RWT|dandongxi|ddx|2252@deh|东二道河|DRB|dongerdaohe|dedh|2253@dfa|大方|DFE|dafang|df|2254@dfe|大丰|KRQ|dafeng|df|2255@dfn|大方南|DNE|dafangnan|dfn|2256@dgb|东港北|RGT|donggangbei|dgb|2257@dgg|东莞港|DGA|dongguangang|dgg|2258@dgn|大港南|DNU|dagangnan|dgn|2259@dgs|大孤山|RMT|dagushan|dgs|2260@dgu|东莞|RTQ|dongguan|dg|2261@dgx|东莞西|WGQ|dongguanxi|dgx|2262@dhb|东花园北|QBP|donghuayuanbei|dhyb|2263@dhd|鼎湖东|UWQ|dinghudong|dhd|2264@dhs|鼎湖山|NVQ|dinghushan|dhs|2265@dji|道滘|RRQ|daojiao|dj|2266@dji|垫江|DJE|dianjiang|dj|2267@dji|洞井|FWQ|dongjing|dj|2268@djk|丹江口|DON|danjiangkou|djk|2269@djk|董家口|DTK|dongjiakou|djk|2270@dju|大苴|DIM|daju|dj|2271@dko|洞口|DKA|dongkou|dk|2272@dlh|达连河|DCB|dalianhe|dlh|2273@dli|大荔|DNY|dali|dl|2274@dlz|大朗镇|KOQ|dalangzhen|dlz|2275@dml|得莫利|DTB|demoli|dml|2276@dqg|大青沟|DSD|daqinggou|dqg|2277@dqi|德清|DRH|deqing|dq|2278@dsd|东胜东|RSC|dongshengdong|dsd|2279@dsn|砀山南|PRH|dangshannan|dsn|2280@dsn|大石头南|DAL|dashitounan|dstn|2281@dtd|当涂东|OWH|dangtudong|dtd|2282@dtn|大同南|DMV|datongnan|dtn|2283@dtx|大通西|DTO|datongxi|dtx|2284@dwa|大旺|WWQ|dawang|dw|2285@dxb|定西北|DNJ|dingxibei|dxb|2286@dxc|大兴机场|IWP|daxingjichang|dxjc|2287@dxd|德兴东|DDG|dexingdong|dxd|2288@dxi|德兴|DWG|dexing|dx|2289@dxs|丹霞山|IRQ|danxiashan|dxs|2290@dya|大阳|RET|dayang|dy|2291@dyb|大冶北|DBN|dayebei|dyb|2292@dyd|都匀东|KJW|duyundong|dyd|2293@dyi|大邑|DEE|dayi|dy|2294@dyn|东营南|DOK|dongyingnan|dyn|2295@dyu|大余|DYG|dayu|dy|2296@dzd|邓州东|DDF|dengzhoudong|dzd|2297@dzd|定州东|DOP|dingzhoudong|dzd|2298@dzh|端州|WZQ|duanzhou|dz|2299@dzn|大足南|FQW|dazunan|dzn|2300@emi|额敏|EMR|emin|em|2301@ems|峨眉山|IXW|emeishan|ems|2302@epg|阿房宫|EGY|epanggong|epg|2303@ezd|鄂州东|EFN|ezhoudong|ezd|2304@fcb|防城港北|FBZ|fangchenggangbei|fcgb|2305@fcd|丰城东|FIG|fengchengdong|fcd|2306@fcd|凤城东|FDT|fengchengdong|fcd|2307@fch|富川|FDZ|fuchuan|fc|2308@fch|方城|FNF|fangcheng|fc|2309@fcx|繁昌西|PUH|fanchangxi|fcx|2310@fdu|丰都|FUW|fengdu|fd|2311@fgn|扶沟南|FGF|fugounan|fgn|2312@fhx|福海西|FHA|fuhaixi|fhx|2313@flb|涪陵北|FEW|fulingbei|flb|2314@fli|枫林|FLN|fenglin|fl|2315@fnd|阜宁东|FDU|funingdong|fnd|2316@fni|富宁|FNM|funing|fn|2317@fnn|阜宁南|FNU|funingnan|fnn|2318@fnn|阜宁南|FNU|funingnan|fnn|2319@fpi|佛坪|FUY|foping|fp|2320@fqi|法启|FQE|faqi|fq|2321@frn|芙蓉南|KCQ|furongnan|frn|2322@fsd|丰顺东|FDA|fengshundong|fsd|2323@fsh|复盛|FAW|fusheng|fs|2324@fso|抚松|FSL|fusong|fs|2325@fsx|佛山西|FOQ|foshanxi|fsx|2326@fsz|福山镇|FZQ|fushanzhen|fsz|2327@fti|福田|NZQ|futian|ft|2328@ftn|凤台南|FTU|fengtainan|ftn|2329@fxb|费县北|FBK|feixianbei|fxb|2330@fxi|阜新|FOT|fuxin|fx|2331@fya|富阳|FYU|fuyang|fy|2332@fyb|富源北|FBM|fuyuanbei|fyb|2333@fyu|抚远|FYB|fuyuan|fy|2334@fyu|富蕴|FYR|fuyun|fyu|2335@fyx|阜阳西|FXU|fuyangxi|fyx|2336@fzd|抚州东|FDG|fuzhoudong|fzd|2337@fzh|抚州|FZG|fuzhou|fz|2338@fzh|方正|FNB|fangzheng|fz|2339@fzn|福州 南|FXS|fuzhounan|fzn|2340@gad|固安东|GQP|guandong|gad|2341@gan|高安|GCG|gaoan|ga|2342@gan|广安南|VUW|guangannan|gan|2343@gan|贵安|GAE|guian|ga|2344@gbd|高碑店东|GMP|gaobeidiandong|gbdd|2345@gbk|古北口|GKP|gubeikou|gbk|2346@gcb|谷城北|GBN|guchengbei|gcb|2347@gcd|古城东|GUU|guchengdong|gcd|2348@gch|恭城|GCZ|gongcheng|gc|2349@gcn|藁城南|GUP|gaochengnan|gcn|2350@gdb|贵定北|FMW|guidingbei|gdb|2351@gdn|广德南|GNU|guangdenan|gdn|2352@gdn|葛店南|GNN|gediannan|gdn|2353@gdx|贵定县|KIW|guidingxian|gdx|2354@ghb|广汉北|GVW|guanghanbei|ghb|2355@ghu|高花|HGD|gaohua|gh|2356@gju|革居|GEM|geju|gj|2357@gle|高楞|GLB|gaoleng|gl|2358@gli|关岭|GLE|guanling|gl|2359@glx|桂林西|GEZ|guilinxi|glx|2360@gmb|高密北|GVK|gaomibei|gmb|2361@gmc|光明城|IMQ|guangmingcheng|gmc|2362@gna|灌南|GIU|guannan|gn|2363@gni|广宁|FBQ|guangning|gn|2364@gns|广宁寺|GQT|guangningsi|gns|2365@gnx|广南县|GXM|guangnanxian|gnx|2366@gpd|高平东|GVF|gaopingdong|gpd|2367@gpi|桂平|GAZ|guiping|gp|2368@gpi|高坪|GGN|gaoping|gp|2369@gpi|广平|GPP|guangping|gp|2370@gpz|弓棚子|GPT|gongpengzi|gpz|2371@gsd|赶水东|GDE|ganshuidong|gsd|2372@gsh|光山|GUN|guangshan|gs|2373@gsh|谷山|FFQ|gushan|gs|2374@gsl|观沙岭|FKQ|guanshaling|gsl|2375@gtb|古田北|GBS|gutianbei|gtb|2376@gtb|广通北|GPM|guangtongbei|gtb|2377@gtn|高台南|GAJ|gaotainan|gtn|2378@gtz|古田会址|STS|gutianhuizhi|gthz|2379@gxb|赣县北|GIG|ganxianbei|gxb|2380@gyb|高邮北|GEU|gaoyoubei|gyb|2381@gyb|贵  阳北|WNI|guiyangbei|gyb|2382@gyb|贵阳北|KQW|guiyangbei|gyb|2383@gyc|观音机场|GCU|guanyinjichang|gyjc|2384@gyd|贵阳东|KEW|guiyangdong|gyd|2385@gyo|高邮|GAU|gaoyou|gy|2386@gyu|灌云|GOU|guanyun|gy|2387@gyu|赣榆|GYU|ganyu|gy|2388@gyx|高邑西|GNP|gaoyixi|gyx|2389@gzx|赣州西|GOG|ganzhouxi|gzx|2390@had|淮安东|HAU|huaiandong|had|2391@had|淮安东|HAU|huaiandong|had|2392@han|惠安|HNS|huian|ha|2393@han|怀安|QAP|huaian|ha|2394@hap|惠安堡|KBJ|huianpu|hap|2395@hbb|淮北北|PLH|huaibeibei|hbb|2396@hbd|鹤壁东|HFF|hebidong|hbd|2397@hbs|花博山|KBT|huaboshan|hbs|2398@hcg|寒葱沟|HKB|hanconggou|hcg|2399@hch|霍城|SER|huocheng|hc|2400@hch|珲春|HUL|hunchun|hc|2401@hcj|花城街|HCA|huachengjie|hcj|2402@hdc|河东机场|HFJ|hedongjichang|hdjc|2403@hdd|横道河子东|KUX|hengdaohezidong|hdhzd|2404@hdd|邯郸东|HPP|handandong|hdd|2405@hdo|海东|LVO|haidong|hd|2406@hdo|惠东|KDQ|huidong|hd|2407@hdp|哈达铺|HDJ|hadapu|hdp|2408@hdu|花都|HAA|huadu|hd|2409@hdx|洪洞西|HTV|hongtongxi|hdx|2410@hdx|海东西|HDO|haidongxi|hdx|2411@heb|哈尔滨北|HTB|haerbinbei|hebb|2412@hfc|合肥北城|COH|hefeibeicheng|hfbc|2413@hfn|合肥南|ENH|hefeinan|hfn|2414@hga|黄冈|KGN|huanggang|hg|2415@hgd|黄冈东|KAN|huanggangdong|hgd|2416@hgd|横沟桥东|HNN|henggouqiaodong|hgqd|2417@hgx|黄冈西|KXN|huanggangxi|hgx|2418@hhe|洪河|HPB|honghe|hh|2419@hhn|怀化南|KAQ|huaihuanan|hhn|2420@hhq|黄河景区|HCF|huanghejingqu|hhjq|2421@hhu|惠环|KHQ|huihuan|hh|2422@hhu|花湖|KHN|huahu|hh|2423@hhu|后湖|IHN|houhu|hh|2424@hji|怀集|FAQ|huaiji|hj|2425@hji|厚街|HJA|houjie|hj|2426@hkb|河口北|HBM|hekoubei|hkb|2427@hkl|宏克力|OKB|hongkeli|hkl|2428@hla|怀来|VQP|huailai|hl|2429@hlb|海林北|KBX|hailinbei|hlb|2430@hli|黄流|KLQ|huangliu|hl|2431@hln|黄陵南|VLY|huanglingnan|hln|2432@hmb|虎门北|HBA|humenbei|hmb|2433@hmd|虎门东|HDA|humendong|hmd|2434@hme|鲘门|KMQ|houmen|hm|2435@hme|海门|HMU|haimen|hm|2436@hme|虎门|IUQ|humen|hm|2437@hme|洪梅|HMA|hongmei|hm|2438@hmx|侯马西|HPV|houmaxi|hmx|2439@hna|衡南|HNG|hengnan|hn|2440@hnd|淮南东|HOH|huainandong|hnd|2441@hnn|淮南南|HNU|huainannan|hnn|2442@hpu|合浦|HVZ|hepu|hp|2443@hqb|横琴北|HOA|hengqinbei|hqb|2444@hqi|霍邱|FBH|huoqiu|hq|2445@hqi|横琴|HQA|hengqin|hq|2446@hrd|怀仁东|HFV|huairendong|hrd|2447@hrd|华容东|HPN|huarongdong|hrd|2448@hrn|华容南|KRN|huarongnan|hrn|2449@hsb|红寺堡北|HEJ|hongsibaobei|hsbb|2450@hsb|黑山北|HQT|heishanbei|hsb|2451@hsb|黄山北|NYH|huangshanbei|hsb|2452@hsb|黄石北|KSN|huangshibei|hsb|2453@hsb|衡水北|IHP|hengshuibei|hsb|2454@hsd|贺胜桥东|HLN|heshengqiaodong|hsqd|2455@hsh|和硕|VUR|heshuo|hs|2456@hsn|含山南|HSU|hanshannan|hsn|2457@hsn|含山南|HSU|hanshannan|hsn|2458@hsn|花山南|KNN|huashannan|hsn|2459@hss|黑山寺|HVP|heishansi|hss|2460@hsz|花山镇|HZA|huashanzhen|hsz|2461@hta|荷塘|KXQ|hetang|ht|2462@htb|黄桶北|HBE|huangtongbei|htb|2463@htd|黄土店|HKP|huangtudian|htd|2464@htg|花土沟|HTO|huatugou|htg|2465@hxi|环县|KXJ|huanxian|hx|2466@hyb|合阳北|HTY|heyangbei|hyb|2467@hyb|海阳北|HEK|haiyangbei|hyb|2468@hyi|槐荫|IYN|huaiyin|hy|2469@hyi|鄠邑|KXY|huyi|hyi|2470@hyk|花园口|HYT|huayuankou|hyk|2471@hyn|淮阳南|HVF|huaiyangnan|hyn|2472@hzd|霍州东|HWV|huozhoudong|hzd|2473@hzn|惠州南|KNQ|huizhounan|hzn|2474@jan|建安|JUL|jianan|ja|2475@jax|吉安西|JIG|jianxi|jax|2476@jcd|晋城东|JGF|jinchengdong|jcd|2477@jch|泾川|JAJ|jingchuan|jc|2478@jch|碱厂|JUT|jianchang|jc|2479@jdb|景德镇北|JDG|jingdezhenbei|jdzb|2480@jde|旌德|NSH|jingde|jd|2481@jde|建德|JDU|jiande|jd|2482@jfe|尖峰|PFQ|jianfeng|jf|2483@jha|近海|JHD|jinhai|jh|2484@jhx|蛟河西|JOL|jiaohexi|jhx|2485@jlb|军粮城北|JMP|junliangchengbei|jlcb|2486@jle|将乐|JLS|jiangle|jl|2487@jlh|贾鲁河|JLF|jialuhe|jlh|2488@jls|九郎山|KJQ|jiulangshan|jls|2489@jmb|即墨北|JVK|jimobei|jmb|2490@jmg|剑门关|JME|jianmenguan|jmg|2491@jmx|佳木斯西|JUB|jiamusixi|jmsx|2492@jnb|建宁县北|JCS|jianningxianbei|jnxb|2493@jnb|莒南北|VNK|junanbei|jnb|2494@jnd|济南东|MDK|jinandong|jnd|2495@jni|江宁|JJH|jiangning|jn|2496@jnx|江宁西|OKH|jiangningxi|jnx|2497@jod|建瓯东|JZS|jianoudong|jod|2498@jox|建瓯西|JUS|jianouxi|jox|2499@jpi|建平|JAD|jianping|jp|2500@jqi|建桥|JQA|jianqiao|jq|2501@jqn|酒泉南|JNJ|jiuquannan|jqn|2502@jrx|句容西|JWH|jurongxi|jrx|2503@jsh|建水|JSM|jianshui|js|2504@jsh|尖山|JPQ|jianshan|js|2505@jsn|界首南|JKU|jieshounan|jsn|2506@jss|界首市|JUN|jieshoushi|jss|2507@jsx|吉水西|JSG|jishuixi|jsx|2508@jxb|绩溪北|NRH|jixibei|jxb|2509@jxd|介休东|JDV|jiexiudong|jxd|2510@jxi|泾县|LOH|jingxian|jx|2511@jxi|靖西|JMZ|jingxi|jx|2512@jxi|郏县|JXF|jiaxian|jx|2513@jxn|进贤南|JXG|jinxiannan|jxn|2514@jya|揭阳|JYA|jieyang|jy|2515@jyb|江油北|JBE|jiangyoubei|jyb|2516@jyc|揭阳机场|JUA|jieyangjichang|jyjc|2517@jyn|简阳南|JOW|jianyangnan|jyn|2518@jyn|嘉峪关南|JBJ|jiayuguannan|jygn|2519@jyt|金银潭|JTN|jinyintan|jyt|2520@jyu|靖宇|JYL|jingyu|jy|2521@jyw|金月湾|PYQ|jinyuewan|jyw|2522@jyx|缙云西|PYH|jinyunxi|jyx|2523@jzh|晋中|JZV|jinzhong|jz|2524@jzh|景州|JEP|jingzhou|jz|2525@jzx|焦作西|JIF|jiaozuoxi|jzx|2526@key|库尔木依|VPR|kuermuyi|kemy|2527@kfb|开封北|KBF|kaifengbei|kfb|2528@kfs|开福寺|FLQ|kaifusi|kfs|2529@khu|开化|KHU|kaihua|kh|2530@kln|凯里南|QKW|kailinan|kln|2531@klu|库伦|KLD|kulun|kl|2532@kmn|昆明南|KOM|kunmingnan|kmn|2533@kta|葵潭|KTQ|kuitan|kt|2534@kya|开阳|KVW|kaiyang|ky|2535@kyu|昆玉|ESR|kunyu|ky|2536@kzu|喀左|KZT|kazuo|kz|2537@lad|隆安东|IDZ|longandong|lad|2538@lba|冷坝|LBE|lengba|lb|2539@lbb|来宾北|UCZ|laibinbei|lbb|2540@lbi|灵璧|GMH|lingbi|lb|2541@lbu|寮步|LTQ|liaobu|lb|2542@lby|绿博园|LCF|lvboyuan|lby|2543@lcb|隆昌北|NWW|longchangbei|lcb|2544@lcd|乐昌东|ILQ|lechangdong|lcd|2545@lch|临城|UUP|lincheng|lc|2546@lch|罗城|VCZ|luocheng|lc|2547@lch|陵城|LGK|lingcheng|lc|2548@lcz|老城镇|ACQ|laochengzhen|lcz|2549@ldb|龙洞堡|FVW|longdongbao|ldb|2550@ldn|娄底南|UOQ|loudinan|ldn|2551@ldo|乐东|UQQ|ledong|ld|2552@ldy|离堆公园|INW|liduigongyuan|ldgy|2553@lfa|娄烦|USV|loufan|lf|2554@lfe|陆丰|LLQ|lufeng|lf|2555@lfe|来凤|LFA|laifeng|lf|2556@lfe|龙丰|KFQ|longfeng|lf|2557@lfn|禄丰南|LQM|lufengnan|lfn|2558@lfx|临汾西|LXV|linfenxi|lfx|2559@lgn|临高南|KGQ|lingaonan|lgn|2560@lgu|麓谷|BNQ|lugu|lg|2561@lhe|滦河|UDP|luanhe|lh|2562@lhn|珞璜南|LNE|luohuangnan|lhn|2563@lhu|隆回|LHA|longhui|lh|2564@lhx|漯河西|LBN|luohexi|lhx|2565@ljd|罗江东|IKW|luojiangdong|ljd|2566@lji|柳江|UQZ|liujiang|lj|2567@ljn|利津南|LNK|lijinnan|ljn|2568@ljx|庐江西|LUU|lujiangxi|ljx|2569@ljz|厉家寨|UPK|lijiazhai|ljz|2570@lkn|兰考南|LUF|lankaonan|lkn|2571@lks|龙口市|UKK|longkoushi|lks|2572@llb|兰陵北|COK|lanlingbei|llb|2573@llb|龙里北|KFW|longlibei|llb|2574@llb|沥林北|KBQ|lilinbei|llb|2575@lld|醴陵东|UKQ|lilingdong|lld|2576@lmi|芦庙|LMU|lumiao|lm|2577@lna|陇南|INJ|longnan|ln|2578@lny|辽宁朝阳|VET|liaoningchaoyang|lncy|2579@lpd|六盘水东|LDE|liupanshuidong|lpsd|2580@lpn|梁平南|LPE|liangpingnan|lpn|2581@lqi|龙桥|LQU|longqiao|lq|2582@lqn|礼泉南|UNY|liquannan|lqn|2583@lqs|龙泉市|LVU|longquanshi|lqs|2584@lqu|礼泉|LGY|liquan|lq|2585@lqu|临泉|LOU|linquan|lq|2586@lsb|龙山北|LBA|longshanbei|lsb|2587@lsd|灵石东|UDV|lingshidong|lsd|2588@lsh|乐山|IVW|leshan|ls|2589@lsh|涟水|LIU|lianshui|ls|2590@lsh|龙市|LAG|longshi|ls|2591@lsh|溧水|LDH|lishui|ls|2592@lsn|娄山关南|LSE|loushanguannan|lsgn|2593@lsx|岚山西|UWK|lanshanxi|lsx|2594@lto|乐同|LEA|letong|lt|2595@ltz|龙塘镇|LVB|longtangzhen|ltz|2596@lwb|灵武北|UWJ|lingwubei|lwb|2597@lwj|洛湾三江|KRW|luowansanjiang|lwsj|2598@lxi|莱西|LBK|laixi|lx|2599@lxi|岚县|UXV|lanxian|lx|2600@lxn|郎溪南|LXU|langxinan|lxn|2601@lya|溧阳|LEH|liyang|ly|2602@lyb|临沂北|UMK|linyibei|lyb|2603@lyb|临  沂北|III|linyibei|lyb|2604@lyi|临邑|LUK|linyi|ly|2605@lyn|柳园南|LNR|liuyuannan|lyn|2606@lyn|龙游南|LYU|longyounan|lyn|2607@lzb|鹿寨北|LSZ|luzhaibei|lzb|2608@lzb|临淄北|UEK|linzibei|lzb|2609@lzh|阆中|LZE|langzhong|lz|2610@lzn|临泽南|LDJ|linzenan|lzn|2611@lzn|六枝南|LOE|liuzhinan|lzn|2612@mad|马鞍山东|OMH|maanshandong|masd|2613@mch|毛陈|MHN|maochen|mc|2614@mex|帽儿山西|MUB|mershanxi|mesx|2615@mgd|明港东|MDN|minggangdong|mgd|2616@mhn|民和南|MNO|minhenan|mhn|2617@mji|闵集|MJN|minji|mj|2618@mla|米兰|MIR|milan|ml|2619@mla|马兰|MLR|malan|ml|2620@mle|民乐|MBJ|minle|ml|2621@mle|弥勒|MLM|mile|ml|2622@mns|玛纳斯|MSR|manasi|mns|2623@mpi|牟平|MBK|muping|mp|2624@mqb|闽清北|MBS|minqingbei|mqb|2625@mqb|民权北|MIF|minquanbei|mqb|2626@msd|眉山东|IUW|meishandong|msd|2627@msh|名山|MSE|mingshan|ms|2628@msh|蒙山|MOK|mengshan|ms|2629@msh|庙山|MSN|miaoshan|ms|2630@mxi|岷县|MXJ|minxian|mx|2631@myu|门源|MYO|menyuan|my|2632@myu|暮云|KIQ|muyun|my|2633@mzb|蒙自北|MBM|mengzibei|mzb|2634@mzh|孟庄|MZF|mengzhuang|mz|2635@mzi|蒙自|MZM|mengzi|mz|2636@mzx|梅州西|MXA|meizhouxi|mzx|2637@nbu|南部|NBE|nanbu|nb|2638@nca|南曹|NEF|nancao|nc|2639@ncb|南充北|NCE|nanchongbei|ncb|2640@nch|南城|NDG|nancheng|nc|2641@nch|牛车河|NHA|niuchehe|nch|2642@nch|宁城|NCD|ningcheng|nc|2643@nch|南 昌|NOG|nanchang|nc|2644@ncx|南昌西|NXG|nanchangxi|ncx|2645@ndn|宁东南|NDJ|ningdongnan|ndn|2646@ndo|宁东|NOJ|ningdong|nd|2647@nfb|南芬北|NUT|nanfenbei|nfb|2648@nfe|南丰|NFG|nanfeng|nf|2649@nhd|南湖东|NDN|nanhudong|nhd|2650@nhl|牛河梁|LKT|niuheliang|nhl|2651@nhu|南华|NAM|nanhua|nh|2652@njb|内江北|NKW|neijiangbei|njb|2653@nji|南江|FIW|nanjiang|nj|2654@njk|南江口|NDQ|nanjiangkou|njk|2655@nlg|奈林皋|NGT|nailingao|nlg|2656@nli|南陵|LLH|nanling|nl|2657@nls|牛栏山|NLP|niulanshan|nls|2658@nmu|尼木|NMO|nimu|nm|2659@nnd|南宁东|NFZ|nanningdong|nnd|2660@nnx|南宁西|NXZ|nanningxi|nnx|2661@npb|南堡北|TLP|nanpubei|npb|2662@nps|南平市|NOS|nanpingshi|nps|2663@nqn|宁强南|NOY|ningqiangnan|nqn|2664@ntx|南通西|NXU|nantongxi|ntx|2665@nxi|泥溪|NIE|nixi|nxi|2666@nxi|宁县|AXJ|ningxian|nx|2667@nxi|南雄|NCQ|nanxiong|nx|2668@nyd|南阳东|NOF|nanyangdong|nyd|2669@nyo|纳雍|NYE|nayong|ny|2670@nyz|南阳寨|NYF|nanyangzhai|nyz|2671@pan|普安|PAN|puan|pa|2672@pax|普安县|PUE|puanxian|pax|2673@pbi|屏边|PBM|pingbian|pb|2674@pbn|平坝南|PBE|pingbanan|pbn|2675@pch|平昌|PCE|pingchang|pc|2676@pdi|普定|PGW|puding|pd|2677@pdu|平度|PNK|pingdu|pd|2678@pdx|平度西|PAK|pingduxi|pdx|2679@pdx|平顶山西|PDF|pingdingshanxi|pdsx|2680@pji|蒲江|PJE|pujiang|pj|2681@pko|皮口|PUT|pikou|pk|2682@plc|盘龙城|PNN|panlongcheng|plc|2683@pls|蓬莱市|POK|penglaishi|pls|2684@pna|屏南|PNS|pingnan|pn|2685@pni|普宁|PEQ|puning|pn|2686@pnn|平南南|PAZ|pingnannan|pnn|2687@pqb|平泉北|PBP|pingquanbei|pqb|2688@psb|彭山北|PPW|pengshanbei|psb|2689@psh|屏山|PSE|pingshan|psh|2690@psh|盘山|PUD|panshan|ps|2691@psh|坪上|PSK|pingshang|ps|2692@pta|平潭|PIS|pingtan|pt|2693@pxb|萍乡北|PBG|pingxiangbei|pxb|2694@pya|濮阳|PYF|puyang|py|2695@pya|鄱阳|PYG|poyang|py|2696@pyc|平遥古城|PDV|pingyaogucheng|pygc|2697@pyd|平原东|PUK|pingyuandong|pyd|2698@pzh|平庄|PAD|pingzhuang|pz|2699@pzh|普者黑|PZM|puzhehei|pzh|2700@pzh|盘州|PAE|panzhou|pz|2701@pzh|彭州|PMW|pengzhou|pz|2702@pzn|攀枝花南|PNE|panzhihuanan|pzhn|2703@pzn|彭州南|PKW|pengzhounan|pzn|2704@qan|秦安|QGJ|qinan|qa|2705@qbd|青白江东|QFW|qingbaijiangdong|qbjd|2706@qch|庆城|QHJ|qingcheng|qc|2707@qch|青川|QCE|qingchuan|qc|2708@qch|清城|QCA|qingcheng|qc|2709@qdb|青岛北|QHK|qingdaobei|qdb|2710@qdb|青  岛北|KAI|qingdaobei|qdb|2711@qdh|千岛湖|QDU|qiandaohu|qdh|2712@qdo|祁东|QMQ|qidong|qd|2713@qdo|启东|QOU|qidong|qd|2714@qdu|青堆|QET|qingdui|qd|2715@qdx|青岛西|QUK|qingdaoxi|qdx|2716@qfe|前锋|QFB|qianfeng|qf|2717@qhb|清河门北|QBD|qinghemenbei|qhmb|2718@qhe|齐河|QIK|qihe|qh|2719@qjb|曲靖北|QBM|qujingbei|qjb|2720@qjd|綦江东|QDE|qijiangdong|qjd|2721@qji|曲江|QIM|qujiang|qj|2722@qla|邛崃|QLE|qionglai|ql|2723@qli|青莲|QEW|qinglian|ql|2724@qqn|齐齐哈尔南|QNB|qiqihaernan|qqhen|2725@qsb|清水北|QEJ|qingshuibei|qsb|2726@qsh|青神|QVW|qingshen|qs|2727@qsh|岐山|QAY|qishan|qs|2728@qsh|庆盛|QSQ|qingsheng|qs|2729@qsx|清水县|QIJ|qingshuixian|qsx|2730@qsx|曲水县|QSO|qushuixian|qsx|2731@qwe|犍为|JWE|qianwei|qwe|2732@qxd|祁县东|QGV|qixiandong|qxd|2733@qxi|乾县|QBY|qianxian|qx|2734@qxi|黔西|QXE|qianxi|qx|2735@qxn|旗下营南|QNC|qixiayingnan|qxyn|2736@qya|庆阳|QOJ|qingyang|qy|2737@qya|祁阳|QWQ|qiyang|qy|2738@qyu|庆元|QYU|qingyuan|qy|2739@qzb|青州市北|QOK|qingzhoushibei|qzsb|2740@qzd|乔庄东|QEP|qiaozhuangdong|qzd|2741@qzi|曲子|QJJ|quzi|qz|2742@qzn|全州南|QNZ|quanzhounan|qzn|2743@qzw|棋子湾|QZQ|qiziwan|qzw|2744@qzx|清镇西|QUE|qingzhenxi|qzx|2745@rbu|仁布|RUO|renbu|rb|2746@rcb|荣昌北|RQW|rongchangbei|rcb|2747@rch|荣成|RCK|rongcheng|rc|2748@rcx|瑞昌西|RXG|ruichangxi|rcx|2749@rdo|如东|RIH|rudong|rd|2750@rgn|如皋南|RNU|rugaonan|rgn|2751@rji|榕江|RVW|rongjiang|rj|2752@rkz|日喀则|RKO|rikaze|rkz|2753@rpi|饶平|RVQ|raoping|rp|2754@rqi|若羌|RQR|ruoqiang|rq|2755@rzx|日照西|KZK|rizhaoxi|rzx|2756@sbe|肃北|SBJ|subei|sb|2757@scd|舒城东|SDU|shuchengdong|scd|2758@sch|遂昌|SCU|suichang|sc|2759@scl|宋城路|SFF|songchenglu|scl|2760@sdh|三道湖|SDL|sandaohu|sdh|2761@sdo|邵东|FIQ|shaodong|sd|2762@sdx|三都县|KKW|sanduxian|sdx|2763@sfa|胜芳|SUP|shengfang|sf|2764@sfb|双峰北|NFQ|shuangfengbei|sfb|2765@she|商河|SOK|shanghe|sh|2766@sho|泗洪|GQH|sihong|sh|2767@shs|双河市|OHR|shuangheshi|shs|2768@shu|四会|AHQ|sihui|sh|2769@sjb|畲江北|SOA|shejiangbei|sjb|2770@sjd|石家庄东|SXP|shijiazhuangdong|sjzd|2771@sjn|三江南|SWZ|sanjiangnan|sjn|2772@sjx|沙井西|SJA|shajingxi|sjx|2773@sjz|三井子|OJT|sanjingzi|sjz|2774@sks|四棵树|SIR|sikeshu|sks|2775@slc|双流机场|IPW|shuangliujichang|sljc|2776@slh|双龙湖|OHB|shuanglonghu|slh|2777@sli|狮岭|SLA|shiling|sl|2778@slx|石林西|SYM|shilinxi|slx|2779@slx|双流西|IQW|shuangliuxi|slx|2780@slz|胜利镇|OLB|shenglizhen|slz|2781@smb|三明北|SHS|sanmingbei|smb|2782@smi|三明|SVS|sanming|sm|2783@smi|嵩明|SVM|songming|sm|2784@sml|树木岭|FMQ|shumuling|sml|2785@smu|神木|HMY|shenmu|sm|2786@sni|睢宁|SNU|suining|sn|2787@snq|苏尼特左旗|ONC|sunitezuoqi|sntzq|2788@spd|山坡东|SBN|shanpodong|spd|2789@sqb|沈丘北|SKF|shenqiubei|sqb|2790@sqd|商丘东|SIF|shangqiudong|sqd|2791@sqi|沈丘|SQN|shenqiu|sq|2792@sqi|宿迁|SQU|suqian|sq|2793@sqi|石桥|SQE|shiqiao|sq|2794@ssb|鄯善北|SMR|shanshanbei|ssb|2795@ssb|狮山北|NSQ|shishanbei|ssb|2796@ssb|三水北|ARQ|sanshuibei|ssb|2797@ssb|松山湖北|KUQ|songshanhubei|sshb|2798@ssh|狮山|KSQ|shishan|ss|2799@ssn|三水南|RNQ|sanshuinan|ssn|2800@ssn|泗水南|ONK|sishuinan|ssn|2801@ssn|韶山南|INQ|shaoshannan|ssn|2802@ssu|三穗|QHW|sansui|ss|2803@sti|石梯|STE|shiti|st|2804@swe|汕尾|OGQ|shanwei|sw|2805@sxb|歙县北|NPH|shexianbei|sxb|2806@sxb|绍兴北|SLH|shaoxingbei|sxb|2807@sxd|绍兴东|SSH|shaoxingdong|sxd|2808@sxi|泗县|GPH|sixian|sx|2809@sxi|始兴|IPQ|shixing|sx|2810@sxi|松溪|SIS|songxi|sx|2811@sxi|寿县|SOU|shouxian|sx|2812@sxi|随县|OVN|suixian|sx|2813@sya|泗阳|MPH|siyang|sy|2814@sya|双洋|SQS|shuangyang|sy|2815@sya|松阳|SUU|songyang|sy|2816@sya|三阳|SYU|sanyang|sy|2817@sya|射阳|SAU|sheyang|sy|2818@sya|双阳|OYT|shuangyang|sy|2819@syb|邵阳北|OVQ|shaoyangbei|syb|2820@syb|松原北|OCT|songyuanbei|syb|2821@syd|十堰东|OUN|shiyandong|syd|2822@syi|山阴|SNV|shanyin|sy|2823@syx|邵阳西|SXA|shaoyangxi|syx|2824@syx|沈阳西|OOT|shenyangxi|syx|2825@szb|深圳机场北|SBA|shenzhenjichangbei|szjcb|2826@szb|深圳北|IOQ|shenzhenbei|szb|2827@szc|深圳机场|SCA|shenzhenjichang|szjc|2828@szh|神州|SRQ|shenzhou|sz|2829@szh|桑植|SZA|sangzhi|sz|2830@szm|十字门|SIA|shizimen|szm|2831@szn|尚志南|OZB|shangzhinan|szn|2832@szn|随州南|ONN|suizhounan|szn|2833@szs|石嘴山|QQJ|shizuishan|szs|2834@szs|深圳坪山|IFQ|shenzhenpingshan|szps|2835@szx|石柱县|OSW|shizhuxian|szx|2836@tan|台安南|TAD|taiannan|tan|2837@tca|太仓|TCU|taicang|tc|2838@tcb|桃村北|TOK|taocunbei|tcb|2839@tcd|桐城东|TOU|tongchengdong|tcd|2840@tcg|铁厂沟|TJR|tiechanggou|tcg|2841@tch|塔城|TZR|tacheng|tc|2842@tcn|桐城南|TUU|tongchengnan|tcn|2843@tcn|太仓南|TNU|taicangnan|tcn|2844@tcs|铁刹山|PST|tiechashan|tcs|2845@tdb|田东北|TBZ|tiandongbei|tdb|2846@tdd|土地堂东|TTN|tuditangdong|tdtd|2847@tgd|太谷东|TEV|taigudong|tgd|2848@tgk|铁干里克|VAR|tieganlike|tglk|2849@tgx|太谷西|TIV|taiguxi|tgx|2850@tha|吐哈|THR|tuha|th|2851@tha|通海|TAM|tonghai|th|2852@thb|太和北|JYN|taihebei|thb|2853@thc|天河机场|TJN|tianhejichang|thjc|2854@thd|太和东|TDU|taihedong|thd|2855@thj|天河街|TEN|tianhejie|thj|2856@thn|唐海南|IEP|tanghainan|thn|2857@thx|通化县|TXL|tonghuaxian|thx|2858@tji|同江|TJB|tongjiang|tj|2859@tkd|托克托东|TVC|tuoketuodong|tktd|2860@tlb|铜陵北|KXH|tonglingbei|tlb|2861@tlb|吐鲁番北|TAR|tulufanbei|tlfb|2862@tlu|桐庐|TLU|tonglu|tl|2863@tni|泰宁|TNS|taining|tn|2864@trn|铜仁南|TNW|tongrennan|trn|2865@tsb|甜水堡|TUJ|tianshuibu|tsb|2866@tsn|天水南|TIJ|tianshuinan|tsn|2867@twe|通渭|TWJ|tongwei|tw|2868@txd|田心东|KQQ|tianxindong|txd|2869@txh|汤逊湖|THN|tangxunhu|txh|2870@txi|藤县|TAZ|tengxian|tx|2871@tyn|太原南|TNV|taiyuannan|tyn|2872@tyu|桃源|TYA|taoyuan|ty|2873@tyx|通远堡西|TST|tongyuanpuxi|typx|2874@tzb|桐梓北|TBE|tongzibei|tzb|2875@tzc|太子城|IZP|taizicheng|tzc|2876@tzd|桐梓东|TDE|tongzidong|tzd|2877@tzh|通州|TOP|tongzhou|tz|2878@wax|万安县|WAG|wananxian|wax|2879@wch|吴川|WAQ|wuchuan|wc|2880@wdd|文登东|WGK|wendengdong|wdd|2881@wdx|武当山西|WWN|wudangshanxi|wdsx|2882@wfb|潍坊北|WJK|weifangbei|wfb|2883@wfs|五府山|WFG|wufushan|wfs|2884@whb|威虎岭北|WBL|weihulingbei|whlb|2885@whb|芜湖北|WBU|wuhubei|whb|2886@whb|威海北|WHK|weihaibei|whb|2887@whn|芜湖南|RVH|wuhunan|whn|2888@whx|苇河西|WIB|weihexi|whx|2889@wji|温江|WJE|wenjiang|wj|2890@wjq|魏家泉|WJR|weijiaquan|wjq|2891@wlb|乌兰察布|WPC|wulanchabu|wlcb|2892@wld|五龙背东|WMT|wulongbeidong|wlbd|2893@wln|乌龙泉南|WFN|wulongquannan|wlqn|2894@wlt|乌兰木图|VLT|wulanmutu|wlmt|2895@wnd|望牛墩|WNA|wangniudun|wnd|2896@wns|五女山|WET|wunvshan|wns|2897@wnx|渭南西|WXY|weinanxi|wnx|2898@wsh|武胜|WSE|wusheng|ws|2899@wsq|乌审旗|WGC|wushenqi|wsq|2900@wsu|乌苏|WSR|wusu|ws|2901@wto|五通|WTZ|wutong|wt|2902@wwe|无为|IIH|wuwei|ww|2903@wwn|无为南|WWU|wuweinan|wwn|2904@wws|瓦屋山|WAH|wawushan|wws|2905@wxi|威信|WXE|weixin|wx|2906@wxi|武乡|WUV|wuxiang|wx|2907@wxx|闻喜西|WOV|wenxixi|wxx|2908@wyb|武义北|WDH|wuyibei|wyb|2909@wyb|武夷山北|WBS|wuyishanbei|wysb|2910@wyu|婺源|WYG|wuyuan|wy|2911@wyu|渭源|WEJ|weiyuan|wy|2912@wza|湾仔|WZA|wanzai|wz|2913@wzb|万州北|WZE|wanzhoubei|wzb|2914@wzb|湾仔北|WBA|wanzaibei|wzb|2915@wzh|吴忠|WVJ|wuzhong|wz|2916@wzh|武陟|WIF|wuzhi|wz|2917@wzn|梧州南|WBZ|wuzhounan|wzn|2918@wzn|湾沚南|WNU|wanzhinan|wzn|2919@xab|兴安北|XDZ|xinganbei|xab|2920@xan|雄安|IQP|xiongan|xa|2921@xcb|许昌北|EBF|xuchangbei|xcb|2922@xcd|许昌东|XVF|xuchangdong|xcd|2923@xch|项城|ERN|xiangcheng|xc|2924@xdd|新都东|EWW|xindudong|xdd|2925@xdu|西渡|XDA|xidu|xd|2926@xfe|咸丰|XFA|xianfeng|xf|2927@xfe|西丰|XFT|xifeng|xf|2928@xfe|先锋|NQQ|xianfeng|xf|2929@xfl|湘府路|FVQ|xiangfulu|xfl|2930@xfx|襄汾西|XTV|xiangfenxi|xfx|2931@xgb|孝感北|XJN|xiaoganbei|xgb|2932@xgd|新干东|XGG|xingandong|xgd|2933@xgd|孝感东|GDN|xiaogandong|xgd|2934@xgx|兴国西|XIG|xingguoxi|xgx|2935@xgz|夏格庄|XZK|xiagezhuang|xgz|2936@xhb|下花园北|OKP|xiahuayuanbei|xhyb|2937@xhb|兴和北|EBC|xinghebei|xhb|2938@xhb|宣化北|VJP|xuanhuabei|xhb|2939@xhd|西湖东|WDQ|xihudong|xhd|2940@xhn|新化南|EJQ|xinhuanan|xhn|2941@xhu|西华|EHF|xihua|xh|2942@xhx|新晃西|EWQ|xinhuangxi|xhx|2943@xji|新津|IRW|xinjin|xj|2944@xjk|小金口|NKQ|xiaojinkou|xjk|2945@xjn|辛集南|IJP|xinjinan|xjn|2946@xjn|新津南|ITW|xinjinnan|xjn|2947@xla|西来|XLE|xilai|xl|2948@xmb|新民北|XOT|xinminbei|xmb|2949@xme|厦 门|EMS|xiamen|xm|2950@xnd|咸宁东|XKN|xianningdong|xnd|2951@xnn|咸宁南|UNN|xianningnan|xnn|2952@xpn|溆浦南|EMQ|xupunan|xpn|2953@xpx|西平西|EGQ|xipingxi|xpx|2954@xsx|响水县|XSU|xiangshuixian|xsx|2955@xta|仙桃|VTN|xiantao|xt|2956@xtb|湘潭北|EDQ|xiangtanbei|xtb|2957@xtd|邢台东|EDP|xingtaidong|xtd|2958@xtn|新塘南|NUQ|xintangnan|xtn|2959@xwe|兴文|XNE|xingwen|xw|2960@xwq|西乌旗|XWD|xiwuqi|xwq|2961@xwx|修武西|EXF|xiuwuxi|xwx|2962@xwx|修文县|XWE|xiuwenxian|xwx|2963@xxb|萧县北|QSH|xiaoxianbei|xxb|2964@xxb|新香坊北|RHB|xinxiangfangbei|xxfb|2965@xxd|新乡东|EGF|xinxiangdong|xxd|2966@xxi|萧县|EOH|xiaoxian|xx|2967@xya|岫岩|XXT|xiuyan|xy|2968@xyb|新余北|XBG|xinyubei|xyb|2969@xyb|咸阳北|EBY|xianyangbei|xyb|2970@xyc|西阳村|XQF|xiyangcun|xyc|2971@xyd|信阳东|OYN|xinyangdong|xyd|2972@xyd|襄垣东|EAF|xiangyuandong|xyd|2973@xyd|咸阳秦都|XOY|xianyangqindu|xyqd|2974@xyd|襄阳东|EKN|xiangyangdong|xyd|2975@xyi|秀英|XYA|xiuying|xy|2976@xyo|仙游|XWS|xianyou|xy|2977@xyu|祥云|XQM|xiangyun|xy|2978@xzc|新郑机场|EZF|xinzhengjichang|xzjc|2979@xzl|香樟路|FNQ|xiangzhanglu|xzl|2980@xzx|忻州西|IXV|xinzhouxi|xzx|2981@yan|雅安|YAE|yaan|ya|2982@yan|永安南|YQS|yongannan|yan|2983@ybl|迎宾路|YFW|yingbinlu|ybl|2984@ybx|亚布力西|YSB|yabulixi|yblx|2985@ybx|宜宾西|YXE|yibinxi|ybx|2986@ycb|永城北|RGH|yongchengbei|ycb|2987@ycb|盐城北|AEH|yanchengbei|ycb|2988@ycb|运城北|ABV|yunchengbei|ycb|2989@ycd|永川东|WMW|yongchuandong|ycd|2990@ycd|禹城东|YSK|yuchengdong|ycd|2991@ycf|盐城大丰|YFU|yanchengdafeng|ycdf|2992@ych|宜春|YEG|yichun|yc|2993@ych|岳池|AWW|yuechi|yc|2994@ydh|云东海|NAQ|yundonghai|ydh|2995@ydu|姚渡|AOJ|yaodu|yd|2996@yfd|云浮东|IXQ|yunfudong|yfd|2997@yfn|永福南|YBZ|yongfunan|yfn|2998@yge|雨格|VTM|yuge|yg|2999@ygn|阳高南|AGV|yanggaonan|ygn|3000@yhe|洋河|GTH|yanghe|yh|3001@yjb|永济北|AJV|yongjibei|yjb|3002@yjx|延吉西|YXL|yanjixi|yjx|3003@ykl|英库勒|YLR|yinfkule|ykl|3004@ykn|永康南|QUH|yongkangnan|ykn|3005@yla|依兰|YEB|yilan|yl|3006@ylh|运粮河|YEF|yunlianghe|ylh|3007@yli|尉犁|WRR|yuli|yl|3008@yli|炎陵|YAG|yanling|yl|3009@yli|鄢陵|YIF|yanling|yl|3010@yln|杨陵南|YEY|yanglingnan|yln|3011@yma|羊马|YME|yangma|ym|3012@ymb|一面坡北|YXB|yimianpobei|ympb|3013@ymd|云梦东|YRN|yunmengdong|ymd|3014@ymi|伊敏|YMX|yimin|ym|3015@ymx|元谋西|AMM|yuanmouxi|ymx|3016@yna|郁南|YKQ|yunan|yn|3017@yny|云南驿|ANM|yunnanyi|yny|3018@ypd|延平东|ADS|yanpingdong|ypd|3019@ypi|延平|YPS|yanping|yp|3020@ypi|银瓶|KPQ|yinping|yp|3021@ypx|延平西|YWS|yanpingxi|ypx|3022@ypx|原平西|IPV|yuanpingxi|ypx|3023@yqd|阳泉东|AYP|yangquandong|yqd|3024@yqh|雁栖湖|FGP|yanqihu|yqh|3025@yqi|杨桥|YQA|yangqiao|yq|3026@yqx|阳曲西|IQV|yangquxi|yqx|3027@yre|永仁|ARM|yongren|yr|3028@ysb|颍上北|YBU|yingshangbei|ysb|3029@ysh|永寿|ASY|yongshou|ys|3030@ysh|阳朔|YCZ|yangshuo|ys|3031@ysh|云山|KZQ|yunshan|ys|3032@ysn|玉山南|YGG|yushannan|ysn|3033@ysn|雁石南|YMS|yanshinan|ysn|3034@ysx|永寿西|AUY|yongshouxi|ysx|3035@ysx|榆社西|AXV|yushexi|ysx|3036@yta|永泰|YTS|yongtai|yt|3037@yta|银滩|CTQ|yintan|yt|3038@ytb|鹰潭北|YKG|yingtanbei|ytb|3039@ytk|依吞布拉克|YVR|yitunbulake|ytblk|3040@ytn|烟台南|YLK|yantainan|ytn|3041@yto|伊通|YTL|yitong|yt|3042@ytx|烟台西|YTK|yantaixi|ytx|3043@yxi|尤溪|YXS|youxi|yx|3044@yxi|云霄|YBS|yunxiao|yx|3045@yxi|宜兴|YUH|yixing|yx|3046@yxi|玉溪|AXM|yuxi|yx|3047@yxi|阳信|YVK|yangxin|yx|3048@yxi|应县|YZV|yingxian|yx|3049@yxn|攸县南|YXG|youxiannan|yxn|3050@yxx|洋县西|YXY|yangxianxi|yxx|3051@yxx|义县西|YSD|yixianxi|yxx|3052@yyb|余姚北|CTH|yuyaobei|yyb|3053@yzd|扬州东|YDU|yangzhoudong|yzd|3054@yzh|银盏|YZA|yinzhan|yz|3055@yzh|禹州|YZF|yuzhou|yz|3056@yzh|榆中|IZJ|yuzhong|yz|3057@zan|诏安|ZDS|zhaoan|za|3058@zbb|淄博北|ZRK|zibobei|zbb|3059@zdc|正定机场|ZHP|zhengdingjichang|zdjc|3060@zdo|准东|ZER|zhundong|zd|3061@zfd|纸坊东|ZMN|zhifangdong|zfd|3062@zga|柘皋|ZGU|zhegao|zg|3063@zge|准格尔|ZEC|zhungeer|zge|3064@zhb|庄河北|ZUT|zhuanghebei|zhb|3065@zhe|政和|ZES|zhenghe|zh|3066@zhl|珠海长隆|ZLA|zhuhaichanglong|zhcl|3067@zhu|昭化|ZHW|zhaohua|zh|3068@zjb|织金北|ZJE|zhijinbei|zjb|3069@zjc|张家川|ZIJ|zhangjiachuan|zjc|3070@zjg|张家港|ZAU|zhangjiagang|zjg|3071@zji|织金|IZW|zhijin|zj|3072@zji|芷江|ZPQ|zhijiang|zj|3073@zjn|张家口南|IXP|zhangjiakounan|zjkn|3074@zjx|张家界西|JXA|zhangjiajiexi|zjjx|3075@zka|仲恺|KKQ|zhongkai|zk|3076@zkd|周口东|ZKF|zhoukoudong|zkd|3077@zko|曾口|ZKE|zengkou|zk|3078@zli|珠琳|ZOM|zhulin|zl|3079@zli|左岭|ZSN|zuoling|zl|3080@zmd|樟木头东|ZRQ|zhangmutoudong|zmtd|3081@zmx|驻马店西|ZLN|zhumadianxi|zmdx|3082@zni|周宁|ZNS|zhouning|zn|3083@zpi|邹平|ZLK|zouping|zp|3084@zpu|漳浦|ZCS|zhangpu|zp|3085@zpx|漳平西|ZXG|zhangpingxi|zpx|3086@zqb|章丘北|ZVK|zhangqiubei|zqb|3087@zqd|肇庆东|FCQ|zhaoqingdong|zqd|3088@zqi|庄桥|ZQH|zhuangqiao|zq|3089@zsh|昭山|KWQ|zhaoshan|zs|3090@zsx|钟山西|ZAZ|zhongshanxi|zsx|3091@zsz|朱砂古镇|ZSE|zhushaguzhen|zsgz|3092@zta|中堂|ZTA|zhongtang|zt|3093@zts|支提山|ZIS|zhitishan|zts|3094@zwn|中卫南|ZTJ|zhongweinan|zwn|3095@zxi|漳县|ZXJ|zhangxian|zx|3096@zxi|镇雄|ZXE|zhenxiong|zx|3097@zyb|资阳北|FYW|ziyangbei|zyb|3098@zyi|遵义|ZYE|zunyi|zy|3099@zyn|遵义南|ZNE|zunyinan|zyn|3100@zyx|张掖西|ZEJ|zhangyexi|zyx|3101@zzb|资中北|WZW|zizhongbei|zzb|3102@zzd|枣庄东|ZNK|zaozhuangdong|zzd|3103@zzd|卓资东|ZDC|zhuozidong|zzd|3104@zzd|涿州东|ZAP|zhuozhoudong|zzd|3105@zzd|郑州东|ZAF|zhengzhoudong|zzd|3106@zzn|株洲南|KVQ|zhuzhounan|zzn|3107&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="设置查询信息"><a class="markdownIt-Anchor" href="#设置查询信息"></a> 设置查询信息</h3><blockquote><p>在跳转之前我们需要设置 cookie,目的是调整之后自动填充表单信息</p></blockquote><p>配置出发日期,出发地,目的地</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">from_time = <span class="string">&#x27;2021-01-08&#x27;</span></span><br><span class="line">from_station = <span class="string">&#x27;上海&#x27;</span></span><br><span class="line">to_station = <span class="string">&#x27;郑州&#x27;</span></span><br></pre></td></tr></table></figure><blockquote><p>设置 cookie,通过 cookie 的方式设置查询信息</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">to_unicode</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    字符串转 unicode</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> s.encode(<span class="string">&#x27;unicode_escape&#x27;</span>).decode()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将出发站,目的地,出发时间 加入到 cookie 中。</span></span><br><span class="line">js_save_fs = to_unicode(from_station).upper().replace(<span class="string">&#x27;\\U&#x27;</span>, <span class="string">&#x27;%u&#x27;</span>) + <span class="string">&#x27;%2C&#x27;</span> + fs</span><br><span class="line">js_save_ts = to_unicode(to_station).upper().replace(<span class="string">&#x27;\\U&#x27;</span>, <span class="string">&#x27;%u&#x27;</span>) + <span class="string">&#x27;%2C&#x27;</span> + ts</span><br><span class="line">cookie_domain = <span class="string">&#x27;kyfw.12306.cn&#x27;</span></span><br><span class="line">browser.add_cookie(&#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;_jc_save_fromStation&quot;</span>, <span class="string">&quot;value&quot;</span>: js_save_fs,</span><br><span class="line">    <span class="string">&quot;path&quot;</span>: <span class="string">&quot;/&quot;</span>, <span class="string">&quot;domain&quot;</span>: cookie_domain</span><br><span class="line">&#125;)</span><br><span class="line">browser.add_cookie(&#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;_jc_save_toStation&quot;</span>, <span class="string">&quot;value&quot;</span>: js_save_ts,</span><br><span class="line">    <span class="string">&quot;path&quot;</span>: <span class="string">&quot;/&quot;</span>, <span class="string">&quot;domain&quot;</span>: cookie_domain</span><br><span class="line">&#125;)</span><br><span class="line">browser.add_cookie(&#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;_jc_save_fromDate&quot;</span>, <span class="string">&quot;value&quot;</span>: from_time,</span><br><span class="line">    <span class="string">&quot;path&quot;</span>: <span class="string">&quot;/&quot;</span>, <span class="string">&quot;domain&quot;</span>: cookie_domain</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment"># 设置完 cookie 后,表单会自动根据 cookie 信息填充</span></span><br><span class="line">time.sleep(<span class="number">0.5</span>)</span><br><span class="line">browser.get(ticket_url)</span><br></pre></td></tr></table></figure><h3 id="查询余票-2"><a class="markdownIt-Anchor" href="#查询余票-2"></a> 查询余票</h3><h4 id="点击查询按钮"><a class="markdownIt-Anchor" href="#点击查询按钮"></a> 点击查询按钮</h4><blockquote><p>设置完 cookie ,页面加载后会自动从 cookie 中获取并填充到表单</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wait.WebDriverWait(browser, <span class="number">5</span>).until(ec.element_to_be_clickable((By.ID, <span class="string">&#x27;query_ticket&#x27;</span>))).click()</span><br></pre></td></tr></table></figure><h4 id="获取表格信息"><a class="markdownIt-Anchor" href="#获取表格信息"></a> 获取表格信息</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">left_tr_list = browser.find_els_if_exist(<span class="string">&#x27;#queryLeftTable &gt; tr&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="遍历表格车次信息"><a class="markdownIt-Anchor" href="#遍历表格车次信息"></a> 遍历表格车次信息</h4><blockquote><p>遍历表格信息,从表格中查找 <code>trains</code> 中的车次</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">trains = [<span class="string">&#x27;G1952&#x27;</span>, <span class="string">&#x27;G3152&#x27;</span>]</span><br><span class="line">train_row_index = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(left_tr_list)):</span><br><span class="line">        <span class="comment"># 跳过空行</span></span><br><span class="line">        <span class="keyword">if</span> index % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">            left_tr = left_tr_list[index]</span><br><span class="line">            train_tr = left_tr_list[index + <span class="number">1</span>]</span><br><span class="line">            train_name = train_tr.get_attribute(<span class="string">&#x27;datatran&#x27;</span>)</span><br><span class="line">            <span class="keyword">for</span> t <span class="keyword">in</span> trains:</span><br><span class="line">                <span class="keyword">if</span> t == train_name:</span><br><span class="line">                    // TODO 下一步检查席座和余票数量</span><br><span class="line">            train_row_index += <span class="number">1</span></span><br></pre></td></tr></table></figure><blockquote><p>找到<code>trains</code>中的车次后继续检查席座和余票数量</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">left_tr_id = left_tr.get_attribute(<span class="string">&#x27;id&#x27;</span>)</span><br><span class="line">submit_btn = browser.find_el_if_exist(<span class="string">&#x27;#&#x27;</span> + left_tr_id + <span class="string">&#x27; &gt; td.no-br &gt; a&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> submit_btn:</span><br><span class="line">    <span class="keyword">return</span></span><br></pre></td></tr></table></figure><p>如果改车次没有提交按钮,说明没有余票,直接返回</p><blockquote><p>下一步开始匹配席座</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">seat_types = [<span class="string">&#x27;一等座&#x27;</span> , <span class="string">&#x27;二等座&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> seat_type <span class="keyword">in</span> seat_types:</span><br><span class="line">    <span class="keyword">if</span> tk.seat_type_dict[seat_type]:</span><br><span class="line">        seat_selector = <span class="string">&#x27;#&#x27;</span> + tk.seat_type_dict[seat_type][<span class="string">&quot;code&quot;</span>] + <span class="string">&#x27;_&#x27;</span> + serial_num</span><br><span class="line">        seat = left_tr.find_element_by_css_selector(seat_selector)</span><br><span class="line">        <span class="keyword">if</span> seat:</span><br><span class="line">            seat_div = browser.find_el_if_exist(seat_selector + <span class="string">&#x27; &gt; div&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> try_submit(seat_div <span class="keyword">if</span> seat_div <span class="keyword">else</span> seat):</span><br><span class="line">                // TODO 此时已经找到匹配席座且有余票的车次</span><br></pre></td></tr></table></figure><p>判断是否有余票,主要是判断是否为<code>有</code>或者数字</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 判断是否有余票,如果有余票就尝试提交</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">try_submit</span>(<span class="params">seat_el</span>):</span></span><br><span class="line">    seat_text = seat_el.text</span><br><span class="line">    <span class="keyword">if</span> seat_text == <span class="string">&#x27;有&#x27;</span> <span class="keyword">or</span> re.match(<span class="string">&quot;^\\d+$&quot;</span>, seat_text):</span><br><span class="line">        ticket_info[<span class="string">&#x27;seat_type&#x27;</span>] = seat_type</span><br><span class="line">        ticket_info[<span class="string">&#x27;value&#x27;</span>] = seat_text</span><br><span class="line">        submit_btn.click()</span><br><span class="line">        // TODO 此时点击预约按钮尝试提交订单,下一步处理订单信息</span><br></pre></td></tr></table></figure><h3 id="提交订单"><a class="markdownIt-Anchor" href="#提交订单"></a> 提交订单</h3><h4 id="选择乘车人"><a class="markdownIt-Anchor" href="#选择乘车人"></a> 选择乘车人</h4><blockquote><p>查找乘车人选择框,然后勾选 <code>passengers</code> 中的乘车人</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查找乘车人选择框</span></span><br><span class="line">passengers = [<span class="string">&#x27;张三&#x27;</span>]</span><br><span class="line">passenger_list = browser.find_els_if_exist(<span class="string">&#x27;#normal_passenger_id &gt; li&#x27;</span>)</span><br><span class="line">passenger_index = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> passenger <span class="keyword">in</span> passengers:</span><br><span class="line">        <span class="keyword">for</span> passenger_li <span class="keyword">in</span> passenger_list:</span><br><span class="line">            passenger_input = passenger_li.find_element_by_tag_name(<span class="string">&#x27;input&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> passenger_li.find_element_by_tag_name(<span class="string">&#x27;label&#x27;</span>).text == passenger:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;选择乘坐人 [<span class="subst">&#123;passenger&#125;</span>] . . .&quot;</span>)</span><br><span class="line">                passenger_input.click()</span><br><span class="line">                // TODO 选择玩乘车人选择席座</span><br></pre></td></tr></table></figure><h4 id="选择席座"><a class="markdownIt-Anchor" href="#选择席座"></a> 选择席座</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 选择席座</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;开始选择席座&quot;</span>)</span><br><span class="line">seat_select = browser.find_element_by_id(<span class="string">f&quot;seatType_<span class="subst">&#123;<span class="built_in">str</span>(passenger_index)&#125;</span>&quot;</span>)</span><br><span class="line">seat_type_item = tk.seat_type_dict[seat_type]</span><br><span class="line">seat_type_value = seat_type_item[<span class="string">&#x27;value&#x27;</span>]</span><br><span class="line"><span class="keyword">if</span> seat_type_value != <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">    Select(seat_select).select_by_value(seat_type_value)</span><br><span class="line">passenger_index += <span class="number">1</span></span><br></pre></td></tr></table></figure><h4 id="提交订单-2"><a class="markdownIt-Anchor" href="#提交订单-2"></a> 提交订单</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;正在提交订单 . . .&#x27;</span>)</span><br><span class="line">wait.WebDriverWait(browser, <span class="number">5</span>).until(ec.element_to_be_clickable((By.ID, <span class="string">&#x27;submitOrder_id&#x27;</span>))).click()</span><br><span class="line"> <span class="built_in">print</span>(<span class="string">&#x27;正在确认订单 . . .&#x27;</span>)</span><br><span class="line">wait.WebDriverWait(browser, <span class="number">5</span>).until(ec.element_to_be_clickable((By.ID, <span class="string">&#x27;qr_submit_id&#x27;</span>))).click()</span><br><span class="line"><span class="comment"># 等待跳转到支付页面, 如果超时未跳转, 说明订单生成失败</span></span><br><span class="line">wait.WebDriverWait(browser, <span class="number">10</span>).until(<span class="keyword">lambda</span> driver: driver.current_url.startswith(pay_order_url))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> selenium </category>
          
          <category> python </category>
          
          <category> 12306 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> selenium </tag>
            
            <tag> 12306 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Selenium实现12306自动登录</title>
      <link href="post/selenium-12306-login.html"/>
      <url>post/selenium-12306-login.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p>自从<code>12306</code>登录新增了滑块验证码以后,很多抢票软件就无法正常使用了。<br />博主最近研究使用<code>selenium</code>实现自动登录功能</p></div><h2 id="准备"><a class="markdownIt-Anchor" href="#准备"></a> 准备</h2><ol><li><code>Python 3.7 - 3.9</code></li><li><code>Chrome Driver</code>: <a href="https://npm.taobao.org/mirrors/chromedriver/">下载地址</a></li><li><code>打码服务</code>: 打码服务使用<a href="https://github.com/YinAoXiong/12306_code_server">12306_code_server</a>,可以自建打码服务,也可以使用云打码服务。</li><li><code>Pip 依赖</code>: pip install requests==2.25.1 selenium==3.141.0</li></ol><h2 id="初始化"><a class="markdownIt-Anchor" href="#初始化"></a> 初始化</h2><blockquote><p>初始化 <code>selenium</code> 打开 <code>12306</code> <a href="https://kyfw.12306.cn/otn/resources/login.html">登录页面</a></p></blockquote><blockquote><p><code>Browser</code>主要目的是在浏览器打开网页的时候,注入脚本修改 <code>webdriver</code> 的值, 否则滑块验证码会验证失败。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="comment"># ChromeDriver 路径 - ChromeDriver 配置版本只要和 Chrome 的大版本匹配就行</span></span><br><span class="line">CHROME_PATH = <span class="string">&#x27;/opt/google/chrome/chromedriver&#x27;</span></span><br><span class="line">options = webdriver.ChromeOptions()</span><br><span class="line">options.add_argument(<span class="string">&#x27;--user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.88 Safari/537.36&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Browser</span>(<span class="params">webdriver.Chrome</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">super</span>().__init__(chrome_options=options, executable_path=CHROME_PATH)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span>(<span class="params">self, url</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Loads a web page in the current browser session.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="built_in">super</span>().get(url)</span><br><span class="line">        time.sleep(<span class="number">0.5</span>)</span><br><span class="line">        <span class="comment"># 通过代码注入的方式进行修改 webdriver 的值。</span></span><br><span class="line">        self.execute_script(<span class="string">&#x27;Object.defineProperties(navigator,&#123;webdriver:&#123;get:() =&gt; false&#125;&#125;);&#x27;</span>)</span><br><span class="line">        self.execute_script(<span class="string">&#x27;window.document.documentElement.getAttribute(&quot;webdriver&quot;);&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>初始化 <code>browser</code> 打开登录页面</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> wait</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> ec</span><br><span class="line">browser = Browser()</span><br><span class="line"><span class="comment"># 浏览器最大化，也可以不设置</span></span><br><span class="line">browser.maximize_window()</span><br><span class="line"><span class="comment"># 现在使用这个url地址</span></span><br><span class="line">browser.get(<span class="string">&#x27;https://kyfw.12306.cn/otn/resources/login.html&#x27;</span>)</span><br><span class="line"><span class="comment"># 等待用户密码登录按钮可以点击,切换到用户密码登录 Tab</span></span><br><span class="line">wait.WebDriverWait(browser, <span class="number">5</span>).until(ec.element_to_be_clickable((By.CLASS_NAME, <span class="string">&#x27;login-hd-account&#x27;</span>))).click()</span><br></pre></td></tr></table></figure><h2 id="获取验证码图片"><a class="markdownIt-Anchor" href="#获取验证码图片"></a> 获取验证码图片</h2><blockquote><p>可以在 <code>img</code> 标签右键复制 <code>xpath</code>,使用 <code>xpath</code> 获取元素,也可以使用 id <code>J-loginImg</code> 获取元素</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/12306-captcha.png" alt="" /></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line">code_img_ele = browser.find_element_by_id(<span class="string">&#x27;J-loginImg&#x27;</span>)</span><br><span class="line">base64_img = code_img_ele.get_attribute(<span class="string">&#x27;src&#x27;</span>)</span><br><span class="line">code_img = base64_img[<span class="built_in">len</span>(<span class="string">&#x27;data:image/jpg;base64,&#x27;</span>):]</span><br></pre></td></tr></table></figure><h2 id="调用打码服务"><a class="markdownIt-Anchor" href="#调用打码服务"></a> 调用打码服务</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium.webdriver <span class="keyword">import</span> ActionChains</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="comment"># 这里也可以使用自建打码服务器</span></span><br><span class="line">code_url = <span class="string">&quot;https://12306.yinaoxiong.cn/verify/base64/&quot;</span></span><br><span class="line">data = &#123;<span class="string">&quot;imageFile&quot;</span>: code_img&#125;</span><br><span class="line">resp = requests.post(code_url, data=data)</span><br><span class="line"><span class="keyword">if</span> resp.status_code <span class="keyword">is</span> <span class="number">200</span>:</span><br><span class="line">    resp_json = resp.json()</span><br><span class="line">    <span class="keyword">if</span> resp_json <span class="keyword">and</span> resp_json.get(<span class="string">&quot;code&quot;</span>) <span class="keyword">is</span> <span class="number">0</span>:</span><br><span class="line">        points = codexy(resp_json.get(<span class="string">&quot;data&quot;</span>)).split(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">        <span class="comment"># 遍历列表，使用动作链对每一个列表元素对应的x,y指定的位置进行点击操作</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(points) // <span class="number">2</span>):</span><br><span class="line">            ActionChains(browser).move_to_element_with_offset(</span><br><span class="line">                code_img_ele,</span><br><span class="line">                <span class="built_in">float</span>(points[i * <span class="number">2</span>]),</span><br><span class="line">                <span class="built_in">float</span>(points[i * <span class="number">2</span> + <span class="number">1</span>])</span><br><span class="line">            ).click().perform()</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line">        browser.find_element_by_id(<span class="string">&#x27;J-userName&#x27;</span>).send_keys(<span class="string">&quot;用户名&quot;</span>)</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><blockquote><p>codexy 代码获取点真实的坐标</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">codexy</span>(<span class="params">select</span>):</span></span><br><span class="line">    post = []</span><br><span class="line">    offsetsX = <span class="number">0</span>  <span class="comment"># 选择的答案的left值,通过浏览器点击8个小图的中点得到的,这样基本没问题</span></span><br><span class="line">    offsetsY = <span class="number">0</span>  <span class="comment"># 选择的答案的top值</span></span><br><span class="line">    <span class="keyword">for</span> ofset <span class="keyword">in</span> select:</span><br><span class="line">        <span class="keyword">if</span> ofset == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            offsetsY = <span class="number">77</span></span><br><span class="line">            offsetsX = <span class="number">40</span></span><br><span class="line">        <span class="keyword">elif</span> ofset == <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">            offsetsY = <span class="number">77</span></span><br><span class="line">            offsetsX = <span class="number">112</span></span><br><span class="line">        <span class="keyword">elif</span> ofset == <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">            offsetsY = <span class="number">77</span></span><br><span class="line">            offsetsX = <span class="number">184</span></span><br><span class="line">        <span class="keyword">elif</span> ofset == <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">            offsetsY = <span class="number">77</span></span><br><span class="line">            offsetsX = <span class="number">256</span></span><br><span class="line">        <span class="keyword">elif</span> ofset == <span class="string">&#x27;5&#x27;</span>:</span><br><span class="line">            offsetsY = <span class="number">149</span></span><br><span class="line">            offsetsX = <span class="number">40</span></span><br><span class="line">        <span class="keyword">elif</span> ofset == <span class="string">&#x27;6&#x27;</span>:</span><br><span class="line">            offsetsY = <span class="number">149</span></span><br><span class="line">            offsetsX = <span class="number">112</span></span><br><span class="line">        <span class="keyword">elif</span> ofset == <span class="string">&#x27;7&#x27;</span>:</span><br><span class="line">            offsetsY = <span class="number">149</span></span><br><span class="line">            offsetsX = <span class="number">184</span></span><br><span class="line">        <span class="keyword">elif</span> ofset == <span class="string">&#x27;8&#x27;</span>:</span><br><span class="line">            offsetsY = <span class="number">149</span></span><br><span class="line">            offsetsX = <span class="number">256</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        post.append(offsetsX)</span><br><span class="line">        post.append(offsetsY)</span><br><span class="line">    randCode = <span class="built_in">str</span>(post).replace(<span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;&#x27;</span>).replace(<span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;&#x27;</span>).replace(<span class="string">&quot;&#x27;&quot;</span>, <span class="string">&#x27;&#x27;</span>).replace(<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">u&quot;验证码识别坐标为&#123;0&#125;&quot;</span>.<span class="built_in">format</span>(randCode))</span><br><span class="line">    <span class="keyword">return</span> randCode</span><br></pre></td></tr></table></figure><h2 id="输入用户名密码登录"><a class="markdownIt-Anchor" href="#输入用户名密码登录"></a> 输入用户名密码登录</h2><blockquote><p>注意将用户名,密码替换成自己的。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">browser.find_element_by_id(<span class="string">&#x27;J-userName&#x27;</span>).send_keys(<span class="string">&quot;用户名&quot;</span>)</span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line">browser.find_element_by_id(<span class="string">&#x27;J-password&#x27;</span>).send_keys(<span class="string">&quot;密码&quot;</span>)</span><br><span class="line">browser.find_element_by_id(<span class="string">&#x27;J-login&#x27;</span>).click()</span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h2 id="滑块验证码"><a class="markdownIt-Anchor" href="#滑块验证码"></a> 滑块验证码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium.common.exceptions <span class="keyword">import</span> WebDriverException</span><br><span class="line"><span class="comment"># 获取滑块验证码元素</span></span><br><span class="line">div = browser.find_element_by_id(<span class="string">&#x27;nc_1_n1z&#x27;</span>)</span><br><span class="line"><span class="comment"># 创建动作链</span></span><br><span class="line">action = ActionChains(browser)</span><br><span class="line"> <span class="comment"># 点击长按指定的标签</span></span><br><span class="line">action.click_and_hold(div)</span><br><span class="line"><span class="comment"># 处理滑动模块</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    <span class="comment"># perform()立即执行动作链操作</span></span><br><span class="line">    <span class="comment"># move_by_offset(x,y):x水平方向 y竖直方向</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        action.move_by_offset(<span class="number">40</span>, <span class="number">0</span>).perform()  <span class="comment"># 速度为30mm</span></span><br><span class="line">    <span class="keyword">except</span> WebDriverException:</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line">action.release()</span><br></pre></td></tr></table></figure><blockquote><p>完整文件：</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> wait</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> ec</span><br><span class="line"></span><br><span class="line"><span class="comment"># ChromeDriver 路径 - ChromeDriver 配置版本只要和 Chrome 的大版本匹配就行</span></span><br><span class="line">CHROME_PATH = <span class="string">&#x27;D:\\chromedriver.exe&#x27;</span></span><br><span class="line">options = webdriver.ChromeOptions()</span><br><span class="line">options.add_argument(<span class="string">&#x27;--user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.88 Safari/537.36&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Browser</span>(<span class="params">webdriver.Chrome</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">super</span>().__init__(chrome_options=options, executable_path=CHROME_PATH)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span>(<span class="params">self, url</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Loads a web page in the current browser session.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="built_in">super</span>().get(url)</span><br><span class="line">        time.sleep(<span class="number">0.5</span>)</span><br><span class="line">        <span class="comment"># 通过代码注入的方式进行修改 webdriver 的值。</span></span><br><span class="line">        self.execute_script(<span class="string">&#x27;Object.defineProperties(navigator,&#123;webdriver:&#123;get:() =&gt; false&#125;&#125;);&#x27;</span>)</span><br><span class="line">        self.execute_script(<span class="string">&#x27;window.document.documentElement.getAttribute(&quot;webdriver&quot;);&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">browser = Browser()</span><br><span class="line"><span class="comment"># 浏览器最大化，也可以不设置</span></span><br><span class="line">browser.maximize_window()</span><br><span class="line"><span class="comment"># 现在使用这个url地址</span></span><br><span class="line">browser.get(<span class="string">&#x27;https://kyfw.12306.cn/otn/resources/login.html&#x27;</span>)</span><br><span class="line"><span class="comment"># 等待用户密码登录按钮可以点击,切换到用户密码登录 Tab</span></span><br><span class="line">wait.WebDriverWait(browser, <span class="number">5</span>).until(ec.element_to_be_clickable((By.CLASS_NAME, <span class="string">&#x27;login-hd-account&#x27;</span>))).click()</span><br><span class="line"></span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line">code_img_ele = browser.find_element_by_id(<span class="string">&#x27;J-loginImg&#x27;</span>)</span><br><span class="line">base64_img = code_img_ele.get_attribute(<span class="string">&#x27;src&#x27;</span>)</span><br><span class="line">code_img = base64_img[<span class="built_in">len</span>(<span class="string">&#x27;data:image/jpg;base64,&#x27;</span>):]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">codexy</span>(<span class="params">select</span>):</span></span><br><span class="line">    post = []</span><br><span class="line">    offsetsX = <span class="number">0</span>  <span class="comment"># 选择的答案的left值,通过浏览器点击8个小图的中点得到的,这样基本没问题</span></span><br><span class="line">    offsetsY = <span class="number">0</span>  <span class="comment"># 选择的答案的top值</span></span><br><span class="line">    <span class="keyword">for</span> ofset <span class="keyword">in</span> select:</span><br><span class="line">        <span class="keyword">if</span> ofset == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            offsetsY = <span class="number">77</span></span><br><span class="line">            offsetsX = <span class="number">40</span></span><br><span class="line">        <span class="keyword">elif</span> ofset == <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">            offsetsY = <span class="number">77</span></span><br><span class="line">            offsetsX = <span class="number">112</span></span><br><span class="line">        <span class="keyword">elif</span> ofset == <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">            offsetsY = <span class="number">77</span></span><br><span class="line">            offsetsX = <span class="number">184</span></span><br><span class="line">        <span class="keyword">elif</span> ofset == <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">            offsetsY = <span class="number">77</span></span><br><span class="line">            offsetsX = <span class="number">256</span></span><br><span class="line">        <span class="keyword">elif</span> ofset == <span class="string">&#x27;5&#x27;</span>:</span><br><span class="line">            offsetsY = <span class="number">149</span></span><br><span class="line">            offsetsX = <span class="number">40</span></span><br><span class="line">        <span class="keyword">elif</span> ofset == <span class="string">&#x27;6&#x27;</span>:</span><br><span class="line">            offsetsY = <span class="number">149</span></span><br><span class="line">            offsetsX = <span class="number">112</span></span><br><span class="line">        <span class="keyword">elif</span> ofset == <span class="string">&#x27;7&#x27;</span>:</span><br><span class="line">            offsetsY = <span class="number">149</span></span><br><span class="line">            offsetsX = <span class="number">184</span></span><br><span class="line">        <span class="keyword">elif</span> ofset == <span class="string">&#x27;8&#x27;</span>:</span><br><span class="line">            offsetsY = <span class="number">149</span></span><br><span class="line">            offsetsX = <span class="number">256</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        post.append(offsetsX)</span><br><span class="line">        post.append(offsetsY)</span><br><span class="line">    randCode = <span class="built_in">str</span>(post).replace(<span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;&#x27;</span>).replace(<span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;&#x27;</span>).replace(<span class="string">&quot;&#x27;&quot;</span>, <span class="string">&#x27;&#x27;</span>).replace(<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">u&quot;验证码识别坐标为&#123;0&#125;&quot;</span>.<span class="built_in">format</span>(randCode))</span><br><span class="line">    <span class="keyword">return</span> randCode</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> selenium.webdriver <span class="keyword">import</span> ActionChains</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里也可以使用自建打码服务器</span></span><br><span class="line">code_url = <span class="string">&quot;https://12306.yinaoxiong.cn/verify/base64/&quot;</span></span><br><span class="line">data = &#123;<span class="string">&quot;imageFile&quot;</span>: code_img&#125;</span><br><span class="line">resp = requests.post(code_url, data=data)</span><br><span class="line"><span class="keyword">if</span> resp.status_code <span class="keyword">is</span> <span class="number">200</span>:</span><br><span class="line">    resp_json = resp.json()</span><br><span class="line">    <span class="keyword">if</span> resp_json <span class="keyword">and</span> resp_json.get(<span class="string">&quot;code&quot;</span>) <span class="keyword">is</span> <span class="number">0</span>:</span><br><span class="line">        points = codexy(resp_json.get(<span class="string">&quot;data&quot;</span>)).split(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">        <span class="comment"># 遍历列表，使用动作链对每一个列表元素对应的x,y指定的位置进行点击操作</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(points) // <span class="number">2</span>):</span><br><span class="line">            ActionChains(browser).move_to_element_with_offset(</span><br><span class="line">                code_img_ele,</span><br><span class="line">                <span class="built_in">float</span>(points[i * <span class="number">2</span>]),</span><br><span class="line">                <span class="built_in">float</span>(points[i * <span class="number">2</span> + <span class="number">1</span>])</span><br><span class="line">            ).click().perform()</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line">        browser.find_element_by_id(<span class="string">&#x27;J-userName&#x27;</span>).send_keys(<span class="string">&quot;用户名&quot;</span>)</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">        browser.find_element_by_id(<span class="string">&#x27;J-password&#x27;</span>).send_keys(<span class="string">&quot;密码&quot;</span>)</span><br><span class="line">        browser.find_element_by_id(<span class="string">&#x27;J-login&#x27;</span>).click()</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">from</span> selenium.common.exceptions <span class="keyword">import</span> WebDriverException</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 获取滑块验证码元素</span></span><br><span class="line">        div = browser.find_element_by_id(<span class="string">&#x27;nc_1_n1z&#x27;</span>)</span><br><span class="line">        <span class="comment"># 创建动作链</span></span><br><span class="line">        action = ActionChains(browser)</span><br><span class="line">        <span class="comment"># 点击长按指定的标签</span></span><br><span class="line">        action.click_and_hold(div)</span><br><span class="line">        <span class="comment"># 处理滑动模块</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">            <span class="comment"># perform()立即执行动作链操作</span></span><br><span class="line">            <span class="comment"># move_by_offset(x,y):x水平方向 y竖直方向</span></span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                action.move_by_offset(<span class="number">40</span>, <span class="number">0</span>).perform()  <span class="comment"># 速度为30mm</span></span><br><span class="line">            <span class="keyword">except</span> WebDriverException:</span><br><span class="line">                time.sleep(<span class="number">1</span>)</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">        action.release()</span><br><span class="line">        time.sleep(<span class="number">99</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="运行效果"><a class="markdownIt-Anchor" href="#运行效果"></a> 运行效果</h2><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/12306-auto-login.gif" alt="" /></p>]]></content>
      
      
      <categories>
          
          <category> selenium </category>
          
          <category> python </category>
          
          <category> 12306 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> selenium </tag>
            
            <tag> 12306 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo + GitHub Actions 打造免费个人博客</title>
      <link href="post/github-action.html"/>
      <url>post/github-action.html</url>
      
        <content type="html"><![CDATA[<h2 id="搭建个人博客"><a class="markdownIt-Anchor" href="#搭建个人博客"></a> 搭建个人博客</h2><div class="note info flat"><p>还没有使用<code>Hexo</code>搭建个人博客可以移步 <a href="/post/hexo-free.html">Hexo 免费搭建个人博客网站</a></p></div><h2 id="github-actions"><a class="markdownIt-Anchor" href="#github-actions"></a> Github Actions</h2><blockquote><p><code>GitHub Actions</code> 帮助您自动完成软件开发周期内的任务。 <code>GitHub Actions</code> 是事件驱动的，意味着您可以在指定事件发生后运行一系列命令。 例如，每次有人为仓库创建拉取请求时，您都可以自动运行命令来执行软件测试脚本。</p></blockquote><p>关于<code>GitHub Actions</code>的介绍请移步<a href="https://docs.github.com/cn/free-pro-team@latest/actions">官方文档</a></p><h2 id="准备工作"><a class="markdownIt-Anchor" href="#准备工作"></a> 准备工作</h2><p>使用 <code>Github Actions</code> 将生成的 <code>Hexo</code>博客文件 <code>push</code> 到 <code>Github Pages</code>仓库或者其他平台的仓库时,需要进行身份认证。</p><p>博主使用的是<code>SSH KEY</code>:</p><ol><li>生成 <code>ssh key</code></li></ol><p><code>windows</code>用户可以使用 <code>Git Bash</code>,<code>linux</code>和<code>mac</code>用户可以使用终端生成。</p><blockquote><p>ssh-keygen -t rsa -C “<a href="mailto:your_email@example.com">your_email@example.com</a>”</p></blockquote><ol start="2"><li>将 <code>~/.ssh/id_rsa.pub</code> 生成的公钥添加到 <code>GitHub</code> 的 <a href="https://github.com/settings/keys">SSH keys</a></li></ol><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/github-ssh-keys.png" alt="" /></p><ol start="3"><li>将 <code>~/.ssh/id_rsa</code> 生成的私钥添加到 <code>Hexo</code> 仓库的 <code>Secrets</code>,密钥名为 <code>GH_ACTION_DEPLOY_KEY</code></li></ol><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/github-secrets.png" alt="" /></p><h2 id="创建-workflow"><a class="markdownIt-Anchor" href="#创建-workflow"></a> 创建 Workflow</h2><blockquote><p><code>workflow</code> : CI/CD 的工作流</p></blockquote><p>首先我们在<code>Hexo</code>主目录创建一个 <code>.github/workflows</code> 文件夹,并在该文件夹下创建一个 <code>blog.yml</code> 文件</p><ul><li>定义<code>workflow</code>的名称</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">hexo-deploy-actions</span></span><br></pre></td></tr></table></figure><ul><li>当<code>push</code>到默认分支时触发执行<code>workflow</code></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">on:</span> [<span class="string">push</span>]</span><br></pre></td></tr></table></figure><p>也可以指定分支</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><ul><li>创建<code>job</code>,使用 <code>ubuntu</code> 为运行环境<br /><code>job</code>: 任务，比如构建，测试和部署。每个 <code>workflow</code> 由多个 <code>job</code> 组成.<br />一个 CI/CD 的工作流有许多 <code>jobs</code> 组成，比如最典型的 <code>job</code> 是 <code>lint</code>，<code>test</code>，<code>build</code> 或者 <code>deploy</code>。</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">  <span class="comment"># 定义运行环境</span></span><br><span class="line">  <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br></pre></td></tr></table></figure><h2 id="创建-step"><a class="markdownIt-Anchor" href="#创建-step"></a> 创建 Step</h2><p><code>step</code>: 每个 <code>job</code> 由多个 <code>step</code> 组成</p><blockquote><p>现在我们已经创建了一个<code>push</code>到主分支执行的<code>Workflow</code>,并指定运行在<code>Ubuntu</code>环境下。</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="string">Master</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/checkout@master</span></span><br><span class="line">      <span class="comment"># 如果有 submodule</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">submodules:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><blockquote><p>使用 <code>setup-node</code> 在当前环境中安装 <code>nodejs 12.x</code></p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Node.js</span> <span class="number">12.</span><span class="string">x</span></span><br><span class="line">  <span class="attr">uses:</span> <span class="string">actions/setup-node@master</span></span><br><span class="line">  <span class="attr">with:</span></span><br><span class="line">    <span class="attr">node-version:</span> <span class="string">&quot;12.x&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>安装完成<code>nodejs</code>环境后,我们再去安装<code>hexo</code>和以及其他<code>npm</code>依赖</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Hexo</span> <span class="string">Dependencies</span></span><br><span class="line">  <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">    <span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-cli@4.2.0</span> <span class="string">-g</span></span><br><span class="line">    <span class="string">npm</span> <span class="string">install</span></span><br></pre></td></tr></table></figure><blockquote><p>此时我们需要私钥复制到系统环境中,并把<code>github</code>添加到<code>known_hosts</code></p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Deploy</span> <span class="string">Private</span> <span class="string">Key</span></span><br><span class="line">  <span class="attr">env:</span></span><br><span class="line">    <span class="attr">GH_ACTION_DEPLOY_KEY:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.GH_ACTION_DEPLOY_KEY</span> <span class="string">&#125;&#125;</span></span><br><span class="line">  <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">    <span class="string">mkdir</span> <span class="string">-p</span> <span class="string">~/.ssh/</span></span><br><span class="line">    <span class="string">echo</span> <span class="string">&quot;$GH_ACTION_DEPLOY_KEY&quot;</span> <span class="string">&gt;</span> <span class="string">~/.ssh/id_rsa</span></span><br><span class="line">    <span class="string">chmod</span> <span class="number">600</span> <span class="string">~/.ssh/id_rsa</span></span><br><span class="line">    <span class="string">ssh-keyscan</span> <span class="string">github.com</span> <span class="string">&gt;&gt;</span> <span class="string">~/.ssh/known_hosts</span></span><br></pre></td></tr></table></figure><blockquote><p>设置全局的 <code>Git</code> 用户信息</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Git</span> <span class="string">Infomation</span></span><br><span class="line">  <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">    <span class="string">git</span> <span class="string">config</span> <span class="string">--global</span> <span class="string">user.name</span> <span class="string">&#x27;hvnobug&#x27;</span></span><br><span class="line">    <span class="string">git</span> <span class="string">config</span> <span class="string">--global</span> <span class="string">user.email</span> <span class="string">&#x27;972080809@qq.com&#x27;</span></span><br></pre></td></tr></table></figure><blockquote><p>生成 <code>Hexo</code> 博客</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Generate</span> <span class="string">Hexo</span></span><br><span class="line">  <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">    <span class="string">hexo</span> <span class="string">clean</span></span><br><span class="line">    <span class="string">hexo</span> <span class="string">generate</span></span><br></pre></td></tr></table></figure><blockquote><p><code>Push</code> 到 <code>GitHub Pages</code></p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">Hexo</span> <span class="string">To</span> <span class="string">Github</span></span><br><span class="line">  <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">    <span class="string">cd</span> <span class="string">public</span></span><br><span class="line">    <span class="string">rm</span> <span class="string">-rf</span> <span class="string">.git</span></span><br><span class="line">    <span class="string">echo</span> <span class="string">blog.hvnobug.com</span> <span class="string">&gt;&gt;</span> <span class="string">CNAME</span></span><br><span class="line">    <span class="string">git</span> <span class="string">init</span></span><br><span class="line">    <span class="string">git</span> <span class="string">add</span> <span class="string">-A</span> <span class="string">&amp;&amp;</span> <span class="string">git</span> <span class="string">commit</span> <span class="string">-m</span> <span class="string">&quot;Site updated: `date &#x27;+%Y-%m-%d %H:%M:%S&#x27;`&quot;</span></span><br><span class="line">    <span class="string">git</span> <span class="string">push</span> <span class="string">-f</span> <span class="string">git@github.com:hvnobug/hvnobug.github.io.git</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>到这里我们的 <code>GitHub Actions</code> 已经配置完毕,此时我们只需要<code>push</code>到<code>master</code>分支就会触发<code>workflow</code>.</p><p>完整的 <code>blog.yml</code> 文件:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">hexo-deploy-actions</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="string">Master</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/checkout@master</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">submodules:</span> <span class="literal">true</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Node.js</span> <span class="number">12.</span><span class="string">x</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/setup-node@master</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">node-version:</span> <span class="string">&quot;12.x&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Hexo</span> <span class="string">Dependencies</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">        <span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-cli@4.2.0</span> <span class="string">-g</span></span><br><span class="line">        <span class="string">npm</span> <span class="string">install</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Deploy</span> <span class="string">Private</span> <span class="string">Key</span></span><br><span class="line">      <span class="attr">env:</span></span><br><span class="line">        <span class="attr">GH_ACTION_DEPLOY_KEY:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.GH_ACTION_DEPLOY_KEY</span> <span class="string">&#125;&#125;</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">        <span class="string">mkdir</span> <span class="string">-p</span> <span class="string">~/.ssh/</span></span><br><span class="line">        <span class="string">echo</span> <span class="string">&quot;$GH_ACTION_DEPLOY_KEY&quot;</span> <span class="string">&gt;</span> <span class="string">~/.ssh/id_rsa</span></span><br><span class="line">        <span class="string">chmod</span> <span class="number">600</span> <span class="string">~/.ssh/id_rsa</span></span><br><span class="line">        <span class="string">ssh-keyscan</span> <span class="string">github.com</span> <span class="string">&gt;&gt;</span> <span class="string">~/.ssh/known_hosts</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Git</span> <span class="string">Infomation</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">        <span class="string">git</span> <span class="string">config</span> <span class="string">--global</span> <span class="string">user.name</span> <span class="string">&#x27;hvnobug&#x27;</span></span><br><span class="line">        <span class="string">git</span> <span class="string">config</span> <span class="string">--global</span> <span class="string">user.email</span> <span class="string">&#x27;972080809@qq.com&#x27;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Generate</span> <span class="string">Hexo</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">        <span class="string">hexo</span> <span class="string">clean</span></span><br><span class="line">        <span class="string">hexo</span> <span class="string">generate</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">Hexo</span> <span class="string">To</span> <span class="string">Github</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">        <span class="string">cd</span> <span class="string">public</span></span><br><span class="line">        <span class="string">rm</span> <span class="string">-rf</span> <span class="string">.git</span></span><br><span class="line">        <span class="string">echo</span> <span class="string">blog.hvnobug.com</span> <span class="string">&gt;&gt;</span> <span class="string">CNAME</span></span><br><span class="line">        <span class="string">git</span> <span class="string">init</span></span><br><span class="line">        <span class="string">git</span> <span class="string">add</span> <span class="string">-A</span> <span class="string">&amp;&amp;</span> <span class="string">git</span> <span class="string">commit</span> <span class="string">-m</span> <span class="string">&quot;Site updated: `date &#x27;+%Y-%m-%d %H:%M:%S&#x27;`&quot;</span></span><br><span class="line">        <span class="string">git</span> <span class="string">push</span> <span class="string">-f</span> <span class="string">git@github.com:hvnobug/hvnobug.github.io.git</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>推荐GitHub开源实用的Windows项目</title>
      <link href="post/recommend-window-github-projects.html"/>
      <url>post/recommend-window-github-projects.html</url>
      
        <content type="html"><![CDATA[<h2 id="netch"><a class="markdownIt-Anchor" href="#netch"></a> Netch</h2><blockquote><p>一款 <code>Windows</code> 平台的开源游戏加速工具，<code>Netch</code> 可以实现类似 <code>SocksCap64</code> 那样的进程代理，也可以实现 <code>SSTap</code> 那样的全局 <code>TUN/TAP</code> 代理，和 <code>Shadowsocks-Windows</code> 那样的本地 <code>Socks5</code>，<code>HTTP</code> 和系统代理</p></blockquote><ul><li>Socks5</li><li>Shadowsocks</li><li>ShadowsocksR</li><li>Trojan</li><li>VMess</li><li>VLess</li></ul><p>与此同时 <code>Netch</code> 避免了 <code>SSTap</code> 的 <code>NAT</code> 问题 ，检查 <code>NAT</code> 类型即可知道是否有 <code>NAT</code> 问题。使用 <code>SSTap</code> 加速部分 <code>P2P</code> 联机，对 <code>NAT</code> 类型有要求的游戏时，可能会因为 <code>NAT</code> 类型严格遇到无法加入联机，或者其他影响游戏体验的情况</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/NetchX/Netch/docs/screenshots/main.png" alt="" /></p><p><a href="https://github.com/NetchX/Netch">项目地址</a></p><h2 id="revokemsgpatcher"><a class="markdownIt-Anchor" href="#revokemsgpatcher"></a> RevokeMsgPatcher</h2><p>适用于 Windows 下 PC 版微信/QQ/TIM的防撤回补丁。支持最新版微信/QQ/TIM，其中微信能够选择安装多开功能。</p><p>🔨使用方法</p><ol><li><p>首先，你的系统需要满足以下条件：</p><ul><li>Windows 7 或更高版本，不支持XP。</li><li>.NET Framework 4.5 或更高版本。低于此版本在打开程序时可能无反应，或者直接报错。</li></ul></li><li><p>使用本程序前，先关闭微信/QQ/TIM。</p></li><li><p>以管理员身份运行本程序，等待右下角获取最新的补丁信息。</p></li><li><p>选择微信/QQ/TIM的安装路径。如果你用的安装版的微信/QQ/TIM，正常情况下本程序会自动从注册表中获取安装路径，绿色版需要手动选择路径。</p></li><li><p>点击防撤回。界面可能会出现一段时间的无响应，请耐心等待。由于修改了微信的 WeChatWin.dll 文件、QQ/TIM的 IM.dll 文件，杀毒软件可能会弹出警告，放行即可。</p></li></ol><div class="note danger flat"><p><strong>注意</strong>:</p><p>微信/QQ/TIM更新之后要重新安装补丁！</p></div><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/huiyadanli/RevokeMsgPatcher/Images/screenshot.png" alt="" /></p><p><a href="https://github.com/huiyadanli/RevokeMsgPatcher">项目地址</a></p><h2 id="contextmenumanager"><a class="markdownIt-Anchor" href="#contextmenumanager"></a> ContextMenuManager</h2><blockquote><p>一个纯粹的Windows右键菜单管理程序</p></blockquote><h3 id="主要功能"><a class="markdownIt-Anchor" href="#主要功能"></a> 主要功能</h3><ul><li>启用或禁用文件、文件夹、新建、发送到、打开方式、自定义文件格式等右键菜单项目</li><li>对上述场景右键菜单项目进行修改名称、修改图标、导航注册表位置、导航文件位置、永久删除等操作</li><li>对上述场景右键菜单自定义添加项目，自定义菜单命令</li></ul><h3 id="兼容性能"><a class="markdownIt-Anchor" href="#兼容性能"></a> 兼容性能</h3><ul><li>适用于Win7、8、8.1、10、Vista</li><li>适用于 x64、x32 CPU 操作系统</li><li>适用于高分屏，最佳显示缩放比为150%</li><li>程序支持国际化多语言显示，欢迎为此程序制作语言字典</li></ul><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/BluePointLilac/ContextMenuManager/Screenshot.png" alt="" /></p><p><a href="https://github.com/BluePointLilac/ContextMenuManager">项目地址</a></p>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
          <category> windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>玩转Hexo的Scripts</title>
      <link href="post/hexo-script.html"/>
      <url>post/hexo-script.html</url>
      
        <content type="html"><![CDATA[<h2 id="什么是scripts"><a class="markdownIt-Anchor" href="#什么是scripts"></a> 什么是Scripts</h2><div class="note info flat"><p>如果您的代码很简单，建议您编写脚本，您只需要把 <code>JavaScript</code> 文件放到 <code>scripts</code> 文件夹，在启动时就会自动载入。</p></div><p><code>scripts</code> 其实就是一个迷你插件,它可以实现类似于插件的功能,同时可以无侵入式的增强我们的<code>Hexo</code>.</p><p>在<code>scripts</code>中我们可以尽情使用<code>Hexo</code>的<code>Api</code>。</p><h2 id="可以使用哪些api"><a class="markdownIt-Anchor" href="#可以使用哪些api"></a> 可以使用哪些Api</h2><h3 id="控制台console"><a class="markdownIt-Anchor" href="#控制台console"></a> 控制台（Console）</h3><p>控制台是 <code>Hexo</code> 与开发者之间沟通的桥梁。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo.extend.console.register(name, desc, options, <span class="function"><span class="keyword">function</span>(<span class="params">args</span>)</span>&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>name</td><td>名称</td></tr><tr><td>desc</td><td>描述</td></tr><tr><td>options</td><td>选项</td></tr></tbody></table><p>示例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo.extend.console.register(<span class="string">&#x27;config&#x27;</span>, <span class="string">&#x27;Display configuration&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">args</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(hexo.config);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><div class="note orange icon flat"><i class="note-icon fas fa-bullhorn"></i><p>控制台嘛,跟浏览器控制台差不多,这里我们可以使用<code>console</code>最为辅组工具,便于我们调试其他<code>API</code></p></div><h3 id="部署器deployer"><a class="markdownIt-Anchor" href="#部署器deployer"></a> 部署器（Deployer）</h3><blockquote><p>部署器帮助开发者将网站快速部署到远程服务器上，避免了复杂的指令。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo.extend.deployer.register(name, <span class="function"><span class="keyword">function</span>(<span class="params">args</span>)</span>&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>在函数中会传入 <code>args</code> 参数，该参数包含了 <code>_config.yml</code> 中的 <code>deploy</code> 参数值，以及开发者在终端中所传入的参数。</p><div class="note info flat"><p>关于部署器,<a href="https://hexo.io/plugins/">Hexo插件库</a>拥有各种各样的部署插件,可以轻松将我的<code>Hexo</code>站点部署到<code>GitHub Pages</code>、<code>Netlify</code>、腾讯云、阿里云,七牛云。。。</p></div><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/hexo-deployer-list.png" alt="" /></p><h3 id="过滤器filter"><a class="markdownIt-Anchor" href="#过滤器filter"></a> 过滤器（Filter）</h3><blockquote><p>过滤器用于修改特定文件，<code>Hexo</code> 将这些文件依序传给过滤器，而过滤器可以针对文件进行修改</p></blockquote><p>这里重点介绍这个过滤器,博主大部分主题扩展功能都是通过过滤器实现的。比如图片懒加载、loading 加载页、cdn替换、Alayer播放器、PWA等。</p><p>下面是博主的<code>scripts</code>目录：</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/hexo-scripts-directory.png" alt="" /></p><p><code>Hexo</code>提供多种不同类型的过滤器：</p><h4 id="before_post_render"><a class="markdownIt-Anchor" href="#before_post_render"></a> before_post_render</h4><p>在文章开始渲染前执行。比如把标题转为小写：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo.extend.filter.register(<span class="string">&#x27;before_post_render&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">  data.title = data.title.toLowerCase();</span><br><span class="line">  <span class="keyword">return</span> data;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="after_post_render"><a class="markdownIt-Anchor" href="#after_post_render"></a> after_post_render</h4><p>在文章渲染完成后执行。比如把 <code>@username</code> 取代为 Twitter 的开发者链接。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo.extend.filter.register(<span class="string">&#x27;after_post_render&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">  data.content = data.content.replace(<span class="regexp">/@(\d+)/</span>, <span class="string">&#x27;&lt;a href=&quot;http://twitter.com/$1&quot;&gt;#$1&lt;/a&gt;&#x27;</span>);</span><br><span class="line">  <span class="keyword">return</span> data;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="before_exit"><a class="markdownIt-Anchor" href="#before_exit"></a> before_exit</h4><p>在 <code>Hexo</code> 即将结束时执行，也就是在 <code>hexo.exit</code> 被调用后执行。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo.extend.filter.register(<span class="string">&#x27;before_exit&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="before_generate"><a class="markdownIt-Anchor" href="#before_generate"></a> before_generate</h4><p>在生成器解析前执行。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo.extend.filter.register(<span class="string">&#x27;before_generate&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="after_generate"><a class="markdownIt-Anchor" href="#after_generate"></a> after_generate</h4><p>在生成器解析后执行。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo.extend.filter.register(<span class="string">&#x27;after_generate&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="template_locals"><a class="markdownIt-Anchor" href="#template_locals"></a> template_locals</h4><p>修改模板的 局部变量。</p><p>比如在模板的局部变量中新增当前时间：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo.extend.filter.register(<span class="string">&#x27;template_locals&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">locals</span>)</span>&#123;</span><br><span class="line">  locals.now = <span class="built_in">Date</span>.now();</span><br><span class="line">  <span class="keyword">return</span> locals;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="after_init"><a class="markdownIt-Anchor" href="#after_init"></a> after_init</h4><p>在 <code>Hexo</code> 初始化完成后执行，也就是在 <code>hexo.init</code> 执行完成后执行。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo.extend.filter.register(<span class="string">&#x27;after_init&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="new_post_path"><a class="markdownIt-Anchor" href="#new_post_path"></a> new_post_path</h4><p>用来决定新建文章的路径，在建立文章时执行。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo.extend.filter.register(<span class="string">&#x27;new_post_path&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data, replace</span>)</span>&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="post_permalink"><a class="markdownIt-Anchor" href="#post_permalink"></a> post_permalink</h4><p>用来决定文章的永久链接。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo.extend.filter.register(<span class="string">&#x27;post_permalink&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="after_render"><a class="markdownIt-Anchor" href="#after_render"></a> after_render</h4><p>在渲染完成后，<code>Hexo</code> 会自动执行相对应的 <code>after_render</code> 过滤器，举例来说，我们可以通过这个功能实现 <code>JavaScript</code> 的压缩。</p><p><code>after_render</code>实在渲染完成之后,这里我们可以直接修改渲染之后的文件。</p><p>在这之前先了解先<code>Hexo</code>的渲染：</p><ul><li><strong>渲染字符串</strong>:<br />在渲染字符串时，您必须指定 <code>engine</code>，如此一来 <code>Hexo</code> 才知道该使用哪个渲染引擎来渲染。<br />engine就是渲染引擎,比如 ejs ,swig, md 等。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo.render.render(&#123;<span class="attr">text</span>: <span class="string">&#x27;example&#x27;</span>, <span class="attr">engine</span>: <span class="string">&#x27;swig&#x27;</span>&#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params">result</span>)</span>&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li><strong>渲染文件</strong>:<br />在渲染文件时，您无须指定 <code>engine</code>，<code>Hexo</code> 会自动根据扩展名猜测所要使用的渲染引擎，当然您也可以使用 <code>engine</code> 指定。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo.render.render(&#123;<span class="attr">path</span>: <span class="string">&#x27;path/to/file.swig&#x27;</span>&#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params">result</span>)</span>&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li><strong>检查文件是否可被渲染</strong>:<br />您可以通过 <code>isRenderable</code> 或 <code>isRenderableSync</code> 两个方法检查文件路径是否可以被渲染，只有在相对应的渲染器（renderer）已注册的情况下才会返回 true。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo.render.isRenderable(<span class="string">&#x27;layout.swig&#x27;</span>) <span class="comment">// true</span></span><br><span class="line">hexo.render.isRenderable(<span class="string">&#x27;image.png&#x27;</span>) <span class="comment">// false</span></span><br></pre></td></tr></table></figure><ul><li><strong>获取文件的输出扩展名</strong>:<br />您可以通过 <code>getOutput</code> 方法取得文件路径输出后的扩展名，如果文件无法渲染，则会返回空字符串。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo.render.getOutput(<span class="string">&#x27;layout.swig&#x27;</span>) <span class="comment">// html</span></span><br><span class="line">hexo.render.getOutput(<span class="string">&#x27;image.png&#x27;</span>) <span class="comment">// &#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>那么在渲染完成之后就开始这行我们的<code>after_render</code>过滤器：</p><blockquote><p>在渲染完成后，<code>Hexo</code> 会自动执行相对应的 <code>after_render</code> 过滤器，举例来说，我们可以通过这个功能实现 <code>JavaScript</code> 的压缩。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> UglifyJS = <span class="built_in">require</span>(<span class="string">&#x27;uglify-js&#x27;</span>);</span><br><span class="line"></span><br><span class="line">hexo.extend.filter.register(<span class="string">&#x27;after_render:js&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">str, data</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> result = UglifyJS.minify(str);</span><br><span class="line">  <span class="keyword">return</span> result.code;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p>那么我们想在渲染完成之后为我们的站点添加<code>Aplayer</code>播放器，也可以通过<code>after_render</code> 过滤器</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">hexo.extend.filter.register(<span class="string">&#x27;after_render:html&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">htmlContent</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 注入 js</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="regexp">/&lt;\/body&gt;/gi</span>.test(htmlContent)) &#123;</span><br><span class="line">        <span class="keyword">let</span> lastIndex = htmlContent.lastIndexOf(<span class="string">&#x27;&lt;/body&gt;&#x27;</span>);</span><br><span class="line">        htmlContent = htmlContent.substring(<span class="number">0</span>, lastIndex) + injectAPlayer + htmlContent.substring(lastIndex, htmlContent.length);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> htmlContent;</span><br><span class="line">&#125;, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">const</span> injectAPlayer =</span><br><span class="line"><span class="string">&#x27;&lt;!-- APlayer --&gt;&#x27;</span>+</span><br><span class="line"><span class="string">&#x27;&lt;link href=&quot;https://unpkg.com/aplayer/dist/APlayer.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#x27;</span>+</span><br><span class="line"><span class="string">&#x27;&lt;script src=&quot;https://cdn.jsdelivr.net/npm/hls.js@latest&quot;&gt;&lt;/script&gt;&#x27;</span>+</span><br><span class="line"><span class="string">&#x27;&lt;script src=&quot;https://unpkg.com/aplayer/dist/APlayer.min.js&quot;&gt;&lt;/script&gt;&#x27;</span>+</span><br><span class="line"><span class="string">&#x27;&lt;script src=&quot;/assets/aplayer.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="生成器generator"><a class="markdownIt-Anchor" href="#生成器generator"></a> 生成器（Generator）</h3><p>生成器根据处理后的原始文件建立路由。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo.extend.generator.register(name, <span class="function"><span class="keyword">function</span>(<span class="params">locals</span>)</span>&#123;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>在函数中会传入一个 <code>locals</code> 参数，等同于 网站变量，请尽量利用此参数取得网站数据，避免直接存取资料库。</p><p>生成器主要功能是复制文件,通过生成器我们可以在不修改主题目录文件的情况下,动态生成我们的<code>page</code>。</p><blockquote><p>比如我们想使用腾讯公益<code>404</code>作为我的 <code>404</code>页面,除了我们可以在 <code>source</code> 目录新建一个 <code>404.html</code>以外,可以通过生成器轻松实现。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hexo.extend.generator.register(<span class="string">&#x27;page-not-found&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">locals</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        path: <span class="string">&#x27;404.html&#x27;</span>,</span><br><span class="line">        data: <span class="string">&#x27;&lt;!doctypehtml&gt;&lt;html lang=en&gt;&lt;meta charset=UTF-8&gt;&lt;title&gt;Page Not Found&lt;/title&gt;&lt;body&gt;&lt;script charset=utf-8 homepagename=回到我的主页 homepageurl=https://blog.hvnobug.com src=//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js&gt;&lt;/script&gt;&#x27;</span></span><br><span class="line">    &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p>或者我们想为我们的站点一个这样的导航页,我们可以将源文件放到 source 目录下,但是如果我们想动态去生成呢</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/hvnobug-nav.png" alt="" /></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> pug = <span class="built_in">require</span>(<span class="string">&#x27;pug&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> pathFn = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> tmp_src = pathFn.join(__dirname, <span class="string">&#x27;../layouts/pug/nav.pug&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> template = fs.readFileSync(tmp_src, <span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line">hexo.extend.generator.register(<span class="string">&#x27;nav&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">locals</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> navs = locals.data[<span class="string">&#x27;nav&#x27;</span>];</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        path: <span class="string">&#x27;nav/index.html&#x27;</span>,</span><br><span class="line">        data: pug.render(template, &#123; <span class="attr">doctype</span>: <span class="string">&#x27;html&#x27;</span>, <span class="attr">ns</span>: navs, <span class="attr">cdn</span>: <span class="string">&#x27;https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/nav&#x27;</span> &#125;)</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>导航的渲染过程分为以下几个步骤:</p><ol><li>加载 nav.pug 模板</li><li>加载 本地 data 文件,文件在 source/_data.nav.json<br />主要是通过这个配置文件来动态修改导航</li><li>使用 pug 去渲染模板生成 html</li><li>将生成的 html 输出到 nav/index.html</li></ol><div class="note success flat"><p>按照这个方法,你可以生成任何不依赖主题<code>layout</code>的页面。</p></div><p>或者你只是想简单的复制一些文件,生成器也同样可以实现。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;hexo-fs&#x27;</span>);</span><br><span class="line"></span><br><span class="line">hexo.extend.generator.register(<span class="string">&#x27;asset&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">locals</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    path: <span class="string">&#x27;file.txt&#x27;</span>,</span><br><span class="line">    data: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> fs.createReadStream(<span class="string">&#x27;path/to/file.txt&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>又或者你只是想生成类似<code>robots.txt</code>这样的文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">hexo.extend.generator.register(<span class="string">&#x27;robots&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">locals</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        path: <span class="string">&#x27;robots&#x27;</span>,</span><br><span class="line">        data: <span class="string">&#x27;User-agent: *\n&#x27;</span> +</span><br><span class="line">            <span class="string">&#x27;Allow: /\n&#x27;</span> +</span><br><span class="line">            <span class="string">&#x27;Allow: /post/\n&#x27;</span> +</span><br><span class="line">            <span class="string">&#x27;Allow: /categories/\n&#x27;</span> +</span><br><span class="line">            <span class="string">&#x27;Allow: /archives/\n&#x27;</span> +</span><br><span class="line">            <span class="string">&#x27;Allow: /about/\n&#x27;</span> +</span><br><span class="line">            <span class="string">&#x27;Allow: /tags/\n&#x27;</span> +</span><br><span class="line">            <span class="string">&#x27;Allow: /album/\n&#x27;</span> +</span><br><span class="line">            <span class="string">&#x27;Disallow: /images/\n&#x27;</span> +</span><br><span class="line">            <span class="string">&#x27;Disallow: /js/\n&#x27;</span> +</span><br><span class="line">            <span class="string">&#x27;Disallow: /css/\n&#x27;</span> +</span><br><span class="line">            <span class="string">&#x27;Disallow: /fonts/\n&#x27;</span> +</span><br><span class="line">            <span class="string">&#x27;Sitemap: https://blog.hvnobug.com/sitemap.xml&#x27;</span></span><br><span class="line">    &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>同样的,博主的<a href="https://blog.hvnobug.com/album/">相册功能</a>同样是通过<code>Generator</code>生成的。<br />不同的是, 相册需要使用主题的 <code>layout</code>,很难做到在不侵入主题的情况下动态生成主题。<br />顺便提一下,楼主是使用 <code>GitHub Action</code> 生成站点文件,并同步到 <code>GitHub Pages</code>,<code>Coding Pages</code>的,也是在<code>hexo generate</code> 之前将相册的<code>layout</code> 复制到主题的 <code>layout</code> 目录下。</p><p>关于<a href="/post/github-action.html">Github Action 持续集成</a>可以查看这篇文章</p><p>更多<code>Api</code>请点击<a href="https://hexo.io/zh-cn/api/">Hexo - API</a>官方文档</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RocketMQ</title>
      <link href="post/rocketmq.html"/>
      <url>post/rocketmq.html</url>
      
        <content type="html"><![CDATA[<h2 id="rocketmq简介"><a class="markdownIt-Anchor" href="#rocketmq简介"></a> RocketMQ简介</h2><div class="note info flat"><p><code>RocketMQ</code>是一个纯<code>Java</code>、<strong>分布式</strong>、<strong>队列模型</strong>的开源消息中间件，前身是<code>MetaQ</code>，是阿里参考<code>Kafka</code>特点研发的一个队列模型的消息中间件，后开源给<code>apache</code>基金会成为了<code>apache</code>的顶级开源项目，具有<strong>高性能</strong>、<strong>高可靠</strong>、<strong>高实时</strong>、<strong>分布式</strong>特点。</p></div><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/rocket.gif" alt="" /></p><h2 id="rocketmq的心路历程"><a class="markdownIt-Anchor" href="#rocketmq的心路历程"></a> RocketMQ的心路历程</h2><ul><li><strong>2007年</strong>：淘宝实施了“五彩石”项目，“五彩石”用于将交易系统从单机变成分布式，也是在这个过程中产生了阿里巴巴第一代消息引擎——<code>Notify</code>。</li><li><strong>2010年</strong>：阿里巴巴<code>B2B</code>部门基于<code>ActiveMQ</code>的5.1版本也开发了自己的一款消息引擎，称为<code>Napoli</code>，这款消息引擎在<code>B2B</code>里面广泛地被使用，不仅仅是在交易领域，在很多的后台异步解耦等方面也得到了广泛的应用。</li><li><strong>2011年</strong>：业界出现了现在被很多大数据领域所推崇的<code>Kafka</code>消息引擎，阿里巴巴在研究了<code>Kafka</code>的整体机制和架构设计之后，基于<code>Kafka</code>的设计使用<code>Java</code>进行了完全重写并推出了<strong>MetaQ 1.0</strong>版本，主要是用于解决顺序消息和海量堆积的问题。</li><li><strong>2012年</strong>：阿里巴巴开源其自研的第三代分布式消息中间件——<code>RocketMQ</code>。<br />经过几年的技术打磨，阿里称基于<code>RocketMQ</code>技术，目前双十一当天消息容量可达到万亿级。</li><li><strong>2016年11月</strong>：阿里将<code>RocketMQ</code>捐献给<code>Apache</code>软件基金会，正式成为孵化项目。<br />阿里称会将其打造成顶级项目。这是阿里迈出的一大步，因为加入到开源软件基金会需要经过评审方的考核与观察。<br />坦率而言，业界还对国人的代码开源参与度仍保持着刻板印象；而<code>Apache</code>基金会中的342个项目中，暂时还只有<code>Kylin</code>、<code>CarbonData</code>、<code>Eagle</code> 、<code>Dubbo</code>和 <code>RocketMQ</code> 共计五个中国技术人主导的项目。</li><li><strong>2017年2月20日</strong>：<code>RocketMQ</code>正式发布4.0版本，专家称新版本适用于电商领域，金融领域，大数据领域，兼有物联网领域的编程模型。<br />以上就是<code>RocketMQ</code>的整体发展历史，其实在阿里巴巴内部围绕着<code>RocketMQ</code>内核打造了三款产品，分别是<code>MetaQ</code>、<code>Notify</code>和<code>Aliware MQ</code>。<br />这三者分别采用了不同的模型，<code>MetaQ</code>主要使用了拉模型，解决了顺序消息和海量堆积问题；<code>Notify</code>主要使用了推模型，解决了事务消息；而云产品<code>Aliware MQ</code>则是提供了商业化的版本。</li></ul><h2 id="rocketmq的特性"><a class="markdownIt-Anchor" href="#rocketmq的特性"></a> RocketMQ的特性</h2><ul><li>发布/订阅消息传递模型</li><li>财务级交易消息</li><li>各种跨语言客户端，例如<code>Java</code>，<code>C / C ++</code>，<code>Python</code>，<code>Go</code></li><li>可插拔的传输协议，例如<code>TCP</code>，<code>SSL</code>，<code>AIO</code></li><li>内置的消息跟踪功能，还支持开放式跟踪</li><li>多功能的大数据和流生态系统集成</li><li>按时间或偏移量追溯消息</li><li>可靠的<code>FIFO</code>和严格的有序消息传递在同一队列中</li><li>高效的推拉消费模型</li><li>单个队列中的百万级消息累积容量</li><li>多种消息传递协议，例如<code>JMS</code>和<code>OpenMessaging</code></li><li>灵活的分布式横向扩展部署架构</li><li>快如闪电的批量消息交换系统</li><li>各种消息过滤器机制，例如<code>SQL</code>和<code>Tag</code></li><li>用于隔离测试和云隔离群集的<code>Docker</code>映像</li><li>功能丰富的管理仪表板，用于配置，指标和监视</li><li>认证与授权</li></ul><h2 id="rocketmq的项目结构"><a class="markdownIt-Anchor" href="#rocketmq的项目结构"></a> RocketMQ的项目结构</h2><blockquote><p>GitHub地址：<a href="https://github.com/apache/rocketmq">https://github.com/apache/rocketmq</a></p></blockquote><h2 id="rocketmq的核心模块"><a class="markdownIt-Anchor" href="#rocketmq的核心模块"></a> RocketMq的核心模块</h2><ul><li><strong>rocketmq-broker</strong>：接受生产者发来的消息并存储（通过调用<strong>rocketmq-store</strong>），消费者从这里取得消息</li><li><strong>rocketmq-client</strong>：提供发送、接受消息的客户端<code>API</code>。</li><li><strong>rocketmq-namesrv</strong>：<code>NameServer</code>，类似于<code>Zookeeper</code>，这里保存着消息的<code>TopicName</code>，队列等运行时的元信息。</li><li><strong>rocketmq-common</strong>：通用的一些类，方法，数据结构等。</li><li><strong>rocketmq-remoting</strong>：基于<code>Netty4</code>的<code>client/server</code> + <code>fastjson</code>序列化 + 自定义二进制协议。</li><li><strong>rocketmq-store</strong>：消息、索引存储等。</li><li><strong>rocketmq-filtersrv</strong>：消息过滤器<code>Server</code>，需要注意的是，要实现这种过滤，需要上传代码到<code>MQ</code>！（一般而言，我们利用Tag足以满足大部分的过滤需求，如果更灵活更复杂的过滤需求，可以考虑<code>filtersrv</code>组件）。</li><li><strong>rocketmq-tools</strong>：命令行工具。</li></ul><h2 id="rocketmq的架构"><a class="markdownIt-Anchor" href="#rocketmq的架构"></a> RocketMQ的架构</h2><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/rocket-architecture-diagram.jpg" alt="" /></p><div class="note orange icon flat"><i class="note-icon fas fa-bullhorn"></i><p>我们可以看到<code>RocketMQ</code>啥都是集群部署的，这是他吞吐量大，高可用的原因之一，集群的模式也很花哨，可以支持多<code>master</code> 模式、多<code>master</code>多<code>slave</code>异步复制模式、多 <code>master</code>多<code>slave</code>同步双写模式。</p></div><h3 id="nameserver"><a class="markdownIt-Anchor" href="#nameserver"></a> NameServer</h3><blockquote><p>主要负责对于源数据的管理，包括了对于<code>Topic</code>和路由信息的管理。</p></blockquote><ul><li><p><code>NameServer</code>是一个功能齐全的服务器，其角色类似<code>Dubbo</code>中的<code>Zookeeper</code>，但<code>NameServer</code>与<code>Zookeeper</code>相比更轻量。主要是因为每个<code>NameServer</code>节点互相之间是独立的，没有任何信息交互。</p></li><li><p><code>NameServer</code>压力不会太大，平时主要开销是在维持心跳和提供<code>Topic-Broker</code>的关系数据。</p></li></ul><blockquote><p>但有一点需要注意，<code>Broker</code>向<code>NameServer</code>发心跳时， 会带上当前自己所负责的所有<code>Topic</code>信息，如果<code>Topic</code>个数太多（万级别），会导致一次心跳中，就<code>Topic</code>的数据就几十M，网络情况差的话， 网络传输失败，心跳失败，导致<code>NameServer</code>误认为<code>Broker</code>心跳失败。</p></blockquote><ul><li><code>NameServer</code>被设计成几乎无状态的，可以横向扩展，节点之间相互之间无通信，通过部署多台机器来标记自己是一个伪集群。</li></ul><blockquote><p>每个 Broker 在启动的时候会到 <code>NameServer</code> 注册，<code>Producer</code> 在发送消息前会根据 <code>Topic</code> 到 <code>NameServer</code> 获取到 <code>Broker</code> 的路由信息，<code>Consumer</code> 也会定时获取 <code>Topic</code> 的路由信息。<br />所以从功能上看<code>NameServer</code>应该是和 <code>ZooKeeper</code> 差不多，据说 <code>RocketMQ</code> 的早期版本确实是使用的 <code>ZooKeeper</code> ，后来改为了自己实现的 <code>NameServer</code> 。<br />我们看一下<code>Dubbo</code>中注册中心的角色，是不是真的一毛一样，师出同门相似点真的很多：</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/dubbo.png" alt="" /></p><h3 id="producer"><a class="markdownIt-Anchor" href="#producer"></a> Producer</h3><blockquote><p>消息生产者，负责产生消息，一般由业务系统负责产生消息。</p></blockquote><ul><li><code>Producer</code>由用户进行分布式部署，消息由<code>Producer</code>通过多种负载均衡模式发送到<code>Broker</code>集群，发送低延时，支持快速失败。</li><li><code>RocketMQ</code> 提供了三种方式发送消息：同步、异步和单向</li><li><code>同步发送</code>：同步发送指消息发送方发出数据后会在收到接收方发回响应之后才发下一个数据包。一般用于重要通知消息，例如重要通知邮件、营销短信。</li><li><code>异步发送</code>：异步发送指发送方发出数据后，不等接收方发回响应，接着发送下个数据包，一般用于可能链路耗时较长而对响应时间敏感的业务场景，例如用户视频上传后通知启动转码服务。</li><li><code>单向发送</code>：单向发送是指只负责发送消息而不等待服务器回应且没有回调函数触发，适用于某些耗时非常短但对可靠性要求并不高的场景，例如日志收集。</li></ul><h3 id="broker"><a class="markdownIt-Anchor" href="#broker"></a> Broker</h3><blockquote><p>消息中转角色，负责<strong>存储消息</strong>，<strong>转发消息</strong>。</p></blockquote><ul><li><code>Broker</code>是具体提供业务的服务器，单个<code>Broker</code>节点与所有的<code>NameServer</code>节点保持长连接及心跳，并会定时将<code>Topic</code>信息注册到NameServer，顺带一提底层的通信和连接都是基于Netty实现的。</li><li><code>Broker</code>负责消息存储，以<code>Topic</code>为纬度支持轻量级的队列，单机可以支撑上万队列规模，支持消息推拉模型。</li><li>官网上有数据显示：具有上亿级消息堆积能力，同时可严格保证消息的有序性。</li></ul><h3 id="consumer"><a class="markdownIt-Anchor" href="#consumer"></a> Consumer</h3><blockquote><p>消息消费者，负责消费消息，一般是后台系统负责异步消费。</p></blockquote><ul><li><code>Consumer</code>也由用户部署，支持PUSH和PULL两种消费模式，支持<strong>集群消费</strong>和<strong>广播消息</strong>，提供实时的消息订阅机制。</li><li><code>Pull</code>：拉取型消费者（Pull Consumer）主动从消息服务器拉取信息，只要批量拉取到消息，用户应用就会启动消费过程，所以 Pull 称为主动消费型。</li><li><code>Push</code>：推送型消费者（Push Consumer）封装了消息的拉取、消费进度和其他的内部维护工作，将消息到达时执行的回调接口留给用户应用程序来实现。所以 Push 称为被动消费类型，但从实现上看还是从消息服务器中拉取消息，不同于 Pull 的是 Push 首先要注册消费监听器，当监听器处触发后才开始消费消息。</li></ul><h2 id="消息领域模型"><a class="markdownIt-Anchor" href="#消息领域模型"></a> 消息领域模型</h2><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/message-domain-model.png" alt="" /></p><h3 id="message"><a class="markdownIt-Anchor" href="#message"></a> Message</h3><blockquote><p><code>Message</code>（消息）就是要传输的信息。</p></blockquote><p>一条消息必须有一个主题（<code>Topic</code>），主题可以看做是你的信件要邮寄的地址。</p><p>一条消息也可以拥有一个可选的标签（<code>Tag</code>）和额处的键值对，它们可以用于设置一个业务 <code>Key</code> 并在 <code>Broker</code> 上查找此消息以便在开发期间查找问题。</p><h3 id="topic"><a class="markdownIt-Anchor" href="#topic"></a> Topic</h3><p><code>Topic</code>（主题）可以看做消息的规类，它是消息的第一级类型。比如一个电商系统可以分为：交易消息、物流消息等，一条消息必须有一个 Topic 。<br /><code>Topic</code> 与生产者和消费者的关系非常松散，一个 <code>Topic</code> 可以有0个、1个、多个生产者向其发送消息，一个生产者也可以同时向不同的 Topic 发送消息。<br />一个 <code>Topic</code> 也可以被 0个、1个、多个消费者订阅。</p><h3 id="tag"><a class="markdownIt-Anchor" href="#tag"></a> Tag</h3><p><code>Tag</code>（标签）可以看作子主题，它是消息的第二级类型，用于为用户提供额外的灵活性。使用标签，同一业务模块不同目的的消息就可以用相同 <code>Topic</code> 而不同的 <code>Tag</code> 来标识。比如交易消息又可以分为：交易创建消息、交易完成消息等，一条消息可以没有 <code>Tag</code> 。</p><p>标签有助于保持您的代码干净和连贯，并且还可以为 <code>RocketMQ</code> 提供的查询系统提供帮助。</p><h3 id="group"><a class="markdownIt-Anchor" href="#group"></a> Group</h3><blockquote><p>分组，一个组可以订阅多个<code>Topic</code>。</p></blockquote><p>分为<code>ProducerGroup</code>，<code>ConsumerGroup</code>，代表某一类的生产者和消费者，一般来说同一个服务可以作为<code>Group</code>，同一个<code>Group</code>一般来说发送和消费的消息都是一样的</p><h3 id="queue"><a class="markdownIt-Anchor" href="#queue"></a> Queue</h3><p>在<code>Kafka</code>中叫<code>Partition</code>，每个<code>Queue</code>内部是有序的，在<code>RocketMQ</code>中分为读和写两种队列，一般来说读写队列数量一致，如果不一致就会出现很多问题。</p><h3 id="message-queue"><a class="markdownIt-Anchor" href="#message-queue"></a> Message Queue</h3><blockquote><p><code>Message Queue</code>（消息队列），主题被划分为一个或多个子主题，即消息队列。</p></blockquote><p>一个 <code>Topic</code> 下可以设置多个消息队列，发送消息时执行该消息的 <code>Topic</code> ，<code>RocketMQ</code> 会轮询该 <code>Topic</code> 下的所有队列将消息发出去。<br />消息的物理管理单位。一个<code>Topic</code>下可以有多个<code>Queue</code>，<code>Queue</code>的引入使得消息的存储可以分布式集群化，具有了水平扩展能力。</p><h3 id="offset"><a class="markdownIt-Anchor" href="#offset"></a> Offset</h3><p>在<code>RocketMQ</code> 中，所有消息队列都是持久化，长度无限的数据结构，所谓长度无限是指队列中的每个存储单元都是定长，访问其中的存储单元使用Offset 来访问，<code>Offset</code> 为 java long 类型，64 位，理论上在 100年内不会溢出，所以认为是长度无限。<br />也可以认为 <code>Message Queue</code> 是一个长度无限的数组，<code>Offset</code> 就是下标。</p><h3 id="消息消费模式"><a class="markdownIt-Anchor" href="#消息消费模式"></a> 消息消费模式</h3><blockquote><p>消息消费模式有两种：<code>Clustering</code>（集群消费）和<code>Broadcasting</code>（广播消费）。</p></blockquote><p>默认情况下就是集群消费，该模式下一个消费者集群共同消费一个主题的多个队列，一个队列只会被一个消费者消费，如果某个消费者挂掉，分组内其它消费者会接替挂掉的消费者继续消费。</p><p>而广播消费消息会发给消费者组中的每一个消费者进行消费。</p><h3 id="message-order"><a class="markdownIt-Anchor" href="#message-order"></a> Message Order</h3><blockquote><p><code>Message Order</code>（消息顺序）有两种：<code>Orderly</code>（顺序消费）和<code>Concurrently</code>（并行消费）。</p></blockquote><p>顺序消费表示消息消费的顺序同生产者为每个消息队列发送的顺序一致，所以如果正在处理全局顺序是强制性的场景，需要确保使用的主题只有一个消息队列。</p><p>并行消费不再保证消息顺序，消费的最大并行数量受每个消费者客户端指定的线程池限制。</p><h2 id="一次完整的通信流程"><a class="markdownIt-Anchor" href="#一次完整的通信流程"></a> 一次完整的通信流程</h2><p><code>Producer</code> 与 <code>NameServer</code>集群中的其中一个节点（随机选择）建立长连接，定期从 <code>NameServer</code> 获取 <code>Topic</code> 路由信息，并向提供 <code>Topic</code> 服务的 <code>Broker Master</code> 建立长连接，且定时向 <code>Broker</code> 发送心跳。</p><p><code>Producer</code> 只能将消息发送到 <code>Broker master</code>，但是 <code>Consumer</code> 则不一样，它同时和提供 <code>Topic</code> 服务的 <code>Master</code> 和 <code>Slave</code>建立长连接，既可以从 <code>Broker Master</code> 订阅消息，也可以从<code>Broker Slave</code> 订阅消息。</p><h3 id="nameservice启动流程"><a class="markdownIt-Anchor" href="#nameservice启动流程"></a> NameService启动流程</h3><p>在<code>org.apache.rocketmq.namesrv</code>目录下的<code>NamesrvStartup</code>这个启动类基本上描述了他的启动过程我们可以看一下代码：</p><ul><li>第一步是初始化配置</li><li>创建<code>NamesrvController</code>实例，并开启两个定时任务：</li><li>每隔10s扫描一次<code>Broker</code>，移除处于不激活的<code>Broker</code>；</li><li>每隔10s打印一次<code>KV</code>配置。<br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/nameserver-code.png" alt="" /></li><li>第三步注册钩子函数，启动服务器并监听<code>Broker</code>。</li></ul><p><code>NameService</code>还有很多东西的哈我这里就介绍他的启动流程，大家还可以去看看代码，还是很有意思的，比如路由注册会发送心跳包，还有心跳包的处理流程，路由删除，路由发现等等。</p><h3 id="producer-2"><a class="markdownIt-Anchor" href="#producer-2"></a> Producer</h3><p><code>Producer</code>是消息发送方，那他怎么发送的呢？</p><p>通过轮训，<code>Producer</code>轮训某个<code>Topic</code>下面的所有队列实现发送方的负载均衡</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/producer-img.png" alt="" /></p><h3 id="broker-2"><a class="markdownIt-Anchor" href="#broker-2"></a> Broker</h3><p><code>Broker</code>在<code>RocketMQ</code>中是进行处理<code>Producer</code>发送消息请求，<code>Consumer</code>消费消息的请求，并且进行消息的持久化，以及<code>HA</code>策略和服务端过滤，就是集群中很重的工作都是交给了<code>Broker</code>进行处理。</p><p><code>Broker</code>模块是通过<code>BrokerStartup</code>进行启动的，会实例化<code>BrokerController</code>，并且调用其初始化方法</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/broker-code.png" alt="" /></p><p>大家去看<code>Broker</code>的源码的话会发现，他的初始化流程很冗长，会根据配置创建很多线程池主要用来发送消息、拉取消息、查询消息、客户端管理和消费者管理，也有很多定时任务，同时也注册了很多请求处理器，用来发送拉取消息查询消息的。</p><h3 id="consumer-2"><a class="markdownIt-Anchor" href="#consumer-2"></a> Consumer</h3><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/consumer-img.png" alt="" /></p><p>消费端会通过<code>RebalanceService</code>线程，10秒钟做一次基于<code>Topic</code>下的所有队列负载。</p><h2 id="rocketmq优缺点"><a class="markdownIt-Anchor" href="#rocketmq优缺点"></a> RocketMq优缺点</h2><p>RocketMQ优点:</p><ol><li>单机吞吐量：十万级</li><li>可用性：非常高，分布式架构</li><li>消息可靠性：经过参数优化配置，消息可以做到0丢失</li><li>功能支持：MQ功能较为完善，还是分布式的，扩展性好</li><li>支持10亿级别的消息堆积，不会因为堆积导致性能下降</li><li>源码是java，我们可以自己阅读源码，定制自己公司的MQ，可以掌控</li><li>天生为金融互联网领域而生，对于可靠性要求很高的场景，尤其是电商里面的订单扣款，以及业务削峰，在大量交易涌入时，后端可能无法及时处理的情况</li><li><code>RoketMQ</code>在稳定性上可能更值得信赖，这些业务场景在阿里双11已经经历了多次考验，如果你的业务有上述并发场景，建议可以选择RocketMQ</li></ol><p>RocketMQ缺点:</p><ol><li>支持的客户端语言不多，目前是<code>java</code>及<code>c++</code>，其中<code>c++</code>不成熟</li><li>社区活跃度不是特别活跃那种</li><li>没有在 <code>mq</code> 核心中去实现<code>JMS</code>等接口，有些系统要迁移需要修改大量代码</li></ol><h2 id="rocketmq消息去重"><a class="markdownIt-Anchor" href="#rocketmq消息去重"></a> RocketMq消息去重</h2><p><strong>去重原则</strong>：使用业务端逻辑保持幂等性</p><p><strong>幂等性</strong>：就是用户对于同一操作发起的一次请求或者多次请求的结果是一致的，不会因为多次点击而产生了副作用，数据库的结果都是唯一的，不可变的。<br />只要保持幂等性，不管来多少条重复消息，最后处理的结果都一样，需要业务端来实现。</p><p><strong>去重策略</strong>：保证每条消息都有唯一编号(比如唯一流水号)，且保证消息处理成功与去重表的日志同时出现。<br />建立一个消息表，拿到这个消息做数据库的insert操作。给这个消息做一个唯一主键（primary key）或者唯一约束，那么就算出现重复消费的情况，就会导致主键冲突，那么就不再处理这条消息。</p><h2 id="rocketmq消息重复"><a class="markdownIt-Anchor" href="#rocketmq消息重复"></a> RocketMq消息重复</h2><p>消息领域有一个对消息投递的QoS定义，分为：</p><ul><li>最多一次（At most once）</li><li>至少一次（At least once）</li><li>仅一次（ Exactly once）</li></ul><blockquote><p>QoS：Quality of Service，服务质量</p></blockquote><p>几乎所有的<code>MQ</code>产品都声称自己做到了<code>At least once</code>。<br />既然是至少一次，那避免不了消息重复，尤其是在分布式网络环境下。<br />比如：网络原因闪断，<code>ACK</code>返回失败等等故障，确认信息没有传送到消息队列，导致消息队列不知道自己已经消费过该消息了，再次将该消息分发给其他的消费者。<br />不同的消息队列发送的确认信息形式不同，例如<code>RabbitMQ</code>是发送一个<code>ACK</code>确认消息，<code>RocketMQ</code>是返回一个<code>CONSUME_SUCCESS</code>成功标志，<code>Kafka</code>实际上有个<code>offset</code>的概念。<br /><code>RocketMQ</code>没有内置消息去重的解决方案，最新版本是否支持还需确认。</p><h2 id="rocketmq消息的可用性"><a class="markdownIt-Anchor" href="#rocketmq消息的可用性"></a> RocketMq消息的可用性</h2><p>当我们选择好了集群模式之后，那么我们需要关心的就是怎么去存储和复制这个数据，<code>RocketMQ</code>对消息的刷盘提供了同步和异步的策略来满足我们的，当我们选择同步刷盘之后，如果刷盘超时会给返回<code>FLUSH_DISK_TIMEOUT</code>，如果是异步刷盘不会返回刷盘相关信息，选择同步刷盘可以尽最大程度满足我们的消息不会丢失。<br />除了存储有选择之后，我们的主从同步提供了同步和异步两种模式来进行复制，当然选择同步可以提升可用性，但是消息的发送RT时间会下降10%左右。<br /><code>RocketMQ</code>采用的是混合型的存储结构，即为<code>Broker</code>单个实例下所有的队列共用一个日志数据文件（即为<code>CommitLog</code>）来存储。<br />而<code>Kafka</code>采用的是独立型的存储结构，每个队列一个文件。<br />这里帅丙认为，<code>RocketMQ</code>采用混合型存储结构的缺点在于，会存在较多的随机读操作，因此读的效率偏低。同时消费消息需要依赖ConsumeQueue，构建该逻辑消费队列需要一定开销。</p><h2 id="rocketmq刷盘实现"><a class="markdownIt-Anchor" href="#rocketmq刷盘实现"></a> RocketMq刷盘实现</h2><p><code>Broker</code> 在消息的存取时直接操作的是内存（内存映射文件），这可以提供系统的吞吐量，但是无法避免机器掉电时数据丢失，所以需要持久化到磁盘中。<br />刷盘的最终实现都是使用<code>NIO</code>中的 <code>MappedByteBuffer.force()</code> 将映射区的数据写入到磁盘，如果是同步刷盘的话，在<code>Broker</code>把消息写到<code>CommitLog</code>映射区后，就会等待写入完成。<br />异步而言，只是唤醒对应的线程，不保证执行的时机，流程如图所示。</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/rocket-wirte-disk.png" alt="" /></p><h2 id="rocketmq顺序消息"><a class="markdownIt-Anchor" href="#rocketmq顺序消息"></a> RocketMq顺序消息</h2><p>生产者消费者一般需要保证顺序消息的话，可能就是一个业务场景下的，比如订单的创建、支付、发货、收货。<br />那这些东西是不是一个订单号呢？一个订单的肯定是一个订单号的说，那简单了呀。<br />一个<code>topic</code>下有多个队列，为了保证发送有序，<code>RocketMQ</code>提供了<code>MessageQueueSelector</code>队列选择机制，他有三种实现:</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/message-queue-selector.png" alt="" /></p><p>我们可使用<code>Hash</code>取模法，让同一个订单发送到同一个队列中，再使用同步发送，只有同个订单的创建消息发送成功，再发送支付消息。这样，我们保证了发送有序。<br /><code>RocketMQ</code>的<code>topic</code>内的队列机制,可以保证存储满足<strong>FIFO</strong>（<code>First Input First Output</code> 简单说就是指先进先出）,剩下的只需要消费者顺序消费即可。<br /><code>RocketMQ</code>仅保证顺序发送，顺序消费由消费者业务保证!!!<br />这里很好理解，一个订单你发送的时候放到一个队列里面去，你同一个的订单号Hash一下是不是还是一样的结果，那肯定是一个消费者消费，那顺序是不是就保证了？<br />真正的顺序消费不同的中间件都有自己的不同实现我这里就举个例子，大家思路理解下。</p><h2 id="rocketmq分布式事务"><a class="markdownIt-Anchor" href="#rocketmq分布式事务"></a> RocketMq分布式事务</h2><h3 id="half-message半消息"><a class="markdownIt-Anchor" href="#half-message半消息"></a> Half Message(半消息)</h3><p>是指暂不能被<code>Consumer</code>消费的消息。<code>Producer</code> 已经把消息成功发送到了 <code>Broker</code> 端，但此消息被标记为暂不能投递状态，处于该种状态下的消息称为半消息。需要 <code>Producer</code></p><p>对消息的<strong>二次确认</strong>后，<code>Consumer</code>才能去消费它。</p><h3 id="消息回查"><a class="markdownIt-Anchor" href="#消息回查"></a> 消息回查</h3><p>由于网络闪段，生产者应用重启等原因。导致 <code>Producer</code> 端一直没有对 <code>Half Message</code>(半消息) 进行 二次确认。这是<code>Brock</code>服务器会定时扫描长期处于半消息的消息，会<br />主动询问 <code>Producer</code>端 该消息的最终状态(<code>Commit</code>或者<code>Rollback</code>),该消息即为 消息回查。</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/rocket-message-recheck.png" alt="" /></p><ol><li>A服务先发送个<code>Half Message</code>给<code>Brock</code>端，消息中携带 B服务 即将要+100元的信息。</li><li>当A服务知道<code>Half Message</code>发送成功后，那么开始第3步执行本地事务。</li><li>执行本地事务(会有三种情况1、执行成功。2、执行失败。3、网络等原因导致没有响应)</li><li>如果本地事务成功，那么<code>Product</code>像<code>Brock</code>服务器发送<code>Commit</code>,这样B服务就可以消费该<code>message</code>。</li><li>如果本地事务失败，那么<code>Product</code>像<code>Brock</code>服务器发送<code>Rollback</code>,那么就会直接删除上面这条半消息。</li><li>如果因为网络等原因迟迟没有返回失败还是成功，那么会执行<code>RocketMQ</code>的回调接口,来进行事务的回查。</li></ol><h2 id="rocketmq消息过滤"><a class="markdownIt-Anchor" href="#rocketmq消息过滤"></a> RocketMq消息过滤</h2><ul><li><code>Broker</code>端消息过滤  在<code>Broker</code>中，按照<code>Consumer</code>的要求做过滤，优点是减少了对于<code>Consumer</code>无用消息的网络传输。缺点是增加了<code>Broker</code>的负担，实现相对复杂。</li><li><code>Consumer</code>端消息过滤这种过滤方式可由应用完全自定义实现，但是缺点是很多无用的消息要传输到<code>Consumer</code>端。</li></ul><h2 id="broker的buffer问题"><a class="markdownIt-Anchor" href="#broker的buffer问题"></a> Broker的Buffer问题</h2><p><code>Broker</code>的<code>Buffer</code>通常指的是<code>Broker</code>中一个队列的内存<code>Buffer</code>大小，这类<code>Buffer</code>通常大小有限。</p><p>另外，<code>RocketMQ</code>没有内存<code>Buffer</code>概念，<code>RocketMQ</code>的队列都是持久化磁盘，数据定期清除。</p><p><code>RocketMQ</code>同其他MQ有非常显著的区别，<code>RocketMQ</code>的内存<code>Buffer</code>抽象成一个无限长度的队列，不管有多少数据进来都能装得下，这个无限是有前提的，Broker会定期删除过期的数据。</p><p>例如<code>Broker</code>只保存3天的消息，那么这个<code>Buffer</code>虽然长度无限，但是3天前的数据会被从队尾删除。</p><h2 id="rocketmq回溯消费"><a class="markdownIt-Anchor" href="#rocketmq回溯消费"></a> RocketMq回溯消费</h2><p>回溯消费是指<code>Consumer</code>已经消费成功的消息，由于业务上的需求需要重新消费，要支持此功能，<code>Broker</code>在向<code>Consumer</code>投递成功消息后，消息仍然需要保留。并且重新消费一般是按照时间维度。<br />例如由于<code>Consumer</code>系统故障，恢复后需要重新消费1小时前的数据，那么<code>Broker</code>要提供一种机制，可以按照时间维度来回退消费进度。<br /><code>RocketMQ</code>支持按照时间回溯消费，时间维度精确到毫秒，可以向前回溯，也可以向后回溯。</p><h2 id="rocketmq消息堆积"><a class="markdownIt-Anchor" href="#rocketmq消息堆积"></a> RocketMq消息堆积</h2><blockquote><p>消息中间件的主要功能是异步解耦，还有个重要功能是挡住前端的数据洪峰，保证后端系统的稳定性，这就要求消息中间件具有一定的消息堆积能力，消息堆积分以下两种情况：</p></blockquote><ul><li>消息堆积在内存<code>Buffer</code>，一旦超过内存<code>Buffer</code>，可以根据一定的丢弃策略来丢弃消息，如CORBA Notification规范中描述。适合能容忍丢弃消息的业务，这种情况消息的堆积能力主要在于内存Buffer大小，而且消息堆积后，性能下降不会太大，因为内存中数据多少对于对外提供的访问能力影响有限。</li><li>消息堆积到持久化存储系统中，例如<code>DB</code>，<code>KV</code>存储，文件记录形式。 当消息不能在内存<code>Cache</code>命中时，要不可避免的访问磁盘，会产生大量读IO，读IO的吞吐量直接决定了消息堆积后的访问能力。</li><li>评估消息堆积能力主要有以下四点：</li><li>消息能堆积多少条，多少字节？即消息的堆积容量。</li><li>消息堆积后，发消息的吞吐量大小，是否会受堆积影响？</li><li>消息堆积后，正常消费的<code>Consumer</code>是否会受影响？</li><li>消息堆积后，访问堆积在磁盘的消息时，吞吐量有多大？</li></ul><h2 id="rocketmq定时消息"><a class="markdownIt-Anchor" href="#rocketmq定时消息"></a> RocketMq定时消息</h2><p>定时消息是指消息发到<code>Broker</code>后，不能立刻被<code>Consumer</code>消费，要到特定的时间点或者等待特定的时间后才能被消费。</p><p>如果要支持任意的时间精度，在<code>Broker</code>层面，必须要做消息排序，如果再涉及到持久化，那么消息排序要不可避免的产生巨大性能开销。</p><p><code>RocketMQ</code>支持定时消息，但是不支持任意时间精度，支持特定的level，例如定时5s，10s，1m等。</p><p>本文转自<a href="https://juejin.im/post/6844904008629354504">《浅入浅出》-RocketMQ</a></p>]]></content>
      
      
      <categories>
          
          <category> mq </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>消息队列(MQ)</title>
      <link href="post/mq.html"/>
      <url>post/mq.html</url>
      
        <content type="html"><![CDATA[<h2 id="什么是-mq"><a class="markdownIt-Anchor" href="#什么是-mq"></a> 什么是 MQ</h2><div class="note info flat"><p><code>MQ</code>(消息队列-Message Queue)就是基础数据结构中的<code>先进先出</code>的一种数据机构。想一下，生活中买东西，需要排队，先排的人先买消费，就是典型的<code>先进先出</code>。</p></div><h2 id="为什么要用消息队列"><a class="markdownIt-Anchor" href="#为什么要用消息队列"></a> 为什么要用消息队列</h2><h3 id="解耦"><a class="markdownIt-Anchor" href="#解耦"></a> 解耦</h3><p>看这么个场景。<code>A</code> 系统发送数据到 <code>BCD</code> 三个系统，通过接口调用发送。如果 <code>E</code> 系统也要这个数据呢？那如果 <code>C</code> 系统现在不需要了呢？<code>A</code> 系统负责人几乎崩溃…</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://doocs.github.io/advanced-java/docs/high-concurrency/images/mq-1.png" alt="" /></p><p>在这个场景中，<code>A</code> 系统跟其它各种乱七八糟的系统严重耦合，<code>A</code> 系统产生一条比较关键的数据，很多系统都需要 <code>A</code> 系统将这个数据发送过来。<code>A</code> 系统要时时刻刻考虑 <code>BCDE</code> 四个系统如果挂了该咋办？要不要重发，要不要把消息存起来？头发都白了啊！</p><p>如果使用 <code>MQ</code>，<code>A</code> 系统产生一条数据，发送到 <code>MQ</code> 里面去，哪个系统需要数据自己去 <code>MQ</code> 里面消费。如果新系统需要数据，直接从 <code>MQ</code> 里消费即可；如果某个系统不需要这条数据了，就取消对 <code>MQ</code> 消息的消费即可。这样下来，<code>A</code> 系统压根儿不需要去考虑要给谁发送数据，不需要维护这个代码，也不需要考虑人家是否调用成功、失败超时等情况。</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://doocs.github.io/advanced-java/docs/high-concurrency/images/mq-2.png" alt="" /></p><blockquote><p><strong>总结</strong>：通过一个 <code>MQ</code>，<code>Pub/Sub</code> 发布订阅消息这么一个模型，A 系统就跟其它系统彻底解耦了。</p></blockquote><h3 id="异步"><a class="markdownIt-Anchor" href="#异步"></a> 异步</h3><p>再来看一个场景，<code>A</code> 系统接收一个请求，需要在自己本地写库，还需要在 <code>BCD</code> 三个系统写库，自己本地写库要 3ms，<code>BCD</code> 三个系统分别写库要 300ms、450ms、200ms。最终请求总延时是 3 + 300 + 450 + 200 = 953ms，接近 1s，用户感觉搞个什么东西，慢死了慢死了。用户通过浏览器发起请求，等待个 1s，这几乎是不可接受的。</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://doocs.github.io/advanced-java/docs/high-concurrency/images/mq-3.png" alt="" /></p><p>一般互联网类的企业，对于用户直接的操作，一般要求是每个请求都必须在 200 ms 以内完成，对用户几乎是无感知的。</p><p>如果使用 <code>MQ</code>，那么 <code>A</code> 系统连续发送 3 条消息到 <code>MQ</code> 队列中，假如耗时 5ms，<code>A</code> 系统从接受一个请求到返回响应给用户，总时长是 3 + 5 = 8ms，对于用户而言，其实感觉上就是点个按钮，8ms 以后就直接返回了，爽！网站做得真好，真快！</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://doocs.github.io/advanced-java/docs/high-concurrency/images/mq-4.png" alt="" /></p><h3 id="削峰"><a class="markdownIt-Anchor" href="#削峰"></a> 削峰</h3><p>每天 0:00 到 12:00，<code>A</code> 系统风平浪静，每秒并发请求数量就 50 个。结果每次一到 12:00 ~ 13:00 ，每秒并发请求数量突然会暴增到 5k+ 条。但是系统是直接基于 <code>MySQL</code> 的，大量的请求涌入 <code>MySQL</code>，每秒钟对 <code>MySQL</code> 执行约 5k 条 <code>SQL</code>。</p><p>一般的 <code>MySQL</code>，扛到每秒 2k 个请求就差不多了，如果每秒请求到 5k 的话，可能就直接把 <code>MySQL</code> 给打死了，导致系统崩溃，用户也就没法再使用系统了。</p><p>但是高峰期一过，到了下午的时候，就成了低峰期，可能也就 1w 的用户同时在网站上操作，每秒中的请求数量可能也就 50 个请求，对整个系统几乎没有任何的压力。</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://doocs.github.io/advanced-java/docs/high-concurrency/images/mq-5.png" alt="" /></p><p>如果使用 <code>MQ</code>，每秒 5k 个请求写入 <code>MQ</code>，<code>A</code> 系统每秒钟最多处理 2k 个请求，因为 <code>MySQL</code> 每秒钟最多处理 2k 个。<code>A</code> 系统从 <code>MQ</code> 中慢慢拉取请求，每秒钟就拉取 2k 个请求，不要超过自己每秒能处理的最大请求数量就 ok，这样下来，哪怕是高峰期的时候，<code>A</code> 系统也绝对不会挂掉。而 <code>MQ</code> 每秒钟 5k 个请求进来，就 2k 个请求出去，结果就导致在中午高峰期（1 个小时），可能有几十万甚至几百万的请求积压在 MQ 中。</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://doocs.github.io/advanced-java/docs/high-concurrency/images/mq-6.png" alt="" /></p><blockquote><p>这个短暂的高峰期积压是 ok 的，因为高峰期过了之后，每秒钟就 50 个请求进 <code>MQ</code>，但是 <code>A</code> 系统依然会按照每秒 2k 个请求的速度在处理。所以说，只要高峰期一过，<code>A</code> 系统就会快速将积压的消息给解决掉。</p></blockquote><h2 id="mq的优缺点"><a class="markdownIt-Anchor" href="#mq的优缺点"></a> MQ的优缺点</h2><blockquote><p>优点上面已经说了，就是在特殊场景下有其对应的好处，解耦、异步、削峰。</p></blockquote><p>缺点有以下几个:</p><ul><li>系统可用性降低</li></ul><blockquote><p>系统引入的外部依赖越多，越容易挂掉。本来你就是 <code>A</code> 系统调用 <code>BCD</code> 三个系统的接口就好了，<code>ABCD</code> 四个系统还好好的，没啥问题，你偏加个 <code>MQ</code> 进来，万一 <code>MQ</code> 挂了咋整？<code>MQ</code> 一挂，整套系统崩溃，你不就完了？如何<a href="#mq%E7%9A%84%E9%AB%98%E5%8F%AF%E7%94%A8">保证消息队列的高可用</a>。</p></blockquote><ul><li>系统复杂度提高</li></ul><blockquote><p>硬生生加个 MQ 进来，你怎么<a href="#mq%E7%9A%84%E5%B9%82%E7%AD%89%E6%80%A7">保证消息没有重复消费</a>？怎么<a href="#mq%E9%98%B2%E6%AD%A2%E6%B6%88%E6%81%AF%E4%B8%A2%E5%A4%B1">处理消息丢失的情况</a>？怎么<a href="#mq%E7%9A%84%E9%A1%BA%E5%BA%8F%E6%80%A7">保证消息传递的顺序性</a>？头大头大，问题一大堆，痛苦不已。</p></blockquote><ul><li>一致性问题</li></ul><blockquote><p><code>A</code> 系统处理完了直接返回成功了，人都以为你这个请求就成功了；但是问题是，要是 <code>BCD</code> 三个系统那里，<code>BD</code> 两个系统写库成功了，结果 <code>C</code> 系统写库失败了，咋整？你这数据就不一致了。</p></blockquote><p>所以消息队列实际是一种非常复杂的架构，你引入它有很多好处，但是也得针对它带来的坏处做各种额外的技术方案和架构来规避掉，做好之后，你会发现，妈呀，系统复杂度提升了一个数量级，也许是复杂了 10 倍。但是关键时刻，用，还是得用的。</p><h2 id="常见mq中间件对比"><a class="markdownIt-Anchor" href="#常见mq中间件对比"></a> 常见MQ中间件对比</h2><table><thead><tr><th>特性</th><th>ActiveMQ</th><th>RabbitMQ</th><th><a href="/post/rocketmq.html">RocketMQ</a></th><th>Kafka</th></tr></thead><tbody><tr><td>单机吞吐量</td><td>万级，比 <code>RocketMQ</code>、<code>Kafka</code> 低一个数量级</td><td>同 <code>ActiveMQ</code></td><td>10 万级，支撑高吞吐</td><td>10 万级，高吞吐，一般配合大数据类的系统来进行实时数据计算、日志采集等场景</td></tr><tr><td><code>topic</code> 数量对吞吐量的影响</td><td></td><td></td><td><code>topic</code> 可以达到几百/几千的级别，吞吐量会有较小幅度的下降，这是 <code>RocketMQ</code> 的一大优势，在同等机器下，可以支撑大量的 <code>topic</code></td><td><code>topic</code> 从几十到几百个时候，吞吐量会大幅度下降，在同等机器下，<code>Kafka</code> 尽量保证 <code>topic</code> 数量不要过多，如果要支撑大规模的 <code>topic</code>，需要增加更多的机器资源</td></tr><tr><td>时效性</td><td>ms 级</td><td>微秒级，这是 <code>RabbitMQ</code> 的一大特点，延迟最低</td><td>ms 级</td><td>延迟在 ms 级以内</td></tr><tr><td>可用性</td><td>高，基于主从架构实现高可用</td><td>同 <code>ActiveMQ</code></td><td>非常高，分布式架构</td><td>非常高，分布式，一个数据多个副本，少数机器宕机，不会丢失数据，不会导致不可用</td></tr><tr><td>消息可靠性</td><td>有较低的概率丢失数据</td><td>基本不丢</td><td>经过参数优化配置，可以做到 0 丢失</td><td>同 <code>RocketMQ</code></td></tr><tr><td>功能支持</td><td><code>MQ</code> 领域的功能极其完备</td><td>基于 <code>erlang</code> 开发，并发能力很强，性能极好，延时很低</td><td><code>MQ</code> 功能较为完善，还是分布式的，扩展性好</td><td>功能较为简单，主要支持简单的 <code>MQ</code> 功能，在大数据领域的实时计算以及日志采集被大规模使用</td></tr></tbody></table><blockquote><p>一般的业务系统要引入 <code>MQ</code>，最早大家都用 <code>ActiveMQ</code>，但是现在确实大家用的不多了，没经过大规模吞吐量场景的验证，社区也不是很活跃，所以大家还是算了吧，我个人不推荐用这个了；<br />后来大家开始用 <code>RabbitMQ</code>，但是确实 <code>erlang</code> 语言阻止了大量的 <code>Java</code> 工程师去深入研究和掌控它，对公司而言，几乎处于不可控的状态，但是确实人家是开源的，比较稳定的支持，活跃度也高；<br />不过现在确实越来越多的公司会去用 <code>RocketMQ</code>，确实很不错，毕竟是阿里出品，但社区可能有突然黄掉的风险（目前 <code>RocketMQ</code> 已捐给 <code>Apache</code>，但 <code>GitHub</code> 上的活跃度其实不算高）对自己公司技术实力有绝对自信的，推荐用 <code>RocketMQ</code>，否则回去老老实实用 <code>RabbitMQ</code> 吧，人家有活跃的开源社区，绝对不会黄。<br />所以中小型公司，技术实力较为一般，技术挑战不是特别高，用 <code>RabbitMQ</code> 是不错的选择；大型公司，基础架构研发实力较强，用 <code>RocketMQ</code> 是很好的选择。<br />如果是大数据领域的实时计算、日志采集等场景，用 <code>Kafka</code> 是业内标准的，绝对没问题，社区活跃度很高，绝对不会黄，何况几乎是全世界这个领域的事实性规范。</p></blockquote><h2 id="mq的高可用"><a class="markdownIt-Anchor" href="#mq的高可用"></a> MQ的高可用</h2><h3 id="rabbitmq-的高可用性"><a class="markdownIt-Anchor" href="#rabbitmq-的高可用性"></a> RabbitMQ 的高可用性</h3><div class="note info flat"><p><code>RabbitMQ</code> 是比较有代表性的，因为是<code>基于主从</code>（非分布式）做高可用性的，我们就以 <code>RabbitMQ</code> 为例子讲解第一种 <code>MQ</code> 的高可用性怎么实现。<br /><code>RabbitMQ</code> 有三种模式：<strong>单机模式</strong>、<strong>普通集群模式</strong>、<strong>镜像集群模式</strong>。</p></div><h4 id="单机模式"><a class="markdownIt-Anchor" href="#单机模式"></a> 单机模式</h4><p>单机模式，就是 Demo 级别的，一般就是你本地启动了玩玩儿的 😄，没人生产用单机模式。</p><h4 id="普通集群模式无高可用性"><a class="markdownIt-Anchor" href="#普通集群模式无高可用性"></a> 普通集群模式（无高可用性）</h4><p>普通集群模式，意思就是在多台机器上启动多个 <code>RabbitMQ</code> 实例，每个机器启动一个。你创建的 <code>queue</code>，只会放在一个 RabbitMQ 实例上，但是每个实例都同步 <code>queue</code> 的元数据（元数据可以认为是 <code>queue</code> 的一些配置信息，通过元数据，可以找到 <code>queue</code> 所在实例）。你消费的时候，实际上如果连接到了另外一个实例，那么那个实例会从 <code>queue</code> 所在实例上拉取数据过来。<br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://doocs.github.io/advanced-java/docs/high-concurrency/images/mq-7.png" alt="" /></p><p>这种方式确实很麻烦，也不怎么好，没做到所谓的<strong>分布式</strong>，就是个普通集群。因为这导致你要么消费者每次随机连接一个实例然后拉取数据，要么固定连接那个 <code>queue</code> 所在实例消费数据，前者有<strong>数据拉取的开销</strong>，后者导致<strong>单实例性能瓶颈</strong>。</p><p>而且如果那个放 <code>queue</code> 的实例宕机了，会导致接下来其他实例就无法从那个实例拉取，如果你开启了消息持久化，让 <code>RabbitMQ</code> 落地存储消息的话，消息不一定会丢，得等这个实例恢复了，然后才可以继续从这个 <code>queue</code> 拉取数据。</p><p>所以这个事儿就比较尴尬了，这就没有什么所谓的<strong>高可用性</strong>，这方案主要是<strong>提高吞吐量</strong>的，就是说让集群中多个节点来服务某个 <code>queue</code> 的读写操作。</p><h4 id="镜像集群模式高可用性"><a class="markdownIt-Anchor" href="#镜像集群模式高可用性"></a> 镜像集群模式（高可用性）</h4><p>这种模式，才是所谓的 <code>RabbitMQ</code> 的<strong>高可用模式</strong>。跟普通集群模式不一样的是，在镜像集群模式下，你创建的 queue，无论元数据还是 <code>queue</code> 里的消息都会存在于多个实例上，就是说，每个 <code>RabbitMQ</code> 节点都有这个 <code>queue</code> 的一个完整镜像，包含 queue 的全部数据的意思。然后每次你写消息到 <code>queue</code> 的时候，都会自动把消息同步到多个实例的 <code>queue</code> 上。</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://doocs.github.io/advanced-java/docs/high-concurrency/images/mq-8.png" alt="" /></p><p>那么如何开启这个<strong>镜像集群模式</strong>呢？其实很简单，<code>RabbitMQ</code> 有很好的管理控制台，就是在后台新增一个策略，这个策略是<strong>镜像集群模式的策略</strong>，指定的时候是可以要求数据同步到所有节点的，也可以要求同步到指定数量的节点，再次创建 <code>queue</code> 的时候，应用这个策略，就会自动将数据同步到其他的节点上去了。</p><p>这样的话，好处在于，你任何一个机器宕机了，没事儿，其它机器（节点）还包含了这个 <code>queue</code> 的完整数据，别的 <code>consumer</code> 都可以到其它节点上去消费数据。坏处在于，第一，这个性能开销也太大了吧，消息需要同步到所有机器上，导致网络带宽压力和消耗很重！第二，这么玩儿，不是分布式的，就<strong>没有扩展性可言</strong>了，如果某个 queue 负载很重，你加机器，新增的机器也包含了这个 queue 的所有数据，并<strong>没有办法线性扩展</strong>你的 queue。你想，如果这个 queue 的数据量很大，大到这个机器上的容量无法容纳了，此时该怎么办呢？</p><h3 id="kafka-的高可用性"><a class="markdownIt-Anchor" href="#kafka-的高可用性"></a> Kafka 的高可用性</h3><p><code>Kafka</code> 一个最基本的架构认识：由多个 <code>broker</code> 组成，每个 <code>broker</code> 是一个节点；你创建一个 <code>topic</code>，这个 <code>topic</code> 可以划分为多个 <code>partition</code>，每个 <code>partition</code> 可以存在于不同的 <code>broker</code> 上，每个 <code>partition</code> 就放一部分数据。<br />这就是天然的<strong>分布式消息队列</strong>，就是说一个 <code>topic</code> 的数据，是分散放在多个机器上的，每个机器就放一部分数据。<br />实际上 <code>RabbitMQ</code> 之类的，并不是<strong>分布式消息队列</strong>，它就是传统的消息队列，只不过提供了一些集群、HA(High Availability, 高可用性) 的机制而已，因为无论怎么玩儿，<code>RabbitMQ</code> 一个 <code>queue</code> 的数据都是放在一个节点里的，<strong>镜像集群</strong>下，也是每个节点都放这个 <code>queue</code> 的完整数据。<br /><code>Kafka</code> 0.8 以前，是没有 <code>HA</code> 机制的，就是任何一个 <code>broker</code> 宕机了，那个 <code>broker</code> 上的 <code>partition</code> 就废了，没法写也没法读，没有什么高可用性可言。<br />比如说，我们假设创建了一个 <code>topic</code>，指定其 <code>partition</code> 数量是 3 个，分别在三台机器上。但是，如果第二台机器宕机了，会导致这个 <code>topic</code> 的 1/3 的数据就丢了，因此这个是做不到高可用的。<br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://doocs.github.io/advanced-java/docs/high-concurrency/images/kafka-before.png" alt="" /></p><p><code>Kafka</code> 0.8 以后，提供了 <code>HA</code> 机制，就是 <code>replica</code>（复制品） 副本机制。每个 <code>partition</code> 的数据都会同步到其它机器上，形成自己的多个 <code>replica</code> 副本。所有 <code>replica</code> 会选举一个 <code>leader</code> 出来，那么生产和消费都跟这个 <code>leader</code> 打交道，然后其他 <code>replica</code> 就是 <code>follower</code>。写的时候，<code>leader</code> 会负责把数据同步到所有 <code>follower</code> 上去，读的时候就直接读 <code>leader</code> 上的数据即可。只能读写 <code>leader</code>？很简单，要是你可以随意读写每个 <code>follower</code>，那么就要 <code>care</code> 数据一致性的问题，系统复杂度太高，很容易出问题。<code>Kafka</code> 会均匀地将一个 <code>partition</code> 的所有 <code>replica</code> 分布在不同的机器上，这样才可以提高<strong>容错性</strong>。<br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://doocs.github.io/advanced-java/docs/high-concurrency/images/kafka-after.png" alt="" /></p><p>这么搞，就有所谓的<strong>高可用性</strong>了，因为如果某个 <code>broker</code> 宕机了，没事儿，那个 <code>broker</code> 上面的 <code>partition</code> 在其他机器上都有副本的。如果这个宕机的 <code>broker</code> 上面有某个 <code>partition</code> 的 <code>leader</code>，那么此时会从 <code>follower</code> 中重新选举一个新的 <code>leader</code> 出来，大家继续读写那个新的 <code>leader</code> 即可。这就有所谓的高可用性了。</p><p><strong>写数据</strong>的时候，生产者就写 <code>leader</code>，然后 <code>leader</code> 将数据落地写本地磁盘，接着其他 <code>follower</code> 自己主动从 <code>leader</code> 来 <code>pull</code> 数据。一旦所有 <code>follower</code> 同步好数据了，就会发送 ack 给 <code>leader</code>，<code>leader</code> 收到所有 <code>follower</code> 的 <code>ack</code> 之后，就会返回写成功的消息给<strong>生产者</strong>。（当然，这只是其中一种模式，还可以适当调整这个行为）</p><p>消费的时候，只会从 <code>leader</code> 去读，但是只有当一个消息已经被所有 <code>follower</code> 都同步成功返回 <code>ack</code> 的时候，这个消息才会被消费者读到。</p><h2 id="mq的幂等性"><a class="markdownIt-Anchor" href="#mq的幂等性"></a> MQ的幂等性</h2><blockquote><p><code>RabbitMQ</code>、<code>RocketMQ</code>、<code>Kafka</code>，都有可能会出现消息重复消费的问题，正常。因为这问题通常不是 <code>MQ</code> 自己保证的，是由我们开发来保证的。挑一个 <code>Kafka</code> 来举个例子，说说怎么重复消费吧。</p></blockquote><p>重复消费的问题是由开发者去解决，而不是MQ去解决。重点在消费者，由消费者，也就是<code>MQ</code>客户端去解决。</p><p>其实还是得结合业务来思考，给出几个思路：</p><ul><li>比如你拿个数据要写库，你先根据主键查一下，如果这数据都有了，你就别插入了，<code>update</code> 一下好吧。</li><li>比如你是写 <code>Redis</code>，那没问题了，反正每次都是 <code>set</code>，天然幂等性。</li><li>比如你不是上面两个场景，那做的稍微复杂一点，你需要让生产者发送每条数据的时候，里面加一个全局唯一的 <code>id</code>，类似订单 <code>id</code> 之类的东西，然后你这里消费到了之后，先根据这个 <code>id</code> 去比如 <code>Redis</code> 里查一下，之前消费过吗？如果没有消费过，你就处理，然后这个 <code>id</code> 写 <code>Redis</code>。如果消费过了，那你就别处理了，保证别重复处理相同的消息即可。</li><li>比如基于数据库的唯一键来保证重复数据不会重复插入多条。因为有唯一键约束了，重复数据插入只会报错，不会导致数据库中出现脏数据。</li></ul><h2 id="mq的顺序性"><a class="markdownIt-Anchor" href="#mq的顺序性"></a> MQ的顺序性</h2><p>我举个例子，我们以前做过一个 <code>mysql</code> <code>binlog</code> 同步的系统，压力还是非常大的，日同步数据要达到上亿，就是说数据从一个 mysql 库原封不动地同步到另一个 mysql 库里面去（<code>mysql</code> -&gt; <code>mysql</code>）。常见的一点在于说比如大数据 <code>team</code>，就需要同步一个 <code>mysql</code> 库过来，对公司的业务系统的数据做各种复杂的操作。</p><p>你在 <code>mysql</code> 里增删改一条数据，对应出来了增删改 3 条 <code>binlog</code> 日志，接着这三条 <code>binlog</code> 发送到 <code>MQ</code> 里面，再消费出来依次执行，起码得保证人家是按照顺序来的吧？不然本来是：增加、修改、删除；你愣是换了顺序给执行成删除、修改、增加，不全错了么。</p><p>本来这个数据同步过来，应该最后这个数据被删除了；结果你搞错了这个顺序，最后这个数据保留下来了，数据同步就出错了。</p><p>先看看顺序会错乱的俩场景：</p><ul><li><strong>RabbitMQ</strong>: 一个 <code>queue</code>，多个 <code>consumer</code>。比如，生产者向 <code>RabbitMQ</code> 里发送了三条数据，顺序依次是 <strong>data1/data2/data3</strong>，压入的是 <code>RabbitMQ</code> 的一个内存队列。有三个消费者分别从 <code>MQ</code> 中消费这三条数据中的一条，结果消费者 2 先执行完操作，把 <strong>data2</strong> 存入数据库，然后是 <strong>data1/data3</strong>。这不明显乱了。</li></ul><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://doocs.github.io/advanced-java/docs/high-concurrency/images/rabbitmq-order-01.png" alt="" /></p><ul><li><strong>Kafka</strong>: 比如说我们建了一个 <code>topic</code>，有三个 <code>partition</code>。生产者在写的时候，其实可以指定一个 key，比如说我们指定了某个订单 id 作为 key，那么这个订单相关的数据，一定会被分发到同一个 <code>partition</code> 中去，而且这个 <code>partition</code> 中的数据一定是有顺序的。</li></ul><p>消费者从 <code>partition</code> 中取出来数据的时候，也一定是<strong>有顺序的</strong>。到这里，顺序还是 ok 的，没有错乱。接着，我们在消费者里可能会搞<strong>多个线程来并发处理消息</strong>。因为如果消费者是单线程消费处理，而处理比较耗时的话，比如处理一条消息耗时几十 ms，那么 1 秒钟只能处理几十条消息，这吞吐量太低了。而多个线程并发跑的话，顺序可能就乱掉了。</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://doocs.github.io/advanced-java/docs/high-concurrency/images/kafka-order-01.png" alt="" /></p><h3 id="rabbitmq"><a class="markdownIt-Anchor" href="#rabbitmq"></a> RabbitMQ</h3><ul><li>一个 <code>topic</code>，一个 <code>partition</code>，一个 <code>consumer</code>，内部单线程消费，单线程吞吐量太低，一般不会用这个。</li><li>写 N 个内存 <code>queue</code>，具有相同 <code>key</code> 的数据都到同一个内存 <code>queue</code>；然后对于 N 个线程，每个线程分别消费一个内存 <code>queue</code> 即可，这样就能保证顺序性。<br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://doocs.github.io/advanced-java/docs/high-concurrency/images/kafka-order-02.png" alt="" /></li></ul><h3 id="kafka"><a class="markdownIt-Anchor" href="#kafka"></a> Kafka</h3><p><code>kafka</code>一个<code>topic</code>，一个<code>partition</code>，一个<code>consumer</code>，但是<code>consumer</code>内部进行多线程消费，这样数据也会出现顺序错乱问题。</p><h2 id="mq防止消息丢失"><a class="markdownIt-Anchor" href="#mq防止消息丢失"></a> MQ防止消息丢失</h2><h3 id="rabbitmq-2"><a class="markdownIt-Anchor" href="#rabbitmq-2"></a> RabbitMQ</h3><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://doocs.github.io/advanced-java/docs/high-concurrency/images/rabbitmq-message-lose.png" alt="" /></p><h4 id="生产者弄丢了数据"><a class="markdownIt-Anchor" href="#生产者弄丢了数据"></a> 生产者弄丢了数据</h4><p>生产者将数据发送到 <code>RabbitMQ</code> 的时候，可能数据就在半路给搞丢了，因为网络问题啥的，都有可能。</p><p>此时可以选择用 <code>RabbitMQ</code> 提供的事务功能，就是生产者发送数据之前开启 RabbitMQ 事务 channel.txSelect ，然后发送消息，如果消息没有成功被 <code>RabbitMQ</code> 接收到，那么生产者会收到异常报错，此时就可以回滚事务 <code>channel.txRollback</code> ，然后重试发送消息；如果收到了消息，那么可以提交事务 <code>channel.txCommit</code> 。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 开启事务</span></span><br><span class="line">channel.txSelect</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 这里发送消息</span></span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    channel.txRollback</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 这里再次重发这条消息</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 提交事务</span></span><br><span class="line">channel.txCommit</span><br></pre></td></tr></table></figure><p>但是问题是，<code>RabbitMQ</code> 事务机制（同步）一搞，基本上<strong>吞吐量会下来，因为太耗性能</strong>。</p><p>所以一般来说，如果你要确保说写 <code>RabbitMQ</code> 的消息别丢，可以开启 <code>confirm</code> 模式，在生产者那里设置开启 <code>confirm</code> 模式之后，你每次写的消息都会分配一个唯一的 <code>id</code>，然后如果写入了 <code>RabbitMQ</code> 中，<code>RabbitMQ</code> 会给你回传一个 <code>ack</code> 消息，告诉你说这个消息 <code>ok</code> 了。如果 <code>RabbitMQ</code> 没能处理这个消息，会回调你的一个 <code>nack</code> 接口，告诉你这个消息接收失败，你可以重试。而且你可以结合这个机制自己在内存里维护每个消息 <code>id</code> 的状态，如果超过一定时间还没接收到这个消息的回调，那么你可以重发。</p><p>事务机制和 <code>confirm</code> 机制最大的不同在于，<strong>事务机制是同步</strong>的，你提交一个事务之后会阻塞在那儿，但是 <code>confirm</code> 机制是异步的，你发送个消息之后就可以发送下一个消息，然后那个消息 <code>RabbitMQ</code> 接收了之后会异步回调你的一个接口通知你这个消息接收到了。</p><p>所以一般在生产者这块<strong>避免数据丢失</strong>，都是用 <code>confirm</code> 机制的。</p><h4 id="rabbitmq-弄丢了数据"><a class="markdownIt-Anchor" href="#rabbitmq-弄丢了数据"></a> RabbitMQ 弄丢了数据</h4><p>就是 <code>RabbitMQ</code> 自己弄丢了数据，这个你必须开启 <code>RabbitMQ</code> 的<strong>持久化</strong>，就是消息写入之后会持久化到磁盘，哪怕是 <code>RabbitMQ</code> 自己挂了，<strong>恢复之后会自动读取之前存储的数据</strong>，一般数据不会丢。除非极其罕见的是，RabbitMQ 还没持久化，自己就挂了，<strong>可能导致少量数据丢失</strong>，但是这个概率较小。</p><p>设置持久化有两个步骤：</p><ul><li><p>创建 <code>queue</code> 的时候将其设置为持久化<br />这样就可以保证 <code>RabbitMQ</code> 持久化 <code>queue</code> 的元数据，但是它是不会持久化 <code>queue</code> 里的数据的。</p></li><li><p>第二个是发送消息的时候将消息的 <code>deliveryMode</code> 设置为 2<br />就是将消息设置为持久化的，此时 <code>RabbitMQ</code> 就会将消息持久化到磁盘上去。</p></li></ul><p>必须要同时设置这两个持久化才行，<code>RabbitMQ</code> 哪怕是挂了，再次重启，也会从磁盘上重启恢复 <code>queue</code>，恢复这个 <code>queue</code> 里的数据。</p><p>注意，哪怕是你给 <code>RabbitMQ</code> 开启了持久化机制，也有一种可能，就是这个消息写到了 <code>RabbitMQ</code> 中，但是还没来得及持久化到磁盘上，结果不巧，此时 <code>RabbitMQ</code> 挂了，就会导致内存里的一点点数据丢失。</p><p>所以，持久化可以跟生产者那边的 <code>confirm</code> 机制配合起来，只有消息被持久化到磁盘之后，才会通知生产者 <code>ack</code> 了，所以哪怕是在持久化到磁盘之前，<code>RabbitMQ</code> 挂了，数据丢了，生产者收不到 <code>ack</code> ，你也是可以自己重发的。</p><h4 id="消费端弄丢了数据"><a class="markdownIt-Anchor" href="#消费端弄丢了数据"></a> 消费端弄丢了数据</h4><p><code>RabbitMQ</code> 如果丢失了数据，主要是因为你消费的时候，<strong>刚消费到，还没处理，结果进程挂了</strong>，比如重启了，那么就尴尬了，<code>RabbitMQ</code> 认为你都消费了，这数据就丢了。</p><p>这个时候得用 <code>RabbitMQ</code> 提供的 <code>ack</code> 机制，简单来说，就是你必须关闭 <code>RabbitMQ</code> 的自动 <code>ack</code> ，可以通过一个 <code>api</code> 来调用就行，然后每次你自己代码里确保处理完的时候，再在程序里 <code>ack</code> 一把。这样的话，如果你还没处理完，不就没有 <code>ack</code> 了？那 <code>RabbitMQ</code> 就认为你还没处理完，这个时候 <code>RabbitMQ</code> 会把这个消费分配给别的 <code>consumer</code> 去处理，消息是不会丢的。</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://doocs.github.io/advanced-java/docs/high-concurrency/images/rabbitmq-message-lose-solution.png" alt="" /></p><h3 id="kafka-2"><a class="markdownIt-Anchor" href="#kafka-2"></a> Kafka</h3><h4 id="消费端弄丢了数据-2"><a class="markdownIt-Anchor" href="#消费端弄丢了数据-2"></a> 消费端弄丢了数据</h4><p>唯一可能导致消费者弄丢数据的情况，就是说，你消费到了这个消息，然后消费者那边<strong>自动提交</strong>了 <code>offset</code>，让 <code>Kafka</code> 以为你已经消费好了这个消息，但其实你才刚准备处理这个消息，你还没处理，你自己就挂了，此时这条消息就丢咯。</p><p>这不是跟 <code>RabbitMQ</code> 差不多吗，大家都知道 <code>Kafka</code> 会自动提交 <code>offset</code>，那么只要<strong>关闭自动提交</strong> <code>offset</code>，在处理完之后自己手动提交 <code>offset</code>，就可以保证数据不会丢。但是此时确实还是可能会有重复消费，比如你刚处理完，还没提交 <code>offset</code>，结果自己挂了，此时肯定会重复消费一次，自己保证幂等性就好了。</p><p>生产环境碰到的一个问题，就是说我们的 <code>Kafka</code> 消费者消费到了数据之后是写到一个内存的 <code>queue</code> 里先缓冲一下，结果有的时候，你刚把消息写入内存 <code>queue</code>，然后消费者会自动提交 <code>offset</code>。然后此时我们重启了系统，就会导致内存 <code>queue</code> 里还没来得及处理的数据就丢失了。</p><h4 id="kafka-弄丢了数据"><a class="markdownIt-Anchor" href="#kafka-弄丢了数据"></a> Kafka 弄丢了数据</h4><p>这块比较常见的一个场景，就是 <code>Kafka</code> 某个 <code>broker</code> 宕机，然后重新选举 <code>partition</code> 的 <code>leader</code>。大家想想，要是此时其他的 <code>follower</code> 刚好还有些数据没有同步，结果此时 <code>leader</code> 挂了，然后选举某个 follower 成 leader 之后，不就少了一些数据？这就丢了一些数据啊。</p><p>生产环境也遇到过，我们也是，之前 <code>Kafka</code> 的 <code>leader</code> 机器宕机了，将 <code>follower</code> 切换为 <code>leader</code> 之后，就会发现说这个数据就丢了。</p><p>所以此时一般是要求起码设置如下 4 个参数：</p><ul><li>给 <code>topic</code> 设置 <code>replication.factor</code> 参数：这个值必须大于 1，要求每个 <code>partition</code> 必须有至少 2 个副本。</li><li>在 <code>Kafka</code> 服务端设置 <code>min.insync.replicas</code> 参数：这个值必须大于 1，这个是要求一个 <code>leader</code> 至少感知到有至少一个 <code>follower</code> 还跟自己保持联系，没掉队，这样才能确保 <code>leader</code> 挂了还有一个 <code>follower</code> 吧。</li><li>在 <code>producer</code> 端设置 <code>acks=all</code> ：这个是要求每条数据，必须是写入所有 <code>replica</code> 之后，才能认为是写成功了。</li><li>在 <code>producer</code> 端设置 <code>retries=MAX</code> （很大很大很大的一个值，无限次重试的意思）：这个是要求一旦写入失败，就无限重试，卡在这里了。</li></ul><p>我们生产环境就是按照上述要求配置的，这样配置之后，至少在 <code>Kafka broker</code> 端就可以保证在 <code>leader</code> 所在 <code>broker</code> 发生故障，进行 <code>leader</code> 切换时，数据不会丢失。</p><h4 id="生产者会不会弄丢数据"><a class="markdownIt-Anchor" href="#生产者会不会弄丢数据"></a> 生产者会不会弄丢数据？</h4><p>如果按照上述的思路设置了 <code>acks=all</code> ，一定不会丢，要求是，你的 <code>leader</code> 接收到消息，所有的 <code>follower</code> 都同步到了消息之后，才认为本次写成功了。如果没满足这个条件，生产者会自动不断的重试，重试无限次。</p><h2 id="消息队列的延时以及过期失效问题"><a class="markdownIt-Anchor" href="#消息队列的延时以及过期失效问题"></a> 消息队列的延时以及过期失效问题</h2><h3 id="大量消息积压"><a class="markdownIt-Anchor" href="#大量消息积压"></a> 大量消息积压</h3><p>几千万条数据在 <code>MQ</code> 里积压了七八个小时，从下午 4 点多，积压到了晚上 11 点多。这个是我们真实遇到过的一个场景，确实是线上故障了，这个时候要不然就是修复 <code>consumer</code> 的问题，让它恢复消费速度，然后傻傻的等待几个小时消费完毕。这个肯定不能在面试的时候说吧。</p><p>一个消费者一秒是 1000 条，一秒 3 个消费者是 3000 条，一分钟就是 18 万条。所以如果你积压了几百万到上千万的数据，即使消费者恢复了，也需要大概 1 小时的时间才能恢复过来。</p><p>一般这个时候，只能临时紧急扩容了，具体操作步骤和思路如下：</p><ul><li>先修复 <code>consumer</code> 的问题，确保其恢复消费速度，然后将现有 <code>consumer</code> 都停掉。</li><li>新建一个 <code>topic</code>，<code>partition</code> 是原来的 10 倍，临时建立好原先 10 倍的 <code>queue</code> 数量。</li><li>然后写一个临时的分发数据的 <code>consumer</code> 程序，这个程序部署上去消费积压的数据，<strong>消费之后不做耗时的处理</strong>，直接均匀轮询写入临时建立好的 10 倍数量的 <code>queue</code>。</li><li>接着临时征用 10 倍的机器来部署 <code>consumer</code>，每一批 <code>consumer</code> 消费一个临时 <code>queue</code> 的数据。这种做法相当于是临时将 <code>queue</code> 资源和 <code>consumer</code> 资源扩大 10 倍，以正常的 10 倍速度来消费数据。</li><li>等快速消费完积压数据之后，得<strong>恢复原先部署的架构</strong>，重新用原先的 <code>consumer</code> 机器来消费消息。</li></ul><h3 id="消息过期失效"><a class="markdownIt-Anchor" href="#消息过期失效"></a> 消息过期失效</h3><p>假设你用的是 <code>RabbitMQ</code>，<code>RabbtiMQ</code> 是可以设置过期时间的，也就是 <code>TTL</code>。如果消息在 <code>queue</code> 中积压超过一定的时间就会被 <code>RabbitMQ</code> 给清理掉，这个数据就没了。那这就是第二个坑了。这就不是说数据会大量积压在 <code>mq</code> 里，而是<strong>大量的数据会直接搞丢</strong>。</p><p>这个情况下，就不是说要增加 <code>consumer</code> 消费积压的消息，因为实际上没啥积压，而是丢了大量的消息。我们可以采取一个方案，就是批量重导，这个我们之前线上也有类似的场景干过。就是大量积压的时候，我们当时就直接丢弃数据了，然后等过了高峰期以后，比如大家一起喝咖啡熬夜到晚上 12 点以后，用户都睡觉了。这个时候我们就开始写程序，将丢失的那批数据，写个临时程序，一点一点的查出来，然后重新灌入 <code>mq</code> 里面去，把白天丢的数据给他补回来。也只能是这样了。</p><p>假设 1 万个订单积压在 <code>mq</code> 里面，没有处理，其中 1000 个订单都丢了，你只能手动写程序把那 1000 个订单给查出来，手动发到 <code>mq</code> 里去再补一次。</p><h3 id="mq-都快写满了"><a class="markdownIt-Anchor" href="#mq-都快写满了"></a> mq 都快写满了</h3><p>如果消息积压在 <code>mq</code> 里，你很长时间都没有处理掉，此时导致 <code>mq</code> 都快写满了，咋办？这个还有别的办法吗？没有，谁让你第一个方案执行的太慢了，你临时写程序，接入数据来消费，消费一个丢弃一个，都不要了，快速消费掉所有的消息。然后走第二个方案，到了晚上再补数据吧。</p><h3 id="rocketmq-消息积压"><a class="markdownIt-Anchor" href="#rocketmq-消息积压"></a> RocketMq 消息积压</h3><h4 id="提高消费并行度"><a class="markdownIt-Anchor" href="#提高消费并行度"></a> 提高消费并行度</h4><p>绝大部分消息消费行为都属于 <code>IO</code> 密集型，即可能是操作数据库，或者调用 <code>RPC</code>，这类消费行为的消费速度在于后端数据库或者外系统的吞吐量，通过增加消费并行度，可以提高总的消费吞吐量，但是并行度增加到一定程度，反而会下降。所以，应用必须要设置合理的并行度。 如下有几种修改消费并行度的方法：</p><p>同一个 <code>ConsumerGroup</code> 下，通过增加 <code>Consumer</code> 实例数量来提高并行度（需要注意的是超过订阅队列数的 <code>Consumer</code> 实例无效）。可以通过加机器，或者在已有机器启动多个进程的方式。 提高单个 <code>Consumer</code> 的消费并行线程，通过修改参数 <code>consumeThreadMin</code>、<code>consumeThreadMax</code> 实现。</p><h4 id="批量方式消费"><a class="markdownIt-Anchor" href="#批量方式消费"></a> 批量方式消费</h4><p>某些业务流程如果支持批量方式消费，则可以很大程度上提高消费吞吐量，例如订单扣款类应用，一次处理一个订单耗时 1 s，一次处理 10 个订单可能也只耗时 2 s，这样即可大幅度提高消费的吞吐量，通过设置 <code>consumer</code> 的 <code>consumeMessageBatchMaxSize</code> 返个参数，默认是 1，即一次只消费一条消息，例如设置为 N，那么每次消费的消息数小于等于 N。</p><h4 id="跳过非重要消息"><a class="markdownIt-Anchor" href="#跳过非重要消息"></a> 跳过非重要消息</h4><p>发生消息堆积时，如果消费速度一直追不上发送速度，如果业务对数据要求不高的话，可以选择丢弃不重要的消息。例如，当某个队列的消息数堆积到 100000 条以上，则尝试丢弃部分或全部消息，这样就可以快速追上发送消息的速度。示例代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ConsumeConcurrentlyStatus <span class="title">consumeMessage</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">            List&lt;MessageExt&gt; msgs,</span></span></span><br><span class="line"><span class="function"><span class="params">            ConsumeConcurrentlyContext context)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">long</span> offset = msgs.get(<span class="number">0</span>).getQueueOffset();</span><br><span class="line">    String maxOffset =</span><br><span class="line">            msgs.get(<span class="number">0</span>).getProperty(Message.PROPERTY_MAX_OFFSET);</span><br><span class="line">    <span class="keyword">long</span> diff = Long.parseLong(maxOffset) - offset;</span><br><span class="line">    <span class="keyword">if</span> (diff &gt; <span class="number">100000</span>) &#123;</span><br><span class="line">        <span class="comment">// TODO 消息堆积情况的特殊处理</span></span><br><span class="line">        <span class="keyword">return</span> ConsumeConcurrentlyStatus.CONSUME_SUCCESS;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// TODO 正常消费过程</span></span><br><span class="line">    <span class="keyword">return</span> ConsumeConcurrentlyStatus.CONSUME_SUCCESS;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="优化每条消息消费过程"><a class="markdownIt-Anchor" href="#优化每条消息消费过程"></a> 优化每条消息消费过程</h4><p>举例如下，某条消息的消费过程如下：</p><ul><li>根据消息从 DB 查询【数据 1】</li><li>根据消息从 DB 查询【数据 2】</li><li>复杂的业务计算</li><li>向 DB 插入【数据 3】</li><li>向 DB 插入【数据 4】</li></ul><p>这条消息的消费过程中有 4 次与 DB 的 交互，如果按照每次 5ms 计算，那么总共耗时 20ms，假设业务计算耗时 5ms，那么总过耗时 25ms，所以如果能把 4 次 DB 交互优化为 2 次，那么总耗时就可以优化到 15ms，即总体性能提高了 40%。所以应用如果对时延敏感的话，可以把 DB 部署在 SSD 硬盘，相比于 SCSI 磁盘，前者的 RT 会小很多。</p><p>关于<code>RocketMq</code> 文档<a href="http://hvnobug.com/pages/document/rocketmq/">请点击这里</a></p><p>本文转自<a href="https://doocs.github.io/advanced-java/#/./docs/high-concurrency/mq-interview">advanced-java | 消息队列面试场景</a></p>]]></content>
      
      
      <categories>
          
          <category> mq </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>User Mode Linux(UML-用户态方式运行Linux内核)</title>
      <link href="post/user-mode-linux.html"/>
      <url>post/user-mode-linux.html</url>
      
        <content type="html"><![CDATA[<h2 id="什么是-user-mode-linux"><a class="markdownIt-Anchor" href="#什么是-user-mode-linux"></a> 什么是 user-mode-linux</h2><div class="note info flat"><p>User-mode-linux (UML) 是让一个<code>linux</code>作为一个独立进程运行在另一个<code>linux</code>上。甚至可以在非<code>root</code>用户下启动。</p></div><h2 id="为什么使用-uml"><a class="markdownIt-Anchor" href="#为什么使用-uml"></a> 为什么使用 UML</h2><div class="note info flat"><p>UML 是一种在同一时间运行多 <code>(arch-)linux</code> 的安全方式。 每个进程都是独立去其它的， 这非常安全，例如在同一机器上进行多种测试和开发而不互相干扰。如果一些测试进程损坏并不会影响宿主系统或者开发用进程。</p></div><h2 id="如何使用-uml"><a class="markdownIt-Anchor" href="#如何使用-uml"></a> 如何使用 UML</h2><h3 id="准备-rootfs-镜像"><a class="markdownIt-Anchor" href="#准备-rootfs-镜像"></a> 准备 rootfs 镜像</h3><blockquote><p>我们找一台 <code>Ubuntu Server</code> 来准备 <code>rootfs</code>。这个时候需要有 <code>root</code> 权限，因为你需要 <code>mount</code> 一个 <code>loop</code> 文件系统，<code>chroot</code> 改点东西之类的。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载镜像</span></span><br><span class="line">wget http://uk.images.linuxcontainers.org/images/alpine/3.1/amd64/default/20170305_17:50/rootfs.tar.xz</span><br><span class="line"><span class="comment"># 安装解压软件</span></span><br><span class="line">apt install xz-utils</span><br><span class="line"><span class="comment"># 创建镜像，32 M 对于 alpine 是够用的</span></span><br><span class="line">dd <span class="keyword">if</span>=/dev/zero of=rootfs.img bs=1M count=32</span><br><span class="line">mkfs.ext4 rootfs.img</span><br><span class="line"><span class="comment"># 把镜像挂到 loop 上</span></span><br><span class="line">mkdir rootfs</span><br><span class="line">sudo mount -o loop rootfs.img rootfs</span><br><span class="line">sudo tar xvf rootfs.tar.xz -C rootfs</span><br><span class="line"><span class="comment"># 给 root 设个密码</span></span><br><span class="line">sudo chroot rootfs /bin/sh</span><br><span class="line">  passwd</span><br><span class="line">  <span class="built_in">exit</span></span><br><span class="line"><span class="comment"># 清理</span></span><br><span class="line">sudo umount rootfs</span><br><span class="line">rmdir rootfs</span><br></pre></td></tr></table></figure><p>此时 rootfs.img 已经做好了。</p><h3 id="编译内核"><a class="markdownIt-Anchor" href="#编译内核"></a> 编译内核</h3><blockquote><p>我们继续用 ubuntu server 来编译 UML 内核。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install build-essential kernel-package fakeroot libncurses5-dev libssl-dev ccache</span><br><span class="line"><span class="comment"># 抓内核源码</span></span><br><span class="line">wget https://cdn.kernel.org/pub/linux/kernel/v4.x/linux-4.10.1.tar.xz</span><br><span class="line">tar xvf linux-4.10.1.tar.xz</span><br><span class="line"><span class="built_in">cd</span> linux-4.10.1</span><br><span class="line">make defconfig ARCH=um</span><br><span class="line">make menuconfig ARCH=um</span><br><span class="line"><span class="comment"># 这里会出来一个界面让你配置内核，有茫茫多的参数可以选</span></span><br><span class="line"><span class="comment"># 大概找一些 linux 内核编译的文章可以参考吧</span></span><br><span class="line"><span class="comment"># 主要是 User Mode Linux 有一些特殊选项可以注意下，比如强制静态编译什么的</span></span><br><span class="line"><span class="comment"># 然后就开始正式编译啦</span></span><br><span class="line">make ARCH=um</span><br><span class="line">strip linux <span class="comment"># 移除调试符号</span></span><br></pre></td></tr></table></figure><p>编译过程可能比较慢。有时候会有一些库找不到啥的，<code>apt</code> 装一下就好。</p><h3 id="获取-slirp"><a class="markdownIt-Anchor" href="#获取-slirp"></a> 获取 slirp</h3><p><a href="http://slirp.sourceforge.net/">slirp</a> 是用来在没有 <code>root</code> 的情况下联网的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt <span class="built_in">source</span> slirp</span><br></pre></td></tr></table></figure><p>这里获取到的 <code>slirp</code> 放到目标机器上编译，不需要在 <code>ubuntu server</code> 上搞了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> slirp-1.0.17/src</span><br><span class="line">./configure</span><br><span class="line">make CFLAGS=<span class="string">&quot;-I. -DUSE_PPP -DUSE_MS_DNS -DFULL_BOLT -fno-strict-aliasing -Wno-unused -std=gnu89&quot;</span> clean all</span><br></pre></td></tr></table></figure><h3 id="启动-uml"><a class="markdownIt-Anchor" href="#启动-uml"></a> 启动 UML</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在 UML Host 上</span></span><br><span class="line"><span class="comment"># 把一些二进制文件放好</span></span><br><span class="line">slirp=/home/oott123/uml/slirp/slirp-1.0.17/bin/slirp</span><br><span class="line">uml=/home/oott123/uml/kernel/linux-4.10.1/linux</span><br><span class="line">rootfs=/home/oott123/uml/alpine/rootfs.img</span><br><span class="line">cow=/home/oott123/uml/machine/demo/data.cow <span class="comment"># 放 copy-on-write 数据的地方</span></span><br><span class="line"><span class="built_in">export</span> TMPDIR=/tmp</span><br><span class="line"><span class="variable">$uml</span> rw ubda=<span class="variable">$cow</span>,<span class="variable">$rootfs</span> mem=128M eth0=slirp,,<span class="variable">$slirp</span></span><br></pre></td></tr></table></figure><h3 id="配置网络"><a class="markdownIt-Anchor" href="#配置网络"></a> 配置网络</h3><blockquote><p>启动之后你可能会发现没有网络。不用担心，改改网络配置：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在 UML 里</span></span><br><span class="line">vi /etc/network/interfaces</span><br><span class="line"><span class="comment">#####</span></span><br><span class="line">auto eth0</span><br><span class="line">iface eth0 inet static</span><br><span class="line">address 10.0.2.15</span><br><span class="line">gateway 10.0.2.2</span><br><span class="line">netmask 255.255.255.0</span><br><span class="line">dns-nameservers 10.0.2.3</span><br><span class="line">hostname $(hostname)</span><br><span class="line"><span class="comment">#####</span></span><br><span class="line">/etc/init.d/networking restart</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;nameserver 114.114.114.114&#x27;</span> &gt; /etc/resolv.conf</span><br><span class="line"><span class="comment"># 测试网络</span></span><br><span class="line">wget -O- myip.ipip.net</span><br><span class="line"><span class="comment"># 安装软件</span></span><br><span class="line">apk update</span><br><span class="line">apk add curl</span><br><span class="line">curl myip.ipip.net</span><br><span class="line"><span class="comment"># 关闭 UML</span></span><br><span class="line">halt</span><br></pre></td></tr></table></figure><h3 id="与主机交互"><a class="markdownIt-Anchor" href="#与主机交互"></a> 与主机交互</h3><blockquote><p>或许你需要将 <code>UML</code> 内的端口转发到主机上。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在主机上</span></span><br><span class="line">vi ~/.slirprc</span><br><span class="line">redir 2222 22</span><br></pre></td></tr></table></figure><blockquote><p>或许你需要访问主机的文件系统。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在 UML 上，把 UML 内的 /mnt/home 映射到 /home</span></span><br><span class="line"><span class="comment"># 注意权限问题、注意两边不要同时读写</span></span><br><span class="line">mkdir /mnt/home</span><br><span class="line">mount none /mnt/home -t hostfs -o /home</span><br></pre></td></tr></table></figure><p>本文转自<a href="https://best33.com/196.moe">User Mode Linux – 一个用户态的 Linux 内核</a></p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>打造你的 Could IDE</title>
      <link href="post/remote-ide.html"/>
      <url>post/remote-ide.html</url>
      
        <content type="html"><![CDATA[<h2 id="gitpod"><a class="markdownIt-Anchor" href="#gitpod"></a> Gitpod</h2><blockquote><p>Gitpod — Online IDE For GitHub</p></blockquote><div class="note info flat"><p><a href="https://gitpod.io/">Gitpod</a> 是一个在线<code>IDE</code>，可以从任何<code>GitHub</code>页面启动。只需在任何<code>GitHub-URL</code>前加上<code>https：//gitpod.io#${GitHub-URL}</code>，或使用我们的浏览器扩展为<code>GitHub</code>页面添加一个按钮。</p><p>在几秒钟之内，<code>Gitpod</code> 就可以为您提供一个完整的开发环境，包括一个<code>VS Code</code>驱动的<code>IDE</code>和一个可以由项目定制化配置的云<code>Linux</code>容器。</p></div><h2 id="theia"><a class="markdownIt-Anchor" href="#theia"></a> Theia</h2><div class="note info flat"><p><a href="https://theia-ide.org">Theia</a> 是 <code>Eclipse</code> 推出的云端和桌面 <code>IDE</code> 平台，完全开源。<code>Theia</code> 是基于 <code>VS Code</code> 开发的，它的模块化特性非常适合二次开发，比如华为云 <code>CloudIDE</code>、阿里云 <code>Function Compute IDE</code> 便是基于 <code>Theia</code> 开发。</p></div><h3 id="快速构建你的ide"><a class="markdownIt-Anchor" href="#快速构建你的ide"></a> 快速构建你的IDE</h3><h4 id="必要条件"><a class="markdownIt-Anchor" href="#必要条件"></a> 必要条件</h4><p>你先安装需要 <code>nodejs</code> 10</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.5/install.sh | bash</span><br><span class="line">nvm install 10</span><br></pre></td></tr></table></figure><p>然后安装 <code>yarn</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g yarn</span><br></pre></td></tr></table></figure><p>同时要确保你的<code>python</code>指向的时<code>python2.x</code>版本</p><h4 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h4><p>创建并进入一个<code>my-app</code>目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir my-app</span><br><span class="line"><span class="built_in">cd</span> my-app</span><br></pre></td></tr></table></figure><p>创建<code>package.json</code>文件</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;private&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;@theia/callhierarchy&quot;</span>: <span class="string">&quot;next&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;@theia/file-search&quot;</span>: <span class="string">&quot;next&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;@theia/git&quot;</span>: <span class="string">&quot;next&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;@theia/json&quot;</span>: <span class="string">&quot;next&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;@theia/markers&quot;</span>: <span class="string">&quot;next&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;@theia/messages&quot;</span>: <span class="string">&quot;next&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;@theia/mini-browser&quot;</span>: <span class="string">&quot;next&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;@theia/navigator&quot;</span>: <span class="string">&quot;next&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;@theia/outline-view&quot;</span>: <span class="string">&quot;next&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;@theia/plugin-ext-vscode&quot;</span>: <span class="string">&quot;next&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;@theia/preferences&quot;</span>: <span class="string">&quot;next&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;@theia/preview&quot;</span>: <span class="string">&quot;next&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;@theia/search-in-workspace&quot;</span>: <span class="string">&quot;next&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;@theia/terminal&quot;</span>: <span class="string">&quot;next&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;devDependencies&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;@theia/cli&quot;</span>: <span class="string">&quot;next&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>简而言之，<code>Theia</code>应用程序和扩展包都是<code>Node.js</code>包。每一个包都包含一个<code>package.json</code>文件，里面列出了包的一些元数据，如<code>name</code>、<code>version</code>、运行时和构建时的依赖关系等。</p></blockquote><blockquote><p>我们来看看这个包的内容：</p></blockquote><ul><li><code>name</code>和<code>version</code>被省略了，因为我们不打算将它作为一个依赖项来使用。同时它被标记为<code>private</code>，因为不打算将它发布为一个独立的<code>Node.js</code>包。</li><li>我们在<code>dependencies</code>中列出了所有运行时依赖的扩展包，如<code>@theia/navigator</code>。<ul><li>有些扩展包需要额外的工具来进行安装，例如，<code>@theia/python</code>需要<code>Python Language Server</code>来安装。此时你需要参考相应的文档。</li><li>可以在这里查看所有已发布的扩展包。</li></ul></li><li>我们将<code>@theis/cli</code>列为构建时的依赖项，它提供了构建和运行应用程序的脚本。</li></ul><h4 id="vs-code-扩展"><a class="markdownIt-Anchor" href="#vs-code-扩展"></a> VS Code 扩展</h4><blockquote><p>作为应用程序的一部分，也可以使用（打包）<code>VS Code</code>扩展。 <code>Theia</code>存储库包含有关如何将此类扩展包含在应用程序的<code>package.json</code>中的指南。</p></blockquote><p>一个示例<code>package.json</code>可能如下所示：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;private&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;@theia/callhierarchy&quot;</span>: <span class="string">&quot;next&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;@theia/file-search&quot;</span>: <span class="string">&quot;next&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;@theia/git&quot;</span>: <span class="string">&quot;next&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;@theia/json&quot;</span>: <span class="string">&quot;next&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;@theia/markers&quot;</span>: <span class="string">&quot;next&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;@theia/messages&quot;</span>: <span class="string">&quot;next&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;@theia/mini-browser&quot;</span>: <span class="string">&quot;next&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;@theia/navigator&quot;</span>: <span class="string">&quot;next&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;@theia/outline-view&quot;</span>: <span class="string">&quot;next&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;@theia/plugin-ext-vscode&quot;</span>: <span class="string">&quot;next&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;@theia/preferences&quot;</span>: <span class="string">&quot;next&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;@theia/preview&quot;</span>: <span class="string">&quot;next&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;@theia/search-in-workspace&quot;</span>: <span class="string">&quot;next&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;@theia/terminal&quot;</span>: <span class="string">&quot;next&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;devDependencies&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;@theia/cli&quot;</span>: <span class="string">&quot;next&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;prepare&quot;</span>: <span class="string">&quot;yarn run clean &amp;&amp; yarn build &amp;&amp; yarn run download:plugins&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;clean&quot;</span>: <span class="string">&quot;theia clean&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;build&quot;</span>: <span class="string">&quot;theia build --mode development&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;start&quot;</span>: <span class="string">&quot;theia start --plugins=local-dir:plugins&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;download:plugins&quot;</span>: <span class="string">&quot;theia download:plugins&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;theiaPluginsDir&quot;</span>: <span class="string">&quot;plugins&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;theiaPlugins&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;vscode-builtin-css&quot;</span>: <span class="string">&quot;https://github.com/theia-ide/vscode-builtin-extensions/releases/download/v1.39.1-prel/css-1.39.1-prel.vsix&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;vscode-builtin-html&quot;</span>: <span class="string">&quot;https://github.com/theia-ide/vscode-builtin-extensions/releases/download/v1.39.1-prel/html-1.39.1-prel.vsix&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;vscode-builtin-javascript&quot;</span>: <span class="string">&quot;https://github.com/theia-ide/vscode-builtin-extensions/releases/download/v1.39.1-prel/javascript-1.39.1-prel.vsix&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;vscode-builtin-json&quot;</span>: <span class="string">&quot;https://github.com/theia-ide/vscode-builtin-extensions/releases/download/v1.39.1-prel/json-1.39.1-prel.vsix&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;vscode-builtin-markdown&quot;</span>: <span class="string">&quot;https://github.com/theia-ide/vscode-builtin-extensions/releases/download/v1.39.1-prel/markdown-1.39.1-prel.vsix&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;vscode-builtin-npm&quot;</span>: <span class="string">&quot;https://github.com/theia-ide/vscode-builtin-extensions/releases/download/v1.39.1-prel/npm-1.39.1-prel.vsix&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;vscode-builtin-scss&quot;</span>: <span class="string">&quot;https://github.com/theia-ide/vscode-builtin-extensions/releases/download/v1.39.1-prel/scss-1.39.1-prel.vsix&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;vscode-builtin-typescript&quot;</span>: <span class="string">&quot;https://github.com/theia-ide/vscode-builtin-extensions/releases/download/v1.39.1-prel/typescript-1.39.1-prel.vsix&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;vscode-builtin-typescript-language-features&quot;</span>: <span class="string">&quot;https://github.com/theia-ide/vscode-builtin-extensions/releases/download/v1.39.1-prel/typescript-language-features-1.39.1-prel.vsix&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="构建"><a class="markdownIt-Anchor" href="#构建"></a> 构建</h4><blockquote><p>首先安装所有依赖</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn</span><br></pre></td></tr></table></figure><blockquote><p>其次，使用<code>Theia CLI</code>构建应用程序。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn theia build</span><br></pre></td></tr></table></figure><blockquote><p><code>yarn</code>在我们的应用程序上下文中查找<code>@theia/cli</code>提供的<code>theia</code>可执行文件，然后使用<code>theia</code>执行<code>build</code>命令。 由于该应用程序默认情况下是在生产模式下构建的（即经过混淆和缩小），因此可能需要一段时间。</p></blockquote><h4 id="运行"><a class="markdownIt-Anchor" href="#运行"></a> 运行</h4><blockquote><p>构建完成后，我们可以启动应用程序：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn start</span><br></pre></td></tr></table></figure><blockquote><p>您可以提供一个工作区路径作为第一个参数打开，并提供<code>--hostname</code>和<code>--port</code>选项以将应用程序部署在特定的网络接口和端口上，例如 在所有接口和端口<code>8080</code>上打开<code>/workspace</code>：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn start /my-workspace --hostname 0.0.0.0 --port 8080</span><br></pre></td></tr></table></figure><blockquote><p>在终端中，您应该看到<code>Theia</code>应用程序已启动并正在侦听：</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://theia-ide.org/docs-terminal.png" alt="" /></p><blockquote><p>通过在新的浏览器页面中输入打印的地址来打开应用程序。</p></blockquote><h4 id="故障排除"><a class="markdownIt-Anchor" href="#故障排除"></a> 故障排除</h4><p><strong>Plugins not appearing</strong></p><blockquote><p>如果正在运行的<code>Theia</code>实例中没有可用的插件，则可能是您需要告诉<code>Theia</code>在哪里可以找到下载的插件。 上面的示例在启动命令中设置了<code>--plugins</code>开关，这应该足够了。 但是，如果直接运行<code>theia</code>启动，则可以选择设置环境变量来实现相同的目的：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export THEIA_DEFAULT_PLUGINS&#x3D;local-dir:plugins</span><br></pre></td></tr></table></figure><p><strong>Building native dependencies behind a proxy</strong></p><blockquote><p>如果在代理之下运行<code>yarn</code>命令，则在构建的本机依赖项（例如<code>oniguruma</code>）中可能会在构建的最后部分遇到问题，并带有以下错误堆栈：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[4&#x2F;4] Building fresh packages...</span><br><span class="line">[1&#x2F;9]  XXXXX</span><br><span class="line">[2&#x2F;9]  XXXXX</span><br><span class="line">[3&#x2F;9]  XXXXX</span><br><span class="line">[4&#x2F;9]  XXXXX</span><br><span class="line">error &#x2F;theiaide&#x2F;node_modules&#x2F;XXXXX: Command failed.</span><br><span class="line">Exit code: 1</span><br><span class="line">Command: node-gyp rebuild</span><br><span class="line">Arguments:</span><br><span class="line">Directory: &#x2F;theiaide&#x2F;node_modules&#x2F;XXXXX</span><br><span class="line">Output:</span><br><span class="line">gyp info it worked if it ends with ok</span><br><span class="line">gyp info using node-gyp@3.8.0</span><br><span class="line">gyp info using node@8.15.0 | linux | x64</span><br><span class="line">gyp http GET https:&#x2F;&#x2F;nodejs.org&#x2F;download&#x2F;release&#x2F;v8.15.0&#x2F;node-v8.15.0-headers.tar.gz</span><br><span class="line">gyp WARN install got an error, rolling back install</span><br><span class="line">gyp ERR! configure error</span><br><span class="line">gyp ERR! stack Error: read ECONNRESET</span><br><span class="line">gyp ERR! stack at TLSWrap.onread (net.js:622:25)</span><br><span class="line">gyp ERR! System Linux 3.10.0-862.11.6.el7.x86_64</span><br><span class="line">gyp ERR! command &quot;&#x2F;usr&#x2F;bin&#x2F;node&quot; &quot;&#x2F;usr&#x2F;lib&#x2F;node_modules&#x2F;npm&#x2F;node_modules&#x2F;node-gyp&#x2F;bin&#x2F;node-gyp.js&quot; &quot;rebuild&quot;</span><br><span class="line">gyp ERR! cwd &#x2F;theiaide&#x2F;node_modules&#x2F;XXXXX</span><br><span class="line">gyp ERR! node -v v8.15.0</span><br></pre></td></tr></table></figure><blockquote><p>发生这种情况是因为<code>node-gyp</code>不依赖 System/NPM代理设置。在这种情况下，请使用错误堆栈中提供的链接下载节点头文件（在上面的示例中<code>https://nodejs.org/download/release/v8.15.0/node-v8.15.0-headers.tar.gz</code>）并使用以下命令运行构建：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm_config_tarball&#x3D;&#x2F;path&#x2F;to&#x2F;node-v8.15.0-headers.tar.gz yarn install</span><br></pre></td></tr></table></figure><h3 id="使用-docker-构建"><a class="markdownIt-Anchor" href="#使用-docker-构建"></a> 使用 Docker 构建</h3><h4 id="从-theia-apps-快速构建"><a class="markdownIt-Anchor" href="#从-theia-apps-快速构建"></a> 从 theia-apps 快速构建</h4><blockquote><p><code>Theia</code>提供了不同版本的镜像，可以在<a href="https://github.com/theia-ide/theia-apps">theia-apps</a> 选择自己需要的语言版本，可以支持 <code>C++</code>/<code>Go</code>/<code>Python</code>/<code>Java</code>/<code>PHP</code>/<code>Ruby</code>等多种语言。最简单的方法，就是直接获取镜像启动容器。</p></blockquote><p>拉取完整版镜像并在当前目录运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull theiaide/theia-full</span><br><span class="line">docker run -it --init -p 3000:3000 -v <span class="string">&quot;<span class="subst">$(pwd)</span>:/home/project:cached&quot;</span> theiaide/theia-full:latest</span><br></pre></td></tr></table></figure><p>其中，<code>$(pwd)</code> 代表的是将当前目录挂载到 <code>Docker</code> 容器中，也可以指定文件目录。</p><div class="note danger flat"><p>然而，需要特别注意的是，<code>Theia</code> 本身没有认证机制，任何知道公网 <code>IP</code> 和端口号的人都可使用。因此，不推荐这种方法。</p></div><h4 id="构建更安全的版本"><a class="markdownIt-Anchor" href="#构建更安全的版本"></a> 构建更安全的版本</h4><p><code>Theia-https-docker</code> 增加了 <code>token</code> 认证和 <code>https</code>，可以在标准镜像中加入 <code>security layer</code>，强烈建议使用它构造自己的镜像。构建也非常简单，按以下三个步骤操作即可，其中第三步的 <code>--build-arg app=</code> 填入需要使用的语言版本，这里使用的也是 <code>full</code> 版本。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theia-ide/theia-apps.git</span><br><span class="line"><span class="built_in">cd</span> theia-apps/theia-https-docker</span><br><span class="line">docker build . --build-arg app=theia-full -t theiaide/theia-full-security</span><br></pre></td></tr></table></figure><p>耐心等到构建完成，输入<code>docke images</code>就可看到自己构建的 <code>theiaide/theia-full-security</code> 镜像。</p><p>之后就可运行，<code>token</code> 后接的是访问口令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --init -it -p 10443:10443 -e token&#x3D;mysecrettoken -v &quot;$(pwd):&#x2F;home&#x2F;project:cached&quot; theiaide&#x2F;theia-full-security</span><br></pre></td></tr></table></figure><p>但一般我们都需要后台运行，可以这样让容器后台运行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --init -itd -p 10443:10443 -e token&#x3D;mysecrettoken -v &quot;$(pwd):&#x2F;home&#x2F;project:cached&quot; theiaide&#x2F;theia-full-security</span><br></pre></td></tr></table></figure><p>如果要指定使用 <code>/home/coding</code>目录，后台运行，则是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --init -itd -p 10443:10443 -e token&#x3D;mysecrettoken -v &quot;$(pwd):&#x2F;home&#x2F;project:cached&quot; theiaide&#x2F;theia-full-security</span><br></pre></td></tr></table></figure><p>打开 <code>https://ip地址:10443</code>，输入 <code>token</code> 便可打开 <code>Web IDE</code>。也可直接使用 <code>https://ip地址:10443/?token=mysecrettoken</code> 直接打开。</p><h4 id="解决权限问题"><a class="markdownIt-Anchor" href="#解决权限问题"></a> 解决权限问题</h4><p>然而，如果这时使用，会发现 <code>Theia</code> 无法写入文件。这是 <code>Theia</code> 默认使用了 <code>1000</code> 的 <code>userid</code>，跟宿主机不一样，从而造成的权限问题。</p><p>解决方法有这么几个：</p><ol><li>将挂载的文件权限改为 777，这种方法不太安全： <code>chmod -R 777 /home/coding</code></li><li>指定用户运行，但如果使用的是 root，仍会有些不安全：<code>docker run --user=root --init -it -p 10443:10443 -e token=mysecrettoken -v &quot;$(pwd):/home/project:cached&quot; theiaide/theia-full-security</code></li><li>将挂载的文件夹属主改为1000，推荐这种方法： <code>chown -R 1000 /home/coding</code></li></ol><h3 id="部署标准版并反代"><a class="markdownIt-Anchor" href="#部署标准版并反代"></a> 部署标准版并反代</h3><h4 id="准备"><a class="markdownIt-Anchor" href="#准备"></a> 准备</h4><ul><li>具有<code>root</code>用户特权的<code>Ubuntu 18.04</code>服务器和一个非<code>root</code>用户辅助帐户。 您可以按照我们的<code>Ubuntu 18.04</code>初始服务器安装指南进行设置。 在本教程中，非<code>root</code>用户是<code>sammy</code>。</li><li>在您的服务器上安装了<code>Docker</code>。 按照如何在<code>Ubuntu 18.04</code>上安装<code>Docker</code>的步骤1和步骤2进行操作。 有关<code>Docker</code>的简介，请参阅<a href="https://www.digitalocean.com/community/tutorials/the-docker-ecosystem-an-introduction-to-common-components">Docker生态系统：通用组件简介</a>。</li><li>服务器上安装了Docker Compose。 遵循<a href="https://www.digitalocean.com/community/tutorials/how-to-install-docker-compose-on-ubuntu-18-04">如何在Ubuntu 18.04上安装Docker Compose</a>的步骤1。</li><li>域名。 本教程将始终使用<code>theia.your_domain</code>。 您可以<code>Namecheap</code>上购买域名，在 <a href="https://www.freenom.com/en/index.html?lang=en">Freenom</a> 上免费获得一个域名，或使用您选择的域名注册商。</li><li>一个带有<code>theia.your_domain</code>的<code>DNS</code>记录，指向您服务器的公共<code>IP</code>地址。</li></ul><h4 id="使用-lets-encrypt-部署-nginx-代理"><a class="markdownIt-Anchor" href="#使用-lets-encrypt-部署-nginx-代理"></a> 使用 Let’s Encrypt 部署 Nginx 代理</h4><p>使用<code>Docker Compose</code>部署<code>Nginx</code>代理及其<code>Let’s Encrypt</code>插件。 这将启用自动<code>TLS</code>证书供应和续订，以便在部署<code>Eclipse Theia</code>时，可以通过<code>HTTPS</code>在您的域中对其进行访问。</p><p>将所有文件存储在<code>〜/eclipse-theia</code>下。 通过运行以下命令来创建目录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~&#x2F;eclipse-theia</span><br><span class="line">cd ~&#x2F;eclipse-theia</span><br></pre></td></tr></table></figure><p>您将在<code>nginx-proxy-compose.yaml</code>文件中存储<code>nginx-proxy</code>的<code>Docker Compose</code>配置。 使用文本编辑器创建它：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano nginx-proxy-compose.yaml</span><br></pre></td></tr></table></figure><p>在<code>~/eclipse-theia/nginx-proxy-compose.yaml</code>中添加:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;2&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">nginx-proxy:</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">jwilder/nginx-proxy</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;80:80&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;443:443&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;/etc/nginx/htpasswd:/etc/nginx/htpasswd&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;/etc/nginx/vhost.d&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;/usr/share/nginx/html&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;/var/run/docker.sock:/tmp/docker.sock:ro&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;/etc/nginx/certs&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">letsencrypt-nginx-proxy-companion:</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">jrcs/letsencrypt-nginx-proxy-companion</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;/var/run/docker.sock:/var/run/docker.sock:ro&quot;</span></span><br><span class="line">    <span class="attr">volumes_from:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;nginx-proxy&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>在这里，您定义了将要运行的Docker Compose两项服务，即<code>nginx-proxy</code>及其<code>Let’s Encrypt</code>。 对于代理，您将<code>jwilder/nginx-proxy</code>指定为映像，映射<code>HTTP</code>和<code>HTTPS</code>端口，并定义在运行时可访问的卷。<br /><code>Volumes</code>是服务器上定义的服务将具有完全访问权限的目录，您将在以后使用这些目录来设置用户身份验证。 为此，您将利用列表中的第一个卷，该卷将本地<code>/etc/nginx/htpasswd</code>目录映射到容器中的同一目录。 在该文件夹中，nginx-proxy希望找到一个与目标域完全相同的文件，该文件包含用于<code>htpasswd</code>格式（用户名：<code>hashed_pa​​ssword</code>）的用户身份验证的登录凭据。</p></blockquote><blockquote><p>对于插件，您可以命名<code>Docker</code>映像，并通过定义一个卷来允许访问<code>Docker</code>的 socket。 然后，您指定该插件应继承对为<code>nginx-proxy</code>定义的卷的访问。 两种服务都将重新启动设置为始终，这会命令<code>Docker</code>在崩溃或系统重新启动的情况下重新启动容器。</p></blockquote><p>通过运行以下命令来部署配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose -f nginx-proxy-compose.yaml up -d</span><br></pre></td></tr></table></figure><blockquote><p>将<code>nginx-proxy-compose.yaml</code>文件名传递到<code>docker-compose</code>命令的<code>-f</code>参数，该参数指定要运行的文件。<br />然后，通过<code>up</code>命令启动容器。 <code>-d</code>标志启用分离模式，这意味着<code>Docker Compose</code>将在后台运行容器。</p></blockquote><p>最终输出将如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Creating network &quot;eclipse-theia_default&quot; with the default driver</span><br><span class="line">Pulling nginx-proxy (jwilder&#x2F;nginx-proxy:)...</span><br><span class="line">latest: Pulling from jwilder&#x2F;nginx-proxy</span><br><span class="line">8d691f585fa8: Pull complete</span><br><span class="line">5b07f4e08ad0: Pull complete</span><br><span class="line">...</span><br><span class="line">Digest: sha256:dfc0666b9747a6fc851f5fb9b03e65e957b34c95d9635b4b5d1d6b01104bde28</span><br><span class="line">Status: Downloaded newer image for jwilder&#x2F;nginx-proxy:latest</span><br><span class="line">Pulling letsencrypt-nginx-proxy-companion (jrcs&#x2F;letsencrypt-nginx-proxy-companion:)...</span><br><span class="line">latest: Pulling from jrcs&#x2F;letsencrypt-nginx-proxy-companion</span><br><span class="line">89d9c30c1d48: Pull complete</span><br><span class="line">668840c175f8: Pull complete</span><br><span class="line">...</span><br><span class="line">Digest: sha256:a8d369d84079a923fdec8ce2f85827917a15022b0dae9be73e6a0db03be95b5a</span><br><span class="line">Status: Downloaded newer image for jrcs&#x2F;letsencrypt-nginx-proxy-companion:latest</span><br><span class="line">Creating eclipse-theia_nginx-proxy_1 ... done</span><br><span class="line">Creating eclipse-theia_letsencrypt-nginx-proxy-companion_1 ... done</span><br></pre></td></tr></table></figure><p>您已经使用<code>Docker Compose</code>部署了<code>nginx-proxy</code>及其<code>Let’s Encrypt</code>。 现在，您将继续在您的域中设置<code>Eclipse Theia</code>并对其进行保护。</p><h4 id="部署-docker-版-theia"><a class="markdownIt-Anchor" href="#部署-docker-版-theia"></a> 部署 Docker 版 Theia</h4><blockquote><p>创建一个文件，其中包含用户需要输入的所有允许的登录组合。 然后，您将使用<code>Docker Compose</code>将<code>Eclipse Theia</code>部署到您的服务器，并使用<code>nginx-proxy</code>将其公开到您的安全域中。<br /><code>nginx-proxy</code>希望登录组合以<code>htpasswd</code>格式保存在以公开域命名的文件中，并存储在容器的<code>/etc/nginx/htpasswd</code>目录下。 映射到虚拟目录的本地目录不必与nginx-proxy配置中指定的目录相同。</p></blockquote><p>要创建登录组合，您首先需要通过运行以下命令来安装<code>htpasswd</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install apache2-utils</span><br></pre></td></tr></table></figure><p><code>apache2-utils</code>软件包包含<code>htpasswd</code>实用程序。<br />创建<code>/etc/nginx/htpasswd</code>目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p &#x2F;etc&#x2F;nginx&#x2F;htpasswd</span><br></pre></td></tr></table></figure><p>创建一个文件来存储域名的登录名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo touch &#x2F;etc&#x2F;nginx&#x2F;htpasswd&#x2F;theia.your_domain</span><br></pre></td></tr></table></figure><p>记得将<code>theia.your_domain</code>替换为你的<code>Eclipse Theia</code>域名。</p><p>添加用户名和密码组合：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo htpasswd &#x2F;etc&#x2F;nginx&#x2F;htpasswd&#x2F;theia.your_domain username</span><br></pre></td></tr></table></figure><p>将<code>username</code>替换为您想添加的用户名。</p><p>现在，您将创建用于部署<code>Eclipse Theia</code>的配置。 您会将其存储在名为<code>eclipse-theia-compose.yaml</code>的文件中。 使用文本编辑器创建它：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano eclipse-theia-compose.yaml</span><br></pre></td></tr></table></figure><p>在<code>~/eclipse-theia/eclipse-theia-compose.yaml</code>文件中添加:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;2.2&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">eclipse-theia:</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">theiaide/theia:next</span></span><br><span class="line">    <span class="attr">init:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">VIRTUAL_HOST=theia.your_domain</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">LETSENCRYPT_HOST=theia.your_domain</span></span><br></pre></td></tr></table></figure><blockquote><p>在此配置中，您定义了一个名为<code>eclipse-theia</code>的服务，将restart设置为always并将<code>theiaide/theia:next</code>作为容器映像。 您还可以将<code>init</code>设置为<code>true</code>，以指示<code>Docker</code>在容器内运行<code>Eclipse Theia</code>时将<code>init</code>用作主要流程管理器。<br />然后，在环境部分中指定两个环境变量：<code>VIRTUAL_HOST</code>和<code>LETSENCRYPT_HOST</code>。 前者将传递给<code>nginx-proxy</code>并告知容器应该暴露给哪个域名，而后者则由其<code>Let’s Encrypt</code>使用，并指定要向哪个域名请求<code>TLS</code>证书。 除非您指定通配符作为<code>VIRTUAL_HOST</code>的值，否则它们必须相同。</p></blockquote><p>通过运行以下命令部署<code>Eclipse Theia</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose -f eclipse-theia-compose.yaml up -d</span><br></pre></td></tr></table></figure><p>最终输出如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">Pulling eclipse-theia (theiaide&#x2F;theia:next)...</span><br><span class="line">next: Pulling from theiaide&#x2F;theia</span><br><span class="line">63bc94deeb28: Pull complete</span><br><span class="line">100db3e2539d: Pull complete</span><br><span class="line">...</span><br><span class="line">Digest: sha256:c36dff04e250f1ac52d13f6d6e15ab3e9b8cad9ad68aba0208312e0788ecb109</span><br><span class="line">Status: Downloaded newer image for theiaide&#x2F;theia:next</span><br><span class="line">Creating eclipse-theia_eclipse-theia_1 ... done</span><br></pre></td></tr></table></figure><p>然后，在浏览器中，输入您用于<code>Eclipse Theia</code>的域名。 您的浏览器将提示您登录。提供正确的凭据后，您将进入<code>Eclipse Theia</code>并看到<code>GUI</code>编辑器。 在地址栏中，您会看到一个挂锁标识，表明该连接是安全的。 如果您没有立即看到此消息，请等待几分钟以提供<code>TLS</code>证书，然后重新加载页面。</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://assets.digitalocean.com/articles/eclipse-kubernetes-cloud-ide/step1a.png" alt="" /></p><p>现在，您可以安全地访问您的云IDE，接下来将开始使用编辑器。</p><h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2><ol><li><a href="https://theia-ide.org/docs/composing_applications/">Theia 官方文档</a></li><li><a href="https://zhuanlan.zhihu.com/p/144866584">随时随地敲代码，基于Theia快速部署自己的云开发环境</a></li><li><a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-the-eclipse-theia-cloud-ide-platform-on-ubuntu-18-04">How To Set Up the Eclipse Theia Cloud IDE Platform on Ubuntu 18.04</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> ide </category>
          
          <category> theia </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ide </tag>
            
            <tag> theia </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>死磕Jdk源码之StringBuilder</title>
      <link href="post/jdk-source-stringbuilder.html"/>
      <url>post/jdk-source-stringbuilder.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p><strong>死磕Jdk源码之<code>StringBuilder</code></strong>:</p><p>本博客目前所有 死磕 Jdk 源码系列都是使用 <code>jdk1.8</code>版本。</p></div><h2 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h2><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/StringBuilder.png" alt="" /></p><ul><li><code>StringBuilder</code>继承自<code>AbstractStringBuilder</code></li><li><code>StringBuilder</code>实现了<code>CharSequence</code>接口,表示为一个字符序列</li><li><code>StringBuilder</code>实现了<code>Appendable</code>接口,表示为可追加的字符序列,可以理解为可变的字符串</li></ul><blockquote><p>事实上<code>String</code>、<code>StringBuilder</code>以及<code>StringBuffer</code>都是字符序列，都实现了<code>CharSequence</code>接口，都是在内部维护一个<code>char</code>类型的数组。</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/StringBuffer.png" alt="" /></p><blockquote><p>从<code>StringBuffer</code>与<code>StringBuilder</code>的类结构完全相同,唯一的区别就是<code>StringBuffer</code>的方法使用了<code>synchronized</code>关键字,是线程安全的。</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/String.png" alt="" /></p><blockquote><p><code>String</code>类同样实现了<code>CharSequence</code>接口,同时<code>String</code>、<code>StringBuffer</code>以及<code>StringBuilder</code>都是<code>final</code>类型,不允许被继承。<code>String</code>内部维护的字符数组是不可变的。</p></blockquote><h2 id="特性"><a class="markdownIt-Anchor" href="#特性"></a> 特性</h2><h3 id="数据结构"><a class="markdownIt-Anchor" href="#数据结构"></a> 数据结构</h3><blockquote><p><code>StringBuilder</code>内部维护一个字符数组,默认大小为<strong>16</strong>,通过<code>append</code>方法追加字符时,会调用<code>AbstractStringBuilder</code>的<code>ensureCapacityInternal</code>方法检查数组是否需要扩容。从而实现可变的字符串。</p></blockquote><h3 id="成员变量常量"><a class="markdownIt-Anchor" href="#成员变量常量"></a> 成员变量/常量</h3><blockquote><p><code>StringBuilder</code>以及<code>StringBuffer</code>都继承自<code>AbstractStringBuilder</code>,它们的核心功能也都来自<code>AbstractStringBuilder</code>。</p></blockquote><p><strong>继承自</strong><code>AbstractStringBuilder</code>的成员变量</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/abstractstringbuilder-member-variables.jpg" alt="" /></p><ul><li><p><strong>value</strong> 用于存储字符的<code>char</code>数组</p></li><li><p><strong>count</strong> 当前的字符数量,因为字符数组中可能留有缓冲,所以字符大小可能小于数组大小</p></li></ul><h2 id="死磕源码"><a class="markdownIt-Anchor" href="#死磕源码"></a> 死磕源码</h2><h3 id="构造函数"><a class="markdownIt-Anchor" href="#构造函数"></a> 构造函数</h3><blockquote><p>默认无参构造函数,直接调用父类构造器,创建一个长度为 16 的字符数组。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">StringBuilder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>(<span class="number">16</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>父类<code>AbstractStringBuilder</code>构造器</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">AbstractStringBuilder(<span class="keyword">int</span> capacity) &#123;</span><br><span class="line">    value = <span class="keyword">new</span> <span class="keyword">char</span>[capacity];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>通过给定的容量大小构建<code>StringBuilder</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">StringBuilder</span><span class="params">(<span class="keyword">int</span> capacity)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>(capacity);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>通过字符串构建<code>StringBuilder</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">StringBuilder</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 预留 16 位的缓冲区</span></span><br><span class="line">    <span class="keyword">super</span>(str.length() + <span class="number">16</span>);</span><br><span class="line">    append(str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>通过字符序列构建<code>StringBuilder</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">StringBuilder</span><span class="params">(CharSequence seq)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 预留 16 位的缓冲区</span></span><br><span class="line">    <span class="keyword">this</span>(seq.length() + <span class="number">16</span>);</span><br><span class="line">    append(seq);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><blockquote><p>使用不可变的字符串可以使用<code>String</code>,使用可变类型字符串可以使用<code>StringBuffer</code>和<code>StringBuilder</code>,如果需要考虑线程安全,可以使用<code>StringBuffer</code>。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> jdk源码 </category>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> jdk源码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>死磕Jdk源码之HashSet</title>
      <link href="post/jdk-source-hashset.html"/>
      <url>post/jdk-source-hashset.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p><strong>死磕Jdk源码之<code>HashSet</code></strong>:</p><p>本博客目前所有 死磕 Jdk 源码系列都是使用 <code>jdk1.8</code>版本。</p></div><h2 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h2><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/HashSet.png" alt="" /></p><blockquote><p><code>HashSet</code>是<strong>Java Collections API</strong>中的基本数据结构之一。<br />实现了<code>Collection</code>和<code>Set</code>接口</p></blockquote><ul><li>存储唯一元素并允许空值</li><li>由<code>HashMap</code>支持</li><li>不保持插入顺序</li><li>不是线程安全的</li></ul><h2 id="特性"><a class="markdownIt-Anchor" href="#特性"></a> 特性</h2><h3 id="数据结构"><a class="markdownIt-Anchor" href="#数据结构"></a> 数据结构</h3><blockquote><p><code>HashSet</code>内部维护着一个<code>HashMap</code>，所有数据都是放在<code>HashMap</code>中，插入的数据为<code>HashMap</code>的<code>key</code>，这也就是为什么<code>HashSet</code>中的不能重复。</p></blockquote><p>关于<code>HashMap</code>数据机构的，请移步<a href="jdk-source-hashmap.html#%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84">死磕Jdk源码之HashMap</a></p><h3 id="成员变量常量"><a class="markdownIt-Anchor" href="#成员变量常量"></a> 成员变量/常量</h3><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/hashset-member-variables.jpg" alt="" /></p><ul><li><strong>map</strong> <code>HashMap</code>实例，<code>key</code>为要插入的值，<code>value</code>为<code>PRESENT</code>常量，为<code>Object</code>实例</li></ul><h2 id="死磕源码"><a class="markdownIt-Anchor" href="#死磕源码"></a> 死磕源码</h2><h3 id="构造函数"><a class="markdownIt-Anchor" href="#构造函数"></a> 构造函数</h3><blockquote><p>默认构造函数，会初始化<code>HashMap</code>，也是使用默认构造器</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">HashSet</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>根据传入的<code>Collection</code>实例创建一个新的<code>HashSet</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">HashSet</span><span class="params">(Collection&lt;? extends E&gt; c)</span> </span>&#123;</span><br><span class="line">    map = <span class="keyword">new</span> HashMap&lt;&gt;(Math.max((<span class="keyword">int</span>) (c.size()/<span class="number">.75f</span>) + <span class="number">1</span>, <span class="number">16</span>));</span><br><span class="line">    addAll(c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>根据初始化容量和负载因子创建<code>HashSet</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">HashSet</span><span class="params">(<span class="keyword">int</span> initialCapacity, <span class="keyword">float</span> loadFactor)</span> </span>&#123;</span><br><span class="line">    map = <span class="keyword">new</span> HashMap&lt;&gt;(initialCapacity, loadFactor);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>根据初始化容量创建<code>HashSet</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">HashSet</span><span class="params">(<span class="keyword">int</span> initialCapacity)</span> </span>&#123;</span><br><span class="line">    map = <span class="keyword">new</span> HashMap&lt;&gt;(initialCapacity);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>根据初始化容量，负载因子构建<code>HashSet</code>，这里的初始化的<code>Map</code>是<code>LinkedHashMap</code>类型</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">HashSet(<span class="keyword">int</span> initialCapacity, <span class="keyword">float</span> loadFactor, <span class="keyword">boolean</span> dummy) &#123;</span><br><span class="line">    map = <span class="keyword">new</span> LinkedHashMap&lt;&gt;(initialCapacity, loadFactor);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="添加元素"><a class="markdownIt-Anchor" href="#添加元素"></a> 添加元素</h3><blockquote><p>直接调用<code>map</code>的<code>put</code>方法，<code>map</code>的<code>key</code>就是我们要插入的元素</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">add</span><span class="params">(E e)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> map.put(e, PRESENT)==<span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="移除元素"><a class="markdownIt-Anchor" href="#移除元素"></a> 移除元素</h3><blockquote><p>同样是直接移除<code>map</code>对应的<code>key</code></p></blockquote><pre class="highlight"><code class="java">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">remove</span><span class="hljs-params">(Object o)</span> </span>&#123;        <span class="hljs-keyword">return</span> map.remove(o)==PRESENT;    &#125;</code></pre><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><blockquote><p>既然<code>HashSet</code>就是在维护一个<code>HashMap</code>对象，<code>HashSet</code>的性能也就取决于<code>HashMap</code>。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> jdk源码 </category>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> jdk源码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>死磕Jdk源码之HashMap</title>
      <link href="post/jdk-source-hashmap.html"/>
      <url>post/jdk-source-hashmap.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p><strong>死磕Jdk源码之<code>HashMap</code></strong>:</p><p>本博客目前所有 死磕 Jdk 源码系列都是使用 <code>jdk1.8</code>版本。</p></div><h2 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h2><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/HashMap.png" alt="" /></p><blockquote><p><code>HashMap</code>在<code>JDK1.8</code>之前的实现方式 <strong>数组</strong>+<strong>链表</strong>,但是在<code>JDK1.8</code>后对<code>HashMap</code>进行了底层优化,改为了由 <strong>数组</strong>+<strong>链表</strong>+<strong>红黑树</strong>实现,主要的目的是提高查找效率。</p></blockquote><table><thead><tr><th style="text-align:center">JDK版本</th><th style="text-align:center">实现方式</th><th style="text-align:center">节点数&gt;=8</th><th style="text-align:center">节点数&lt;=6</th></tr></thead><tbody><tr><td style="text-align:center">1.8以前</td><td style="text-align:center">数组+单向链表</td><td style="text-align:center">数组+单向链表</td><td style="text-align:center">数组+单向链表</td></tr><tr><td style="text-align:center">1.8以后</td><td style="text-align:center">数组+单向链表+红黑树</td><td style="text-align:center">数组+红黑树</td><td style="text-align:center">数组+单向链表</td></tr></tbody></table><ul><li><code>HashMap</code>基于哈希表的Map接口实现，是以<code>key-value</code>存储形式存在。（除了不同步和允许使用 <code>null</code> 之外，<code>HashMap</code> 类与 <code>Hashtable</code> 大致相同。)</li><li><code>HashMap</code> 的实现不是同步的，这意味着它不是线程安全的。它的<code>key</code>、<code>value</code>都可以为<code>null</code>。此外，<code>HashMap</code>中的映射不是有序的。在 <code>JDK1.8</code> 中，<code>HashMap</code> 是由 <strong>数组</strong>+<strong>链表</strong>+<strong>红黑树</strong>构成，新增了<strong>红黑树</strong>作为底层数据结构，结构变得复杂了，但是效率也变的更高效。</li></ul><h2 id="特性"><a class="markdownIt-Anchor" href="#特性"></a> 特性</h2><h3 id="数据结构"><a class="markdownIt-Anchor" href="#数据结构"></a> 数据结构</h3><ol><li><strong>数组</strong> <code>HashMap</code>内部维护一个<code>Node</code>数组</li><li><strong>链表</strong> 当<code>HashMap</code>中<code>Node</code>节点数小于等于 6 时,<code>Node</code>是单向链表结构</li><li><strong>红黑树</strong> 当<code>HashMap</code>中<code>Node</code>节点数大于等于 8 时,<code>Node</code>是红黑树结构</li></ol><h3 id="成员变量"><a class="markdownIt-Anchor" href="#成员变量"></a> 成员变量</h3><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/hashmap-member-variables.jpg" alt="" /></p><blockquote><p>继承自 <code>AbstractMap</code></p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/abstracthashmap-member-variables.jpg" alt="" /></p><ul><li><strong>keySet</strong> 保存着<code>Map</code>的<code>key</code>的<code>Set</code>集合</li><li><strong>values</strong> 保存着<code>Map</code>的<code>value</code>的<code>Collection</code>集合</li><li><strong>table</strong> <code>Node</code>是<code>Map.Entry</code>接口的实现类，在此存储数据的<code>Node</code>数组容量是2次幂，每一个<code>Node</code>本质都是一个单向链表</li><li><strong>size</strong> <code>HashMap</code>大小,它代表<code>HashMap</code>保存的键值对的多少</li><li><strong>modCount</strong> <code>HashMap</code>被改变的次数</li><li><strong>threshold</strong> 下一次<code>HashMap</code>扩容的大小</li><li><strong>loadFactor</strong> <code>HashMap</code>的负载因子。</li></ul><h3 id="常量"><a class="markdownIt-Anchor" href="#常量"></a> 常量</h3><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/hashmap-constant.jpg" alt="" /></p><ul><li><strong>TREEIFY_THRESHOLD</strong> 这两个是限定值 当节点数大于8时会转为<strong>红黑树</strong>存储</li><li><strong>UNTREEIFY_THRESHOLD</strong> 当节点数小于6时会转为<strong>单向链表</strong>存储</li><li><strong>MIN_TREEIFY_CAPACITY</strong> <strong>红黑树</strong>最小长度为 64</li><li><strong>DEFAULT_INITIAL_CAPACITY</strong> <code>HashMap</code>容量初始大小</li><li><strong>MAXIMUM_CAPACITY</strong> <code>HashMap</code>容量极限</li><li><strong>DEFAULT_LOAD_FACTOR</strong> 负载因子默认大小</li></ul><h2 id="死磕源码"><a class="markdownIt-Anchor" href="#死磕源码"></a> 死磕源码</h2><h3 id="构造函数"><a class="markdownIt-Anchor" href="#构造函数"></a> 构造函数</h3><blockquote><p>默认无参构造函数，使用默认的负载因子 0.75f ，由于 <code>loadFactor</code>是<code>final</code>类型，一经设定无法修改。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">HashMap</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.loadFactor = DEFAULT_LOAD_FACTOR; <span class="comment">// all other fields defaulted</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>指定初始容量构造 <code>HashMap</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">HashMap</span><span class="params">(<span class="keyword">int</span> initialCapacity)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>(initialCapacity, DEFAULT_LOAD_FACTOR);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>指定初始化容量和负载因子构造 <code>HashMap</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">HashMap</span><span class="params">(<span class="keyword">int</span> initialCapacity, <span class="keyword">float</span> loadFactor)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 指定的容量大小不可以小于 0,否则将抛出 IllegalArgumentException 异常</span></span><br><span class="line">    <span class="keyword">if</span> (initialCapacity &lt; <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">&quot;Illegal initial capacity: &quot;</span> + initialCapacity);</span><br><span class="line">    <span class="comment">// 判定指定的容量大小是否大于HashMap的容量极限    </span></span><br><span class="line">    <span class="keyword">if</span> (initialCapacity &gt; MAXIMUM_CAPACITY)</span><br><span class="line">        initialCapacity = MAXIMUM_CAPACITY;</span><br><span class="line">    <span class="comment">// 指定的负载因子不可以小于 0 或为 Null，若判定成立则抛出 IllegalArgumentException 异常</span></span><br><span class="line">    <span class="keyword">if</span> (loadFactor &lt;= <span class="number">0</span> || Float.isNaN(loadFactor))</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">&quot;Illegal load factor: &quot;</span> + loadFactor);</span><br><span class="line">    <span class="keyword">this</span>.loadFactor = loadFactor;</span><br><span class="line">    <span class="comment">// 设置 HashMap 阈值，当 HashMap 中存储数据的数量达到 threshold 时，就需要将 HashMap 的容量加倍。</span></span><br><span class="line">    <span class="keyword">this</span>.threshold = tableSizeFor(initialCapacity);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>从一个<code>Map</code>中构建<code>HashMap</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 传入一个Map集合,将Map集合中元素Map.Entry全部添加进HashMap实例中</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">HashMap</span><span class="params">(Map&lt;? extends K, ? extends V&gt; m)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.loadFactor = DEFAULT_LOAD_FACTOR;</span><br><span class="line">    <span class="comment">// 此构造方法主要实现了 Map.putAll()</span></span><br><span class="line">    putMapEntries(m, <span class="keyword">false</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="node单向链表的实现"><a class="markdownIt-Anchor" href="#node单向链表的实现"></a> <code>Node</code>单向链表的实现</h3><blockquote><p>单向链表的实现还是比较简单的</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span>&lt;<span class="title">K</span>,<span class="title">V</span>&gt; <span class="keyword">implements</span> <span class="title">Map</span>.<span class="title">Entry</span>&lt;<span class="title">K</span>,<span class="title">V</span>&gt; </span>&#123;</span><br><span class="line">    <span class="comment">// 节点的哈希值</span></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> hash;</span><br><span class="line">    <span class="comment">// 节点的 key</span></span><br><span class="line">    <span class="keyword">final</span> K key;</span><br><span class="line">    <span class="comment">// 节点的 value</span></span><br><span class="line">    V value;</span><br><span class="line">    <span class="comment">// 后继节点</span></span><br><span class="line">    Node&lt;K,V&gt; next;</span><br><span class="line"></span><br><span class="line">    Node(<span class="keyword">int</span> hash, K key, V value, Node&lt;K,V&gt; next) &#123;</span><br><span class="line">        <span class="keyword">this</span>.hash = hash;</span><br><span class="line">        <span class="keyword">this</span>.key = key;</span><br><span class="line">        <span class="keyword">this</span>.value = value;</span><br><span class="line">        <span class="keyword">this</span>.next = next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> K <span class="title">getKey</span><span class="params">()</span>        </span>&#123; <span class="keyword">return</span> key; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> V <span class="title">getValue</span><span class="params">()</span>      </span>&#123; <span class="keyword">return</span> value; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> key + <span class="string">&quot;=&quot;</span> + value; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计算哈希值</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Objects.hashCode(key) ^ Objects.hashCode(value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置新值，返回旧值</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> V <span class="title">setValue</span><span class="params">(V newValue)</span> </span>&#123;</span><br><span class="line">        V oldValue = value;</span><br><span class="line">        value = newValue;</span><br><span class="line">        <span class="keyword">return</span> oldValue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// equals 属性对比</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object o)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="keyword">this</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (o <span class="keyword">instanceof</span> Map.Entry) &#123;</span><br><span class="line">            Map.Entry&lt;?,?&gt; e = (Map.Entry&lt;?,?&gt;)o;</span><br><span class="line">            <span class="keyword">if</span> (Objects.equals(key, e.getKey()) &amp;&amp;</span><br><span class="line">                Objects.equals(value, e.getValue()))</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="treenode红黑树实现"><a class="markdownIt-Anchor" href="#treenode红黑树实现"></a> <code>TreeNode</code>红黑树实现</h3><blockquote><p>红黑树的实现还是比较复杂的，这里就不列出所有源码，不了解红黑树的朋友，可以移步<a href="https://blog.csdn.net/Sun_TTTT/article/details/65445754">最容易懂得红黑树</a></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">TreeNode</span>&lt;<span class="title">K</span>,<span class="title">V</span>&gt; <span class="keyword">extends</span> <span class="title">LinkedHashMap</span>.<span class="title">Entry</span>&lt;<span class="title">K</span>,<span class="title">V</span>&gt; </span>&#123;</span><br><span class="line">    <span class="comment">// 红黑树的根节点</span></span><br><span class="line">    TreeNode&lt;K,V&gt; parent;  <span class="comment">// red-black tree links</span></span><br><span class="line">    <span class="comment">// 左树</span></span><br><span class="line">    TreeNode&lt;K,V&gt; left;</span><br><span class="line">    <span class="comment">// 右树</span></span><br><span class="line">    TreeNode&lt;K,V&gt; right;</span><br><span class="line">    <span class="comment">// 上一个节点</span></span><br><span class="line">    TreeNode&lt;K,V&gt; prev;    <span class="comment">// needed to unlink next upon deletion</span></span><br><span class="line">    <span class="comment">// 是否为红色节点</span></span><br><span class="line">    <span class="keyword">boolean</span> red;</span><br><span class="line">    TreeNode(<span class="keyword">int</span> hash, K key, V val, Node&lt;K,V&gt; next) &#123;</span><br><span class="line">        <span class="keyword">super</span>(hash, key, val, next);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Returns root of tree containing this node.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">// 根节点的实现</span></span><br><span class="line">    <span class="function"><span class="keyword">final</span> TreeNode&lt;K,V&gt; <span class="title">root</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (TreeNode&lt;K,V&gt; r = <span class="keyword">this</span>, p;;) &#123;</span><br><span class="line">            <span class="keyword">if</span> ((p = r.parent) == <span class="keyword">null</span>)</span><br><span class="line">                <span class="keyword">return</span> r;</span><br><span class="line">            r = p;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="哈希值的计算实现"><a class="markdownIt-Anchor" href="#哈希值的计算实现"></a> 哈希值的计算实现</h3><blockquote><p>主要是将传入的参数<code>key</code>本身的<code>hashCode</code>与h无符号右移 16 位进行二进制异或运算得出一个新的<code>hash</code>值</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> <span class="title">hash</span><span class="params">(Object key)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> h;</span><br><span class="line">    <span class="keyword">return</span> (key == <span class="keyword">null</span>) ? <span class="number">0</span> : (h = key.hashCode()) ^ (h &gt;&gt;&gt; <span class="number">16</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="put插入新的键值对"><a class="markdownIt-Anchor" href="#put插入新的键值对"></a> <code>put</code>插入新的键值对</h3><blockquote><p><code>put</code>方法调用<code>putVal</code>实现插入操作</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> V <span class="title">put</span><span class="params">(K key, V value)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> putVal(hash(key), key, value, <span class="keyword">false</span>, <span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 实现了 Map.put 及相关方法</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> hash key 的哈希值</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> value 插入的 value</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> onlyIfAbsent 如果 true，就不需要更改现有值</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> evict 如果为 false，则该表处于创建模式。</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 前一个值，如果没有则为空</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">final</span> V <span class="title">putVal</span><span class="params">(<span class="keyword">int</span> hash, K key, V value, <span class="keyword">boolean</span> onlyIfAbsent, <span class="keyword">boolean</span> evict)</span> </span>&#123;</span><br><span class="line">    Node&lt;K,V&gt;[] tab; Node&lt;K,V&gt; p; <span class="keyword">int</span> n, i;</span><br><span class="line">    <span class="comment">// 判断表是否为 null 或 空，如果是就对表通过 resize 获取新表</span></span><br><span class="line">    <span class="keyword">if</span> ((tab = table) == <span class="keyword">null</span> || (n = tab.length) == <span class="number">0</span>)</span><br><span class="line">        n = (tab = resize()).length;</span><br><span class="line">    <span class="comment">// 判断数组对应索引位置为 null 就创建新的节点插入该位置    </span></span><br><span class="line">    <span class="keyword">if</span> ((p = tab[i = (n - <span class="number">1</span>) &amp; hash]) == <span class="keyword">null</span>)</span><br><span class="line">        tab[i] = newNode(hash, key, value, <span class="keyword">null</span>);</span><br><span class="line">    <span class="comment">// 说明可能出现相同 key ，也有可能出现哈希碰撞</span></span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        Node&lt;K,V&gt; e; K k;</span><br><span class="line">        <span class="comment">// 判断 hash 和 key 是否匹配，如果匹配就是覆盖了。覆盖原有的 key 的值</span></span><br><span class="line">        <span class="keyword">if</span> (p.hash == hash &amp;&amp;</span><br><span class="line">            ((k = p.key) == key || (key != <span class="keyword">null</span> &amp;&amp; key.equals(k))))</span><br><span class="line">            e = p;</span><br><span class="line">        <span class="comment">// 是否为红黑树结构    </span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (p <span class="keyword">instanceof</span> TreeNode)</span><br><span class="line">            e = ((TreeNode&lt;K,V&gt;)p).putTreeVal(<span class="keyword">this</span>, tab, hash, key, value);</span><br><span class="line">        <span class="comment">// 是否为单链表结构    </span></span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> binCount = <span class="number">0</span>; ; ++binCount) &#123;</span><br><span class="line">                <span class="comment">// next 节点为 null，直接创建新节点插入到当前节点的后继节点中</span></span><br><span class="line">                <span class="keyword">if</span> ((e = p.next) == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    p.next = newNode(hash, key, value, <span class="keyword">null</span>);</span><br><span class="line">                    <span class="comment">// 是否需要转单链表为红黑树结构</span></span><br><span class="line">                    <span class="keyword">if</span> (binCount &gt;= TREEIFY_THRESHOLD - <span class="number">1</span>) <span class="comment">// -1 for 1st</span></span><br><span class="line">                        treeifyBin(tab, hash);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 判断 hash 和 key 是否匹配，如果是就跳出循环，因为找到了啊</span></span><br><span class="line">                <span class="keyword">if</span> (e.hash == hash &amp;&amp;</span><br><span class="line">                    ((k = e.key) == key || (key != <span class="keyword">null</span> &amp;&amp; key.equals(k))))</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                p = e; <span class="comment">// p 记录下一个节点</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//  e 不为 null ，就是存在对于 key 映射</span></span><br><span class="line">        <span class="keyword">if</span> (e != <span class="keyword">null</span>) &#123; <span class="comment">// existing mapping for key</span></span><br><span class="line">            <span class="comment">// 获取原 value</span></span><br><span class="line">            V oldValue = e.value;</span><br><span class="line">            <span class="comment">// 如果需要改变现有值 后者 原 value 为 null</span></span><br><span class="line">            <span class="keyword">if</span> (!onlyIfAbsent || oldValue == <span class="keyword">null</span>)</span><br><span class="line">                e.value = value;</span><br><span class="line">            afterNodeAccess(e);</span><br><span class="line">            <span class="comment">// 返回原 value</span></span><br><span class="line">            <span class="keyword">return</span> oldValue;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 修改次数 +1</span></span><br><span class="line">    ++modCount;</span><br><span class="line">    <span class="comment">// 大小 +1 ，是否需要扩容</span></span><br><span class="line">    <span class="keyword">if</span> (++size &gt; threshold)</span><br><span class="line">        resize();</span><br><span class="line">    afterNodeInsertion(evict);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="get获取对应值"><a class="markdownIt-Anchor" href="#get获取对应值"></a> <code>get</code>获取对应值</h3><blockquote><p>调用<code>getNode</code>方法获取指定<code>key</code>对应的<code>value</code>，未找到就返回<code>null</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> V <span class="title">get</span><span class="params">(Object key)</span> </span>&#123;</span><br><span class="line">    Node&lt;K,V&gt; e;</span><br><span class="line">    <span class="keyword">return</span> (e = getNode(hash(key), key)) == <span class="keyword">null</span> ? <span class="keyword">null</span> : e.value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>根据<code>key</code>的哈希值和<code>key</code>找到对应的节点</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">final</span> Node&lt;K,V&gt; <span class="title">getNode</span><span class="params">(<span class="keyword">int</span> hash, Object key)</span> </span>&#123;</span><br><span class="line">        Node&lt;K,V&gt;[] tab; Node&lt;K,V&gt; first, e; <span class="keyword">int</span> n; K k;</span><br><span class="line">        <span class="comment">// 判断数组不为 null，且不为空，且数组对应索引位的节点不为 null</span></span><br><span class="line">        <span class="keyword">if</span> ((tab = table) != <span class="keyword">null</span> &amp;&amp; (n = tab.length) &gt; <span class="number">0</span> &amp;&amp;</span><br><span class="line">            (first = tab[(n - <span class="number">1</span>) &amp; hash]) != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 判断 hash 和 key 是否匹配，匹配了就直接返回    </span></span><br><span class="line">            <span class="keyword">if</span> (first.hash == hash &amp;&amp; <span class="comment">// always check first node</span></span><br><span class="line">                ((k = first.key) == key || (key != <span class="keyword">null</span> &amp;&amp; key.equals(k))))</span><br><span class="line">                <span class="keyword">return</span> first;</span><br><span class="line">            <span class="comment">//节点的后继节点不为 null</span></span><br><span class="line">            <span class="keyword">if</span> ((e = first.next) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="comment">// 如果是红黑树结构</span></span><br><span class="line">                <span class="keyword">if</span> (first <span class="keyword">instanceof</span> TreeNode)</span><br><span class="line">                    <span class="keyword">return</span> ((TreeNode&lt;K,V&gt;)first).getTreeNode(hash, key);</span><br><span class="line">                <span class="comment">// 当前节点是链表结构，遍历链表直到找到 hash 和 key 都匹配的节点 </span></span><br><span class="line">                <span class="keyword">do</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (e.hash == hash &amp;&amp;</span><br><span class="line">                        ((k = e.key) == key || (key != <span class="keyword">null</span> &amp;&amp; key.equals(k))))</span><br><span class="line">                        <span class="keyword">return</span> e;</span><br><span class="line">                &#125; <span class="keyword">while</span> ((e = e.next) != <span class="keyword">null</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">```   </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### `resize`扩容</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">```java</span><br><span class="line">    <span class="keyword">final</span> Node&lt;K,V&gt;[] resize() &#123;</span><br><span class="line">        <span class="comment">// 记录旧哈希表</span></span><br><span class="line">        Node&lt;K,V&gt;[] oldTab = table;</span><br><span class="line">        <span class="comment">// 记录旧哈希表数组大小</span></span><br><span class="line">        <span class="keyword">int</span> oldCap = (oldTab == <span class="keyword">null</span>) ? <span class="number">0</span> : oldTab.length;</span><br><span class="line">        <span class="comment">// 记录原 threshold</span></span><br><span class="line">        <span class="keyword">int</span> oldThr = threshold;</span><br><span class="line">        <span class="keyword">int</span> newCap, newThr = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 说明 HashMap 已经初始化过</span></span><br><span class="line">        <span class="keyword">if</span> (oldCap &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// 旧哈希表大小超过最大允许容量大小，旧将 threshold 置为 Integer.MAX_VALUE，就直接返回旧哈希表</span></span><br><span class="line">            <span class="keyword">if</span> (oldCap &gt;= MAXIMUM_CAPACITY) &#123;</span><br><span class="line">                threshold = Integer.MAX_VALUE;</span><br><span class="line">                <span class="keyword">return</span> oldTab;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 原数组大小 * 2 小于最大允许容量大小，且原数组大小超过默认初始化大小</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> ((newCap = oldCap &lt;&lt; <span class="number">1</span>) &lt; MAXIMUM_CAPACITY &amp;&amp;</span><br><span class="line">                     oldCap &gt;= DEFAULT_INITIAL_CAPACITY)</span><br><span class="line">                <span class="comment">// 新 threshold 就等于原哈希表长度 * 2</span></span><br><span class="line">                newThr = oldThr &lt;&lt; <span class="number">1</span>; <span class="comment">// double threshold</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 数组为空，第一次初始化，新数组大小就等于 threshold</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (oldThr &gt; <span class="number">0</span>) <span class="comment">// initial capacity was placed in threshold</span></span><br><span class="line">            newCap = oldThr;</span><br><span class="line">        <span class="comment">// threshold为零表示使用默认值 </span></span><br><span class="line">        <span class="keyword">else</span> &#123;               <span class="comment">// zero initial threshold signifies using defaults</span></span><br><span class="line">            newCap = DEFAULT_INITIAL_CAPACITY;</span><br><span class="line">            newThr = (<span class="keyword">int</span>)(DEFAULT_LOAD_FACTOR * DEFAULT_INITIAL_CAPACITY);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 新的 threshold 为 0</span></span><br><span class="line">        <span class="keyword">if</span> (newThr == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// 通过新表大小乘以负载因子获取 threshold</span></span><br><span class="line">            <span class="keyword">float</span> ft = (<span class="keyword">float</span>)newCap * loadFactor;</span><br><span class="line">            newThr = (newCap &lt; MAXIMUM_CAPACITY &amp;&amp; ft &lt; (<span class="keyword">float</span>)MAXIMUM_CAPACITY ?</span><br><span class="line">                      (<span class="keyword">int</span>)ft : Integer.MAX_VALUE);</span><br><span class="line">        &#125;</span><br><span class="line">        threshold = newThr; <span class="comment">// 得到新的 threshold</span></span><br><span class="line">        <span class="meta">@SuppressWarnings(&#123;&quot;rawtypes&quot;,&quot;unchecked&quot;&#125;)</span></span><br><span class="line">        <span class="comment">// 创建新的哈希表</span></span><br><span class="line">            Node&lt;K,V&gt;[] newTab = (Node&lt;K,V&gt;[])<span class="keyword">new</span> Node[newCap];    </span><br><span class="line">        table = newTab;</span><br><span class="line">        <span class="comment">// 如果旧表有数据，就需要把旧表数据重新 put 到新表</span></span><br><span class="line">        <span class="keyword">if</span> (oldTab != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 开始遍历哈希表数组</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; oldCap; ++j) &#123;</span><br><span class="line">                Node&lt;K,V&gt; e;</span><br><span class="line">                <span class="comment">// 当前索引位置节点不为 null</span></span><br><span class="line">                <span class="keyword">if</span> ((e = oldTab[j]) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    oldTab[j] = <span class="keyword">null</span>;</span><br><span class="line">                    <span class="comment">// 没有下一个节点，就是单节点的单向链表，直接重新通过哈希取模获取需要插入新表的位置</span></span><br><span class="line">                    <span class="keyword">if</span> (e.next == <span class="keyword">null</span>)</span><br><span class="line">                        newTab[e.hash &amp; (newCap - <span class="number">1</span>)] = e;</span><br><span class="line">                    <span class="comment">// 红黑树结构节点    </span></span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span> (e <span class="keyword">instanceof</span> TreeNode)</span><br><span class="line">                        ((TreeNode&lt;K,V&gt;)e).split(<span class="keyword">this</span>, newTab, j, oldCap);</span><br><span class="line">                    <span class="comment">// 单向链表结构    </span></span><br><span class="line">                    <span class="keyword">else</span> &#123; <span class="comment">// preserve order</span></span><br><span class="line">                        <span class="comment">// 存储与旧索引的相同的节点</span></span><br><span class="line">                        Node&lt;K,V&gt; loHead = <span class="keyword">null</span>, loTail = <span class="keyword">null</span>;</span><br><span class="line">                        <span class="comment">// /存储与新索引相同的节点</span></span><br><span class="line">                        Node&lt;K,V&gt; hiHead = <span class="keyword">null</span>, hiTail = <span class="keyword">null</span>;</span><br><span class="line">                        Node&lt;K,V&gt; next;</span><br><span class="line">                        <span class="comment">// 循环获取旧索引的节点</span></span><br><span class="line">                        <span class="keyword">do</span> &#123;</span><br><span class="line">                            <span class="comment">// 获取下一个节点</span></span><br><span class="line">                            next = e.next;</span><br><span class="line">                            <span class="comment">// e.hash &amp; oldCap 等于 0 ，最高位 为 0，这是索引不变的链表，就说明索引不变</span></span><br><span class="line">                            <span class="keyword">if</span> ((e.hash &amp; oldCap) == <span class="number">0</span>) &#123;</span><br><span class="line">                                <span class="comment">// 第一次循环，尾节点为 null，将 e 赋值给头节点</span></span><br><span class="line">                                <span class="keyword">if</span> (loTail == <span class="keyword">null</span>)</span><br><span class="line">                                    loHead = e;</span><br><span class="line">                                <span class="comment">// 将原尾节点的下一个节点设置为当前节点，当前节点就是尾节点了</span></span><br><span class="line">                                <span class="keyword">else</span></span><br><span class="line">                                    loTail.next = e;</span><br><span class="line">                                <span class="comment">// 尾节点为当前节点</span></span><br><span class="line">                                loTail = e;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="comment">//最高位 为 1 ，说明索引发生了变化</span></span><br><span class="line">                            <span class="keyword">else</span> &#123;</span><br><span class="line">                                <span class="keyword">if</span> (hiTail == <span class="keyword">null</span>)</span><br><span class="line">                                    hiHead = e;</span><br><span class="line">                                <span class="keyword">else</span></span><br><span class="line">                                    hiTail.next = e;</span><br><span class="line">                                hiTail = e;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125; <span class="keyword">while</span> ((e = next) != <span class="keyword">null</span>);</span><br><span class="line">                        <span class="comment">// 尾节点不为 null，说明节点数为 &gt; 1</span></span><br><span class="line">                        <span class="keyword">if</span> (loTail != <span class="keyword">null</span>) &#123;</span><br><span class="line">                            loTail.next = <span class="keyword">null</span>;</span><br><span class="line">                            newTab[j] = loHead;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">if</span> (hiTail != <span class="keyword">null</span>) &#123;</span><br><span class="line">                            hiTail.next = <span class="keyword">null</span>;</span><br><span class="line">                            <span class="comment">// rehash　后节点新的位置一定为 原索引 +　oldCap</span></span><br><span class="line">                            newTab[j + oldCap] = hiHead;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> newTab;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><blockquote><p><code>HashMap</code>的扩容特别占用系统资源，涉及到内存拷贝。所以我们在使用中尽量避免<code>HashMap</code>触发扩容。当 <code>size</code> &gt; <code>threshold</code> 的时候会触发扩容操作，所以尽量根据实际场景给定<code>HashMap</code>初始化容量。避免因为默认容量过小导致频繁扩容。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> jdk源码 </category>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> jdk源码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>死磕Jdk源码之LinkedList</title>
      <link href="post/jdk-source-linkedlist.html"/>
      <url>post/jdk-source-linkedlist.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p><strong>死磕Jdk源码之<code>LinkedList</code></strong>:</p><p>本博客目前所有 死磕 Jdk 源码系列都是使用 <code>jdk1.8</code>版本。</p></div><h2 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h2><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/LinkedList.png" alt="" /></p><blockquote><p>双向链表实现了列表和<code>Deque</code>接口。实现所有可选的列表操作，并允许所有元素(包括<code>null</code>)。<br />所有操作的执行都符合双向链表的预期。索引到列表中的操作将从头或尾遍历列表，以更接近指定索引的操作为准。</p></blockquote><h2 id="特性"><a class="markdownIt-Anchor" href="#特性"></a> 特性</h2><ol><li><code>LinkedList</code>是一个继承于<code>AbstractSequentialList</code>的双向链表。它也可以被当做堆栈、队列或双端队列进行使用。</li><li><code>LinkedList</code>实现<code>List</code>接口，能让它进行队列操作。</li><li><code>LinkedList</code>实现<code>Deque</code>接口，即能将<code>LinkedList</code>当做双端队列使用。</li><li><code>LinkedList</code>实现<code>Cloneable</code>，即覆盖了函数<code>clone()</code>，能被克隆。</li><li><code>LinkedList</code>实现了<code>java.io.Serializable</code>接口，这意味着<code>LinkedList</code>支持序列化，能通过序列化去传输。</li><li><code>LinkedList</code>中的操作不是线程安全的。</li></ol><h3 id="数据结构"><a class="markdownIt-Anchor" href="#数据结构"></a> 数据结构</h3><p><code>LinkedList</code>内部维护一个双向列表</p><h3 id="线程安全性"><a class="markdownIt-Anchor" href="#线程安全性"></a> 线程安全性</h3><p>这个实现不是同步的。如果多个线程同时访问一个链表，并且至少有一个线程从结构上修改了链表，那么它必须在外部同步。(结构修改是指增加或删除一个或多个元素的任何操作;仅仅设置元素的值并不是一种结构修改。)这通常是通过对一些自然封装列表的对象进行同步来实现的。如果不存在这样的对象，则应该使用集合对列表进行“包装”。<code>synchronizedList</code>方法。这最好在创建时完成，以防止意外的不同步访问列表:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List list = Collections.synchronizedList(<span class="keyword">new</span> LinkedList());</span><br></pre></td></tr></table></figure><h3 id="成员变量"><a class="markdownIt-Anchor" href="#成员变量"></a> 成员变量</h3><p><code>LinkedList</code>有三个个关键的成员变量</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/linkedlist-member-variables.jpg" alt="" /></p><blockquote><p>还有一个记录集合修改次数的变量，由<code>iterator</code>和<code>listIterator</code>，如果在迭代过程中，<code>modCount</code>的值变更，就会抛出<code>ConcurrentModificationException</code>异常。</p></blockquote><ul><li><strong>size</strong></li></ul><p>表示<code>LinkedList</code>中的元素个数</p><ul><li><strong>first</strong></li></ul><p><code>LinkedList</code>的第一个节点</p><p>满足要么第一个节点和最后一个节点都为<code>null</code>，要么第一个节点不为null，第一个的前驱节点为空</p><ul><li><strong>last</strong></li></ul><p><code>LinkedList</code>的最后一个节点</p><p>满足要么第一个节点和最后一个节点都为<code>null</code>，要么最后一个节点不为null，第一个的后继节点为空</p><h2 id="死磕源码"><a class="markdownIt-Anchor" href="#死磕源码"></a> 死磕源码</h2><h3 id="添加元素"><a class="markdownIt-Anchor" href="#添加元素"></a> 添加元素</h3><h4 id="adde-e"><a class="markdownIt-Anchor" href="#adde-e"></a> add(E e)</h4><blockquote><p>将指定的元素追加到此列表的末尾。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">add</span><span class="params">(E e)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 将元素 e 追加到链表末尾</span></span><br><span class="line">    linkLast(e);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Links e as last element.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">linkLast</span><span class="params">(E e)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 获取当前 last 节点</span></span><br><span class="line">    <span class="keyword">final</span> Node&lt;E&gt; l = last;</span><br><span class="line">    <span class="comment">// 创建一个新节点，节点的前驱节点为原 last 节点，节点的后继节点为 null</span></span><br><span class="line">    <span class="keyword">final</span> Node&lt;E&gt; newNode = <span class="keyword">new</span> Node&lt;&gt;(l, e, <span class="keyword">null</span>);</span><br><span class="line">    <span class="comment">// 将当前节点置为末尾绩点</span></span><br><span class="line">    last = newNode;</span><br><span class="line">    <span class="comment">// 如果原 last 节点为 null，就说明链表为空，将 first 设置为新节点</span></span><br><span class="line">    <span class="keyword">if</span> (l == <span class="keyword">null</span>)</span><br><span class="line">        first = newNode;</span><br><span class="line">    <span class="comment">// 如果原末尾节点不为 null，将原 last 节点的后继节点指向新节点</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        l.next = newNode;</span><br><span class="line">    <span class="comment">// 链表大小 +1</span></span><br><span class="line">    size++;</span><br><span class="line">    <span class="comment">// 修改次数 + 1</span></span><br><span class="line">    modCount++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="addint-index-e-element"><a class="markdownIt-Anchor" href="#addint-index-e-element"></a> add(int index, E element)</h4><blockquote><p>将指定元素插入到列表中的指定位置。通过改变后续元素的指向。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> index, E element)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 检查给定的索引是否合法</span></span><br><span class="line">    checkPositionIndex(index);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果索引值等于链表大小，就相当于在尾部追加节点</span></span><br><span class="line">    <span class="keyword">if</span> (index == size)</span><br><span class="line">        linkLast(element);</span><br><span class="line">    <span class="comment">// 调用 linkBefore ，在指定节点前插入元素 element</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        linkBefore(element, node(index));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>node</code>方法根据索引返回指定位置的节点，其实就是遍历链表</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the (non-null) Node at the specified element index.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">Node&lt;E&gt; <span class="title">node</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// assert isElementIndex(index);</span></span><br><span class="line">    <span class="comment">// 等同于 index &lt; size/2，如果索引在链表的前半部分就从 first 节点往后遍历</span></span><br><span class="line">    <span class="keyword">if</span> (index &lt; (size &gt;&gt; <span class="number">1</span>)) &#123;</span><br><span class="line">        Node&lt;E&gt; x = first;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; index; i++)</span><br><span class="line">            x = x.next;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    <span class="comment">// 如果 索引在链表的后半部分就从 last 节点往前遍历    </span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        Node&lt;E&gt; x = last;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = size - <span class="number">1</span>; i &gt; index; i--)</span><br><span class="line">            x = x.prev;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>在指定节点 succ 前插入 元素 e</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Inserts element e before non-null Node succ.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">linkBefore</span><span class="params">(E e, Node&lt;E&gt; succ)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// assert succ != null;</span></span><br><span class="line">    <span class="comment">// 获取被插入节点的前驱节点</span></span><br><span class="line">    <span class="keyword">final</span> Node&lt;E&gt; pred = succ.prev;</span><br><span class="line">    <span class="comment">// 创建一个新的节点，前驱节点为 succ 节点的前驱节点，后继节点为 succ 节点</span></span><br><span class="line">    <span class="keyword">final</span> Node&lt;E&gt; newNode = <span class="keyword">new</span> Node&lt;&gt;(pred, e, succ);</span><br><span class="line">    <span class="comment">// 将 succ 节点的前驱节点置为新节点</span></span><br><span class="line">    succ.prev = newNode;</span><br><span class="line">    <span class="comment">// 如果 succ 节点的 前驱节点为null，也就是说原链表为空，新节点就是第一个元素，新节点同时也是 first 节点</span></span><br><span class="line">    <span class="keyword">if</span> (pred == <span class="keyword">null</span>)</span><br><span class="line">        first = newNode;</span><br><span class="line">    <span class="comment">// 否则就将原 succ 节点的前驱节点的后继节点置为新节点 </span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        pred.next = newNode;</span><br><span class="line">    <span class="comment">// 链表大小 +1    </span></span><br><span class="line">    size++;</span><br><span class="line">    <span class="comment">// 修改次数 + 1</span></span><br><span class="line">    modCount++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="移除元素"><a class="markdownIt-Anchor" href="#移除元素"></a> 移除元素</h3><h4 id="removeobject-o"><a class="markdownIt-Anchor" href="#removeobject-o"></a> remove(Object o)</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">remove</span><span class="params">(Object o)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 如果 o 为 null，就移除第一个元素为 null 的节点</span></span><br><span class="line">    <span class="keyword">if</span> (o == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (Node&lt;E&gt; x = first; x != <span class="keyword">null</span>; x = x.next) &#123;</span><br><span class="line">            <span class="keyword">if</span> (x.item == <span class="keyword">null</span>) &#123;</span><br><span class="line">                unlink(x);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="comment">// 否则移除第一个 equals o 的元素节点    </span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (Node&lt;E&gt; x = first; x != <span class="keyword">null</span>; x = x.next) &#123;</span><br><span class="line">            <span class="keyword">if</span> (o.equals(x.item)) &#123;</span><br><span class="line">                unlink(x);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>从链表中移除对应的节点</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Unlinks non-null node x.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">E <span class="title">unlink</span><span class="params">(Node&lt;E&gt; x)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// assert x != null;</span></span><br><span class="line">    <span class="comment">// 获取当前节点的元素 element</span></span><br><span class="line">    <span class="keyword">final</span> E element = x.item;</span><br><span class="line">    <span class="comment">// 获取当前节点的后继节点 next</span></span><br><span class="line">    <span class="keyword">final</span> Node&lt;E&gt; next = x.next;</span><br><span class="line">    <span class="comment">// 获取当前节点的前驱节点 prev</span></span><br><span class="line">    <span class="keyword">final</span> Node&lt;E&gt; prev = x.prev;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果 prev 节点为 null，说明是 first 节点，就将 next 节点指向 first</span></span><br><span class="line">    <span class="keyword">if</span> (prev == <span class="keyword">null</span>) &#123;</span><br><span class="line">        first = next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 否则</span></span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 将 prev 节点的后继节点指向 next 节点</span></span><br><span class="line">        prev.next = next;</span><br><span class="line">        <span class="comment">// 当前节点的前驱节点置为 null</span></span><br><span class="line">        x.prev = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 如果 next 节点为 null，说明是 last 节点，就将 prev 节点指向 last</span></span><br><span class="line">    <span class="keyword">if</span> (next == <span class="keyword">null</span>) &#123;</span><br><span class="line">        last = prev;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="comment">// 否则</span></span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">/// 将 next 节点的前驱节点指向 prev 节点</span></span><br><span class="line">        <span class="comment">// 当前节点的后继节点置为 null</span></span><br><span class="line">        next.prev = prev;</span><br><span class="line">        x.next = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 当前节点元素置为 null</span></span><br><span class="line">    x.item = <span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">// 链表大小 -1</span></span><br><span class="line">    size--;</span><br><span class="line">    <span class="comment">// 修改次数 + 1</span></span><br><span class="line">    modCount++;</span><br><span class="line">    <span class="comment">// 返回被移除的元素</span></span><br><span class="line">    <span class="keyword">return</span> element;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="removefirst"><a class="markdownIt-Anchor" href="#removefirst"></a> removeFirst()</h4><blockquote><p>移除链表的 first 节点并返回被移除的元素</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> E <span class="title">removeFirst</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 获取当前 first 节点</span></span><br><span class="line">    <span class="keyword">final</span> Node&lt;E&gt; f = first;</span><br><span class="line">    <span class="comment">// 如果 first 节点为 null，也就是链表为空，就抛出 NoSuchElementException 异常</span></span><br><span class="line">    <span class="keyword">if</span> (f == <span class="keyword">null</span>)</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NoSuchElementException();</span><br><span class="line">    <span class="comment">// 移除 first 节点</span></span><br><span class="line">    <span class="keyword">return</span> unlinkFirst(f);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Unlinks non-null first node f.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> E <span class="title">unlinkFirst</span><span class="params">(Node&lt;E&gt; f)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// assert f == first &amp;&amp; f != null;</span></span><br><span class="line">    <span class="comment">// 获取 f 节点的元素</span></span><br><span class="line">    <span class="keyword">final</span> E element = f.item;</span><br><span class="line">    <span class="comment">// 获取 f (原 first)节点的后继节点 next</span></span><br><span class="line">    <span class="keyword">final</span> Node&lt;E&gt; next = f.next;</span><br><span class="line">    <span class="comment">// 将 f 节点 元素置为 null</span></span><br><span class="line">    f.item = <span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">// 将 f 节点 后继节点置为 null</span></span><br><span class="line">    f.next = <span class="keyword">null</span>; <span class="comment">// help GC</span></span><br><span class="line">    <span class="comment">// 将 first 节点指向 f (原 first) 节点的 next 节点</span></span><br><span class="line">    first = next;</span><br><span class="line">    <span class="comment">// 如果 next 节点为 null，说明此时链表为空，last 节点也应该为 null</span></span><br><span class="line">    <span class="keyword">if</span> (next == <span class="keyword">null</span>)</span><br><span class="line">        last = <span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">// 否则，将 next (当前 first)节点的前驱节点置为 null   </span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        next.prev = <span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">// 链表大小 -1        </span></span><br><span class="line">    size--;</span><br><span class="line">    <span class="comment">// 修改次数 + 1</span></span><br><span class="line">    modCount++;</span><br><span class="line">    <span class="comment">// 返回被移除的元素</span></span><br><span class="line">    <span class="keyword">return</span> element;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="removelast"><a class="markdownIt-Anchor" href="#removelast"></a> removeLast()</h4><blockquote><p>移除链表的 last 节点并返回被移除的元素</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Removes and returns the last element from this list.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> the last element from this list</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> NoSuchElementException if this list is empty</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> E <span class="title">removeLast</span><span class="params">()</span> </span>&#123;</span><br><span class="line">     <span class="comment">// 获取当前 last 节点</span></span><br><span class="line">    <span class="keyword">final</span> Node&lt;E&gt; l = last;</span><br><span class="line">     <span class="comment">// 如果 last 节点为 null，也就是链表为空，就抛出 NoSuchElementException 异常</span></span><br><span class="line">    <span class="keyword">if</span> (l == <span class="keyword">null</span>)</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NoSuchElementException();</span><br><span class="line">    <span class="comment">// 移除 last 节点    </span></span><br><span class="line">    <span class="keyword">return</span> unlinkLast(l);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Unlinks non-null last node l.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> E <span class="title">unlinkLast</span><span class="params">(Node&lt;E&gt; l)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// assert l == last &amp;&amp; l != null;</span></span><br><span class="line">    <span class="comment">// 获取 l 节点的元素</span></span><br><span class="line">    <span class="keyword">final</span> E element = l.item;</span><br><span class="line">    <span class="comment">// 获取 l (原 last)节点的前驱节点 prev</span></span><br><span class="line">    <span class="keyword">final</span> Node&lt;E&gt; prev = l.prev;</span><br><span class="line">    <span class="comment">// 将 l 节点 元素置为 null</span></span><br><span class="line">    l.item = <span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">// 将 l 节点 前驱节点置为 null</span></span><br><span class="line">    l.prev = <span class="keyword">null</span>; <span class="comment">// help GC</span></span><br><span class="line">    <span class="comment">// 将 last 节点指向 原 last 节点的前驱节点 prev</span></span><br><span class="line">    last = prev;</span><br><span class="line">    <span class="comment">//  如果 prev 为 null，说明链表为空，将 first置为 null</span></span><br><span class="line">    <span class="keyword">if</span> (prev == <span class="keyword">null</span>)</span><br><span class="line">        first = <span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">// 否则，将 prev (当前 last)节点的后继节点置为 null   </span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        prev.next = <span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">// 链表大小 -1        </span></span><br><span class="line">    size--;</span><br><span class="line">    <span class="comment">// 修改次数 + 1</span></span><br><span class="line">    modCount++;</span><br><span class="line">    <span class="comment">// 返回被移除的元素</span></span><br><span class="line">    <span class="keyword">return</span> element;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><blockquote><p><code>LinkedList</code>插入效率很高，通过索引插入效率较低需要遍历链表，根据索引值选择从 <code>last</code> 或 <code>first</code> 节点开始遍历。最坏结果为需要遍历 size/2 个元素。<br /><code>LinkedList</code>移除元素效率很高，通过索引移除元素同通过索引插入元素，需要遍历节点。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> jdk源码 </category>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> jdk源码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>死磕Jdk源码之ArrayList</title>
      <link href="post/jdk-source-arraylist.html"/>
      <url>post/jdk-source-arraylist.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p><strong>死磕Jdk源码之<code>ArrayList</code></strong>:</p><p>本博客目前所有 死磕 Jdk 源码系列都是使用 <code>jdk1.8</code>版本。</p></div><h2 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h2><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/ArrayList.png" alt="" /></p><blockquote><p><code>List</code>接口的可调整大小的数组实现。实现所有可选的列表操作，并允许所有元素，包括<code>null</code>。除了实现<code>List</code>接口之外，该类还提供了一些方法来操作数组的大小，该数组在内部用于存储<code>List</code>。(这个类大致相当于<code>Vector</code>，只是它是不同步的。)<br /><code>size</code>、<code>isEmpty</code>、<code>get</code>、<code>set</code>、<code>iterator</code>和<code>listIterator</code>操作在常数时间内运行。添加操作在平摊常数时间内运行，也就是说，添加n个元素需要O(n)个时间。所有其他操作都在线性时间内运行(粗略地说)。与<code>LinkedList</code>实现相比，常量因子较低。</p></blockquote><p>以上是官方<a href="https://docs.oracle.com/javase/8/docs/api/">docs</a>对<code>ArrayList</code>的描述</p><h2 id="特性"><a class="markdownIt-Anchor" href="#特性"></a> 特性</h2><ol><li><code>ArrayList</code>实现<code>List</code>，得到了<code>List</code>集合框架基础功能</li><li><code>ArrayList</code>实现<code>RandomAccess</code>，获得了快速随机访问存储元素的功能，<code>RandomAccess</code>是一个标记接口，没有任何方法</li><li><code>ArrayList</code>实现<code>Cloneable</code>，得到了<code>clone()</code>方法，可以实现克隆功能</li><li><code>ArrayList</code>实现<code>Serializable</code>，表示可以被序列化，通过序列化去传输，典型的应用就是<code>hessian</code>协议。</li></ol><p>它具有如下特点：</p><ul><li>容量不固定，随着容量的增加而动态扩容（阈值基本不会达到）</li><li>有序集合（插入的顺序 == 输出的顺序）</li><li>插入的元素可以为<code>null</code></li><li>增删改查效率更高（相对于<code>LinkedList</code>来说）</li><li>线程不安全</li></ul><h3 id="数据结构"><a class="markdownIt-Anchor" href="#数据结构"></a> 数据结构</h3><p><code>ArrayList</code>的底层数据结构就是一个数组，对<code>ArrayList</code>的所有操作底层都是基于数组的。</p><h3 id="线程安全性"><a class="markdownIt-Anchor" href="#线程安全性"></a> 线程安全性</h3><p>如果非要在多线程的环境下使用<code>ArrayList</code>，就需要保证它的线程安全性，通常有两种解决办法：</p><ol><li>使用<code>synchronized</code>关键字</li><li>使用<code>Collections</code>类中的静态方法<code>synchronizedList()</code>对<code>ArrayList</code>进行调用即可。</li></ol><h3 id="成员变量"><a class="markdownIt-Anchor" href="#成员变量"></a> 成员变量</h3><p><code>ArrayList</code>有两个关键的成员变量</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/arraylist-member-variables.jpg" alt="" /></p><blockquote><p>还有一个记录集合修改次数的变量，由<code>iterator</code>和<code>listIterator</code>，如果在迭代过程中，<code>modCount</code>的值变更，就会抛出<code>ConcurrentModificationException</code>异常。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">transient</span> <span class="keyword">int</span> modCount = <span class="number">0</span>;</span><br></pre></td></tr></table></figure><ul><li><strong>elementData</strong></li></ul><blockquote><p>存储<code>ArrayList</code>元素的数组缓冲区。<code>ArrayList</code>的容量是这个数组缓冲区的长度。任何空<code>ArrayList</code>与<code>elementData == DEFAULTCAPACITY_EMPTY_ELEMENTDATA</code>,将在添加第一个元素时扩展为<code>DEFAULT_CAPACITY</code>。</p></blockquote><p><code>elementData</code>就是实际维护的数组,对于一个空<code>ArrayList</code>来说,<code>elementData</code>就是一个空数组。会在第一次<code>add</code>元素时扩容为长度为<code>DEFAULT_CAPACITY</code>的数组。</p><ul><li><strong>size</strong></li></ul><p><code>ArrayList</code>的大小(它包含的元素的数量)。这里的<code>size</code>指的是元素的个数，而不是数组的大小。</p><h2 id="死磕源码"><a class="markdownIt-Anchor" href="#死磕源码"></a> 死磕源码</h2><h3 id="构造函数"><a class="markdownIt-Anchor" href="#构造函数"></a> 构造函数</h3><blockquote><p>无参构造函数，elementData 等于默认的空数组</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Constructs an empty list with an initial capacity of ten.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ArrayList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.elementData = DEFAULTCAPACITY_EMPTY_ELEMENTDATA;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>根据给定的初始化容量大小创建<code>ArrayList</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ArrayList</span><span class="params">(<span class="keyword">int</span> initialCapacity)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (initialCapacity &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.elementData = <span class="keyword">new</span> Object[initialCapacity];</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (initialCapacity == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.elementData = EMPTY_ELEMENTDATA;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">&quot;Illegal Capacity: &quot;</span> + initialCapacity);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>从一个<code>Collection</code>集合创建<code>ArrayList</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ArrayList</span><span class="params">(Collection&lt;? extends E&gt; c)</span> </span>&#123;</span><br><span class="line">    elementData = c.toArray();</span><br><span class="line">    <span class="keyword">if</span> ((size = elementData.length) != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// c.toArray might (incorrectly) not return Object[] (see 6260652)</span></span><br><span class="line">        <span class="keyword">if</span> (elementData.getClass() != Object[].class)</span><br><span class="line">            elementData = Arrays.copyOf(elementData, size, Object[].class);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// replace with empty array.</span></span><br><span class="line">        <span class="keyword">this</span>.elementData = EMPTY_ELEMENTDATA;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="添加元素"><a class="markdownIt-Anchor" href="#添加元素"></a> 添加元素</h3><p><code>ArrayList</code>提供两个方法添加单个元素，一个可以指定索引的添加元素方法，一个不需要指定索引的添加元素方法。</p><ul><li><code>add(E e)</code></li></ul><blockquote><p>将指定的元素追加到此列表的末尾。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">add</span><span class="params">(E e)</span> </span>&#123;</span><br><span class="line">    ensureCapacityInternal(size + <span class="number">1</span>);  <span class="comment">// Increments modCount!!</span></span><br><span class="line">    elementData[size++] = e;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>在<code>ensureCapacityInternal</code>方法中对<code>modCount</code>成员变量 +1,表示集合的修改次数，检查数组容量，是否需要扩容。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ensureCapacityInternal</span><span class="params">(<span class="keyword">int</span> minCapacity)</span> </span>&#123;</span><br><span class="line">    ensureExplicitCapacity(calculateCapacity(elementData, minCapacity));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>calculateCapacity</code>方法是为了计算最小扩容量</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">calculateCapacity</span><span class="params">(Object[] elementData, <span class="keyword">int</span> minCapacity)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 也就是当前数组是个默认空数组,集合内无元素,此时返回 DEFAULT_CAPACITY 和 minCapacity 的最大值,否则就返回 minCapacity</span></span><br><span class="line">    <span class="keyword">if</span> (elementData == DEFAULTCAPACITY_EMPTY_ELEMENTDATA) &#123;</span><br><span class="line">        <span class="keyword">return</span> Math.max(DEFAULT_CAPACITY, minCapacity);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> minCapacity;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>ensureExplicitCapacity</code>方法需要判断数组是否需要扩容</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ensureExplicitCapacity</span><span class="params">(<span class="keyword">int</span> minCapacity)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// modCount + 1 记录修改次数</span></span><br><span class="line">    modCount++;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断数组容量是否溢出</span></span><br><span class="line">    <span class="keyword">if</span> (minCapacity - elementData.length &gt; <span class="number">0</span>)</span><br><span class="line">        <span class="comment">// 这里对数组进行扩容</span></span><br><span class="line">        grow(minCapacity);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>grow</strong>方法，<code>ArrayList</code>扩容的核心方法。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">grow</span><span class="params">(<span class="keyword">int</span> minCapacity)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 获取当前数组大小</span></span><br><span class="line">    <span class="keyword">int</span> oldCapacity = elementData.length;</span><br><span class="line">    <span class="comment">// 计算新的容量大小  =  oldCapacity * 1.5 (右移一位 相当于 oldCapacity / 2)</span></span><br><span class="line">    <span class="keyword">int</span> newCapacity = oldCapacity + (oldCapacity &gt;&gt; <span class="number">1</span>);</span><br><span class="line">    <span class="comment">// 计算的新容量小于 minCapacity，就取 minCapacity</span></span><br><span class="line">    <span class="keyword">if</span> (newCapacity - minCapacity &lt; <span class="number">0</span>)</span><br><span class="line">        newCapacity = minCapacity;</span><br><span class="line">    <span class="comment">// 如果新容量大于 MAX_ARRAY_SIZE,取 Integer.MAX_VALUE</span></span><br><span class="line">    <span class="keyword">if</span> (newCapacity - MAX_ARRAY_SIZE &gt; <span class="number">0</span>)</span><br><span class="line">        newCapacity = hugeCapacity(minCapacity);</span><br><span class="line">    <span class="comment">// minCapacity is usually close to size, so this is a win:</span></span><br><span class="line">    elementData = Arrays.copyOf(elementData, newCapacity);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>add(int index, E element)</code></li></ul><blockquote><p>将指定元素插入其中的指定位置列表。移动当前处于该位置的元素(如果有)并向右的任何后续元素(将一个元素添加到它们的索引中)。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> index, E element)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检查 index 是否合法</span></span><br><span class="line">    rangeCheckForAdd(index);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 同 add(E e)</span></span><br><span class="line">    ensureCapacityInternal(size + <span class="number">1</span>);  <span class="comment">// Increments modCount!!</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 这里使用数组拷贝，把添加位置后的元素往后移，目的是为了空出当前索引位</span></span><br><span class="line">    System.arraycopy(elementData, index, elementData, index + <span class="number">1</span>, size - index);</span><br><span class="line">    <span class="comment">// 将元素插入指定的索引位</span></span><br><span class="line">    elementData[index] = element;</span><br><span class="line">    size++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="移除元素"><a class="markdownIt-Anchor" href="#移除元素"></a> 移除元素</h3><ul><li><code>remove(int index)</code></li></ul><blockquote><p>根据指定索引移除元素</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> E <span class="title">remove</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检查索引是否合法</span></span><br><span class="line">    rangeCheck(index);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// modCount 修改次数 +1</span></span><br><span class="line">    modCount++;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据索引从数组中获取元素</span></span><br><span class="line">    E oldValue = elementData(index);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计算需要拷贝的数组长度</span></span><br><span class="line">    <span class="keyword">int</span> numMoved = size - index - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (numMoved &gt; <span class="number">0</span>)</span><br><span class="line">        <span class="comment">// 对移除元素之后的元素进行数组拷贝，就是将被移除位之后的元素前移</span></span><br><span class="line">        System.arraycopy(elementData, index+<span class="number">1</span>, elementData, index, numMoved);</span><br><span class="line">    <span class="comment">// 集合的最后一位元素置空</span></span><br><span class="line">    elementData[--size] = <span class="keyword">null</span>; <span class="comment">// clear to let GC do its work</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回被移除的元素</span></span><br><span class="line">    <span class="keyword">return</span> oldValue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><code>remove(Object o)</code></li></ul><blockquote><p>从列表中删除指定元素的第一个匹配项</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">remove</span><span class="params">(Object o)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 如果 o 为 null，就删除第一个空元素</span></span><br><span class="line">    <span class="keyword">if</span> (o == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; size; index++)</span><br><span class="line">            <span class="keyword">if</span> (elementData[index] == <span class="keyword">null</span>) &#123;</span><br><span class="line">                fastRemove(index);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="comment">// 否则就移除第一个 equals o 的元素</span></span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; size; index++)</span><br><span class="line">            <span class="keyword">if</span> (o.equals(elementData[index])) &#123;</span><br><span class="line">                fastRemove(index);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>与<code>remove(int index)</code>方法逻辑相同,只是这里没有进行索引检查，因为索引本来就是从数组中遍历出来的</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">fastRemove</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// modCount 修改次数 +1</span></span><br><span class="line">    modCount++;</span><br><span class="line">    <span class="comment">// 计算需要拷贝的数组长度</span></span><br><span class="line">    <span class="keyword">int</span> numMoved = size - index - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (numMoved &gt; <span class="number">0</span>)</span><br><span class="line">        <span class="comment">// 对移除元素之后的元素进行数组拷贝，就是将被移除位之后的元素前移</span></span><br><span class="line">        System.arraycopy(elementData, index+<span class="number">1</span>, elementData, index, numMoved);</span><br><span class="line">    <span class="comment">// 集合的最后一位元素置空</span></span><br><span class="line">    elementData[--size] = <span class="keyword">null</span>; <span class="comment">// clear to let GC do its work</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><ol><li><code>ArrayList</code>底层维护一个数组</li><li><code>ArrayList</code>默认数组是一个空数组 <code>&#123;&#125;</code></li><li><code>ArrayList</code>第一次添加元素时才会扩容到 <code>capacity</code> 大小</li><li><code>ArrayList</code>扩容为原容量到 <code>1.5</code> 倍</li><li><code>ArrayList</code>通过索引添加元素可能会导致内存拷贝</li><li><code>ArrayList</code>移除元素可能需要内存拷贝</li></ol><blockquote><p>所以尽量不要使用索引去添加元素，索引添加元素的效率取决于索引的位置。理论上 <code>size</code> - <code>index</code> 的值越大，效率越低，因为需要拷贝的元素越多。(移除元素同理)</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> jdk源码 </category>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> jdk源码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java实现堆排序</title>
      <link href="post/heap-sort.html"/>
      <url>post/heap-sort.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>堆排序是利用<strong>堆</strong>这种数据结构而设计的一种排序算法，堆排序是一种<strong>选择排序</strong>，它的最坏，最好，平均时间复杂度均为O(nlogn)，它也是不稳定排序。首先简单了解下堆结构。</p></blockquote><p>堆是具有以下性质的完全二叉树：每个结点的值都大于或等于其左右孩子结点的值，称为大顶堆；或者每个结点的值都小于或等于其左右孩子结点的值，称为小顶堆。</p><ul><li>大顶堆：arr[i] &gt;= arr[2i+1] &amp;&amp; arr[i] &gt;= arr[2i+2]</li><li>小顶堆：arr[i] &lt;= arr[2i+1] &amp;&amp; arr[i] &lt;= arr[2i+2]</li></ul><blockquote><p>堆排序的基本思想是：将待排序序列构造成一个大顶堆，此时，整个序列的最大值就是堆顶的根节点。将其与末尾元素进行交换，此时末尾就为最大值。然后将剩余<code>n-1</code>个元素重新构造成一个堆，这样会得到<code>n</code>个元素的次小值。如此反复执行，便能得到一个有序序列了</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="http://ww1.sinaimg.cn/large/0065JV1Hgy1gb1ta7e0ukg30qe0eutlm.gif" alt="" /></p><p>Java实现堆排序</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HeapSort</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span>[] array)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 第一步：将数组堆化 beginIndex = 第一个非叶子节点。 从第一个非叶子节点开始即可。无需从最后一个叶子节点开始。</span></span><br><span class="line"><span class="comment">         * 叶子节点可以看作已符合堆要求的节点，根节点就是它自己且自己以下值为最大。</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">int</span> len = array.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> beginIndex = (len - <span class="number">1</span>) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = beginIndex; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            adjustHeap(array, i, len);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 第二步：对堆化数据排序 每次都是移出最顶层的根节点A[0]，与最尾部节点位置调换，同时遍历长度 - 1。</span></span><br><span class="line"><span class="comment">         * 然后从新整理被换到根节点的末尾元素，使其符合堆的特性。 直至未排序的堆长度为 0。</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = len; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">            swap(array, <span class="number">0</span>, i);</span><br><span class="line">            adjustHeap(array, <span class="number">0</span>, i - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 调整大顶堆（仅是调整过程，建立在大顶堆已构建的基础上）</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> index</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> len</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">adjustHeap</span><span class="params">(<span class="keyword">int</span>[] array, <span class="keyword">int</span> index, <span class="keyword">int</span> len)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> li = (index &lt;&lt; <span class="number">1</span>) + <span class="number">1</span>; <span class="comment">// 左子节点索引</span></span><br><span class="line">        <span class="keyword">int</span> ri = li + <span class="number">1</span>; <span class="comment">// 右子节点索引</span></span><br><span class="line">        <span class="keyword">int</span> cMax = li; <span class="comment">// 子节点值最大索引，默认左子节点。</span></span><br><span class="line">        <span class="keyword">if</span> (li &gt; len) &#123;</span><br><span class="line">            <span class="keyword">return</span>; <span class="comment">// 左子节点索引超出计算范围，直接返回。</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ri &lt;= len &amp;&amp; array[ri] &gt; array[li]) &#123; <span class="comment">// 先判断左右子节点，哪个较大。</span></span><br><span class="line">            cMax = ri;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (array[cMax] &gt; array[index]) &#123; <span class="comment">// 若“&lt;”这是从大到小</span></span><br><span class="line">            swap(array, cMax, index); <span class="comment">// 如果父节点被子节点调换，</span></span><br><span class="line">            adjustHeap(array, cMax, len); <span class="comment">// 则需要继续判断换下后的父节点是否符合堆的特性。</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 交换元素</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> arr</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> a</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> b</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> temp = arr[a];</span><br><span class="line">        arr[a] = arr[b];</span><br><span class="line">        arr[b] = temp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 数据结构 </category>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java实现LRU算法</title>
      <link href="post/lru-java.html"/>
      <url>post/lru-java.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p><strong><code>LRU</code>算法</strong>:</p><p><code>LRU</code>是<code>Least Recently Used</code>的缩写，即最近最少使用，是一种常用的页面置换算法，选择最近最久未使用的页面予以淘汰。该算法赋予每个页面一个访问字段，用来记录一个页面自上次被访问以来所经历的时间 t，当须淘汰一个页面时，选择现有页面中其 t 值最大的，即最近最少使用的页面予以淘汰。</p></div><blockquote><p>基于 <strong>哈希表</strong> + <strong>双向链表</strong> 的 <code>Java</code> 实现</p></blockquote><ul><li><strong>查找</strong> : 通过哈希表查找到，然后移动到双向链表的头部。</li><li><strong>删除</strong> : 通过哈希表查找到，通过双向链表拿到前驱节点，直接删除即可。</li><li><strong>插入</strong> : 先看是否存在，如果存在移动到链表头部，如果不存在，链表满的话删除尾节点，然后插入链表尾头部，否则不满，则直接插入链表头部。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LRUCache</span> </span>&#123;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">private</span> Hashtable&lt;String, DLinkedNode&gt;  cache = <span class="keyword">new</span> Hashtable&lt;&gt;();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> count;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> capacity;</span><br><span class="line">    <span class="keyword">private</span> DLinkedNode head, tail;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LRUCache</span><span class="params">(<span class="keyword">int</span> capacity)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">this</span>.capacity = capacity;</span><br><span class="line"></span><br><span class="line">        head = <span class="keyword">new</span> DLinkedNode();</span><br><span class="line">        head.pre = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        tail = <span class="keyword">new</span> DLinkedNode();</span><br><span class="line">        tail.post = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        head.post = tail;</span><br><span class="line">        tail.pre = head;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">get</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        DLinkedNode node = cache.get(key);</span><br><span class="line">        <span class="keyword">if</span>(node == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>; <span class="comment">// should raise exception here.</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// move the accessed node to the head;</span></span><br><span class="line">        <span class="keyword">this</span>.moveToHead(node);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> node.value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">set</span><span class="params">(String key, <span class="keyword">int</span> value)</span> </span>&#123;</span><br><span class="line">        DLinkedNode node = cache.get(key);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(node == <span class="keyword">null</span>)&#123;</span><br><span class="line"></span><br><span class="line">            DLinkedNode newNode = <span class="keyword">new</span> DLinkedNode();</span><br><span class="line">            newNode.key = key;</span><br><span class="line">            newNode.value = value;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.cache.put(key, newNode);</span><br><span class="line">            <span class="keyword">this</span>.addNode(newNode);</span><br><span class="line"></span><br><span class="line">            ++count;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(count &gt; capacity)&#123;</span><br><span class="line">                <span class="comment">// pop the tail</span></span><br><span class="line">                DLinkedNode tail = <span class="keyword">this</span>.popTail();</span><br><span class="line">                <span class="keyword">this</span>.cache.remove(tail.key);</span><br><span class="line">                --count;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">// update the value.</span></span><br><span class="line">            node.value = value;</span><br><span class="line">            <span class="keyword">this</span>.moveToHead(node);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Always add the new node right after head;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addNode</span><span class="params">(DLinkedNode node)</span></span>&#123;</span><br><span class="line">        node.pre = head;</span><br><span class="line">        node.post = head.post;</span><br><span class="line"></span><br><span class="line">        head.post.pre = node;</span><br><span class="line">        head.post = node;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Remove an existing node from the linked list.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">removeNode</span><span class="params">(DLinkedNode node)</span></span>&#123;</span><br><span class="line">        DLinkedNode pre = node.pre;</span><br><span class="line">        DLinkedNode post = node.post;</span><br><span class="line"></span><br><span class="line">        pre.post = post;</span><br><span class="line">        post.pre = pre;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Move certain node in between to the head.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">moveToHead</span><span class="params">(DLinkedNode node)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.removeNode(node);</span><br><span class="line">        <span class="keyword">this</span>.addNode(node);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// pop the current tail.</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> DLinkedNode <span class="title">popTail</span><span class="params">()</span></span>&#123;</span><br><span class="line">        DLinkedNode res = tail.pre;</span><br><span class="line">        <span class="keyword">this</span>.removeNode(res);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DLinkedNode</span> </span>&#123;</span><br><span class="line">        String key;</span><br><span class="line">        <span class="keyword">int</span> value;</span><br><span class="line">        DLinkedNode pre;</span><br><span class="line">        DLinkedNode post;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>基于 <code>LinkedHashMap</code>的实现</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LRUCache</span>&lt;<span class="title">K</span>, <span class="title">V</span>&gt; <span class="keyword">extends</span> <span class="title">LinkedHashMap</span>&lt;<span class="title">K</span>, <span class="title">V</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> CACHE_SIZE;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 传递进来最多能缓存多少数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> cacheSize 缓存大小</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LRUCache</span><span class="params">(<span class="keyword">int</span> cacheSize)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// true 表示让 linkedHashMap 按照访问顺序来进行排序，最近访问的放在头部，最老访问的放在尾部。</span></span><br><span class="line">        <span class="keyword">super</span>((<span class="keyword">int</span>) Math.ceil(cacheSize / <span class="number">0.75</span>) + <span class="number">1</span>, <span class="number">0.75f</span>, <span class="keyword">true</span>);</span><br><span class="line">        CACHE_SIZE = cacheSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">removeEldestEntry</span><span class="params">(Map.Entry&lt;K, V&gt; eldest)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 当 map中的数据量大于指定的缓存个数的时候，就自动删除最老的数据。</span></span><br><span class="line">        <span class="keyword">return</span> size() &gt; CACHE_SIZE;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java实现布隆过滤器</title>
      <link href="post/bloom-filter-java.html"/>
      <url>post/bloom-filter-java.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p><strong>布隆过滤器</strong>:</p><p>布隆过滤器（Bloom Filter）是1970年由布隆提出的。它实际上是一个很长的<strong>二进制向量</strong>和一系列<strong>随机映射函数</strong>。布隆过滤器可以用于检索一个元素是否在一个集合中。它的优点是<strong>空间效率</strong>和<strong>查询时间</strong>都比一般的算法要好的多，缺点是有一定的<strong>误识别率</strong>和<strong>删除困难</strong>。</p></div><h2 id="基本概念"><a class="markdownIt-Anchor" href="#基本概念"></a> 基本概念</h2><blockquote><p>如果想要判断一个元素是不是在一个集合里，一般想到的是将所有元素保存起来，然后通过比较确定。链表，树等等数据结构都是这种思路. 但是随着集合中元素的增加，我们需要的存储空间越来越大，检索速度也越来越慢(<code>O(n)</code>,<code>O(logn)</code>)。不过世界上还有一种叫作散列表（又叫哈希表，<code>Hash table</code>）的数据结构。它可以通过一个<code>Hash</code>函数将一个元素映射成一个位阵列（Bit array）中的一个点。这样一来，我们只要看看这个点是不是<code>1</code>就可以知道集合中有没有它了。这就是布隆过滤器的基本思想。</p></blockquote><blockquote><p><code>Hash</code>面临的问题就是冲突。假设Hash函数是良好的，如果我们的位阵列长度为m个点，那么如果我们想将冲突率降低到例如 1%, 这个散列表就只能容纳m / 100个元素。显然这就不叫空间效率了（Space-efficient）了。解决方法也简单，就是使用多个<code>Hash</code>，如果它们有一个说元素不在集合中，那肯定就不在。如果它们都说在，虽然也有一定可能性它们在说谎，不过直觉上判断这种事情的概率是比较低的。</p></blockquote><h2 id="优点"><a class="markdownIt-Anchor" href="#优点"></a> 优点</h2><blockquote><p>相比于其它的数据结构，布隆过滤器在空间和时间方面都有巨大的优势。</p></blockquote><ol><li>布隆过滤器存储空间和插入/查询时间都是常数。</li><li><code>Hash</code>函数相互之间没有关系，方便由硬件并行实现。</li><li>布隆过滤器不需要存储元素本身，在某些对保密要求非常严格的场合有优势。</li></ol><p>布隆过滤器可以表示全集，其它任何数据结构都不能。</p><h2 id="缺点"><a class="markdownIt-Anchor" href="#缺点"></a> 缺点</h2><blockquote><p>但是布隆过滤器的缺点和优点一样明显。误算率是其中之一。随着存入的元素数量增加，误算率随之增加。常见的补救办法是建立一个小的白名单，存储那些可能被误判的元素。但是如果元素数量太少，则使用散列表足矣。</p></blockquote><blockquote><p>另外，一般情况下不能从布隆过滤器中删除元素。我们很容易想到把位列阵变成整数数组，每插入一个元素相应的计数器加1, 这样删除元素时将计数器减掉就可以了。然而要保证安全的删除元素并非如此简单。首先我们必须保证删除的元素的确在布隆过滤器里面. 这一点单凭这个过滤器是无法保证的。另外计数器回绕也会造成问题。</p></blockquote><p>在降低误算率方面，有不少工作，使得出现了很多布隆过滤器的变种。</p><h2 id="应用"><a class="markdownIt-Anchor" href="#应用"></a> 应用</h2><p>网页<code>URL</code>的去重，垃圾邮件的判别，集合重复元素的判别，查询加速（比如基于<code>key-value</code>的存储系统）等。</p><h2 id="java-实现"><a class="markdownIt-Anchor" href="#java-实现"></a> Java 实现</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BloomFilter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DEFAULT_SIZE = <span class="number">2</span> &lt;&lt; <span class="number">24</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span>[] seeds = <span class="keyword">new</span> <span class="keyword">int</span>[] &#123; <span class="number">5</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">31</span>, <span class="number">37</span>, <span class="number">61</span> &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> BitSet bits = <span class="keyword">new</span> BitSet(DEFAULT_SIZE);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> SimpleHash[] func = <span class="keyword">new</span> SimpleHash[seeds.length];</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BloomFilter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; seeds.length; i++) &#123;</span><br><span class="line">            func[i] = <span class="keyword">new</span> SimpleHash(DEFAULT_SIZE, seeds[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(String value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (SimpleHash f : func) &#123;</span><br><span class="line">            bits.set(f.hash(value), <span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">contains</span><span class="params">(String value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (value == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">boolean</span> ret = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (SimpleHash f : func) &#123;</span><br><span class="line">            ret = ret &amp;&amp; bits.get(f.hash(value));</span><br><span class="line">            <span class="keyword">if</span>(!ret) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">SimpleHash</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> cap;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> seed;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">SimpleHash</span><span class="params">(<span class="keyword">int</span> cap, <span class="keyword">int</span> seed)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.cap = cap;</span><br><span class="line">            <span class="keyword">this</span>.seed = seed;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hash</span><span class="params">(String value)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">int</span> len = value.length();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">                result = seed * result + value.charAt(i);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> (cap - <span class="number">1</span>) &amp; result;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个简约的 vuepress 主题 dew</title>
      <link href="post/vuepress-theme-dew.html"/>
      <url>post/vuepress-theme-dew.html</url>
      
        <content type="html"><![CDATA[<p>推荐一款自制的 <code>vuepress</code> 主题 - <a href="https://github.com/hvnobug/vuepress-theme-dew">dew</a></p><div class="note success flat"><p><strong><code>dew</code>主题的特性</strong>:</p><ul><li>🎉 以 <code>Markdown</code> 为中心的项目结构</li><li>🌈 <code>VuePress</code> 为每个页面预渲染生成静态的 <code>HTML</code>。</li><li>🌹 <code>Gulp</code> 生成简历页面和<code>PDF</code>文件</li></ul></div><h2 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h2><blockquote><p><code>vuepress-theme-dew</code>主题是根据 default 主题修改,吸收了<code>vuepress-theme-reco</code> 、<code>vuepress-theme-yur</code> 的一些特性,<br />旨在快速构建引导页或文档页,同时扩展了快速构建简历页,该主题不适合作为个人博客主题。</p></blockquote><h2 id="预览"><a class="markdownIt-Anchor" href="#预览"></a> 预览</h2><h3 id="首页预览"><a class="markdownIt-Anchor" href="#首页预览"></a> 首页预览</h3><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/dew-index.png" alt="" /></p><h3 id="简历预览"><a class="markdownIt-Anchor" href="#简历预览"></a> 简历预览</h3><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/dew-resume.png" alt="" /></p><h3 id="pdf-简历预览"><a class="markdownIt-Anchor" href="#pdf-简历预览"></a> PDF 简历预览</h3><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/dew-resume-pdf.png" alt="" /></p><h3 id="文档预览"><a class="markdownIt-Anchor" href="#文档预览"></a> 文档预览</h3><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/dew-preview.png" alt="" /></p><p><a href="https://hvnobug.com/pages/theme-document/">预览地址</a></p><h2 id="文档"><a class="markdownIt-Anchor" href="#文档"></a> 文档</h2><p><a href="https://hvnobug.com/pages/theme-document/">文档地址</a></p>]]></content>
      
      
      <categories>
          
          <category> vuepress </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vuepress </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github 加速</title>
      <link href="post/github-accelerate.html"/>
      <url>post/github-accelerate.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>Github 慢到爆炸,再也受不了一秒 12kb 的下载速度了。</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="http://ww1.sinaimg.cn/large/0065JV1Hgy1gafw6k04y3j30re07gtao.jpg" alt="" /></p><h2 id="ipaddress获取ip"><a class="markdownIt-Anchor" href="#ipaddress获取ip"></a> <code>ipaddress</code>获取<code>ip</code></h2><p>需要加速的域名:</p><ul><li><a href="http://github.com">github.com</a></li><li><a href="http://github.global.ssl.fastly.net">github.global.ssl.fastly.net</a></li></ul><p>访问<a href="https://github.com.ipaddress.com/">github.com - ipaddress</a>获取真实 ip</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="http://ws1.sinaimg.cn/large/0065JV1Hgy1gafviprezcj31u20lk42o.jpg" alt="" /></p><p>访问<a href="https://fastly.net.ipaddress.com/github.global.ssl.fastly.net">github.global.ssl.fastly.net - ipaddress</a>获取真实 ip</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="http://ws1.sinaimg.cn/large/0065JV1Hgy1gafvm709hsj31tu0cutas.jpg" alt="" /></p><h2 id="修改hosts"><a class="markdownIt-Anchor" href="#修改hosts"></a> 修改<code>hosts</code></h2><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="http://ww1.sinaimg.cn/large/0065JV1Hgy1gafvq8yfrgj30og03sdgc.jpg" alt="" /></p><h3 id="windows"><a class="markdownIt-Anchor" href="#windows"></a> Windows</h3><ul><li>windows 修改, 开始 -&gt; 运行 -&gt; 输入<code>drivers</code> -&gt; 修改 etc/hosts</li><li>刷新<code>DNS</code>缓存,CMD运行 <code>ipconfig /flushdns</code></li></ul><h3 id="linux"><a class="markdownIt-Anchor" href="#linux"></a> Linux</h3><ul><li><code>sudo vim /etc/hosts</code>修改 hosts</li><li>刷新<code>DNS</code>缓存, <code>sudo /etc/init.d/network restart</code></li></ul><blockquote><p>速度基本在 2.5mb/s 左右,完美。</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="http://ws1.sinaimg.cn/large/0065JV1Hgy1gafvail4nwj30sg0ek0vx.jpg" alt="" /></p><div class="note success flat"><p><strong>注意</strong>:<br /><code>ip</code>不是固定不变了,如果速度慢了,就重新获取<code>ip</code>。</p></div>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为你的 hexo 添加 loading page</title>
      <link href="post/hexo-loading-page.html"/>
      <url>post/hexo-loading-page.html</url>
      
        <content type="html"><![CDATA[<p>先看效果图。</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/loading-page-example.gif" alt="" /></p><p>思路:</p><ol><li>页面加载完成前,先加载 <code>loading page</code></li><li>页面加载完毕,隐藏<code>loading page</code></li></ol><h2 id="生成loading-page"><a class="markdownIt-Anchor" href="#生成loading-page"></a> 生成<code>loading page</code></h2><blockquote><p>在<code>body</code>标签起始位置追加 <code>loading page</code></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;loading-container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;loading-text&quot;</span>&gt;</span>玩命加载中 . . . <span class="tag">&lt;/<span class="name">p</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;loading-image&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="添加css样式和加载完毕事件"><a class="markdownIt-Anchor" href="#添加css样式和加载完毕事件"></a> 添加<code>css</code>样式和加载完毕事件</h2><blockquote><p>在<code>head</code>标签中追加<code>css</code>样式</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">lang</span>=<span class="string">&quot;css&quot;</span>&gt;</span></span><br><span class="line">    #loading-container&#123;</span><br><span class="line"><span class="css">        <span class="attribute">position</span>: fixed;</span></span><br><span class="line"><span class="css">        <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">min-height</span>: <span class="number">100vh</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">100vw</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">z-index</span>: <span class="number">9999</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="css">        <span class="attribute">flex-direction</span>: column;</span></span><br><span class="line"><span class="css">        <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="css">        <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="css">        <span class="attribute">background</span>: <span class="number">#FFF</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="css">        <span class="comment">/* loader页面消失采用渐隐的方式*/</span></span></span><br><span class="line"><span class="css">        -webkit-<span class="attribute">transition</span>: opacity <span class="number">1s</span> ease;</span></span><br><span class="line"><span class="css">        -moz-<span class="attribute">transition</span>: opacity <span class="number">1s</span> ease;</span></span><br><span class="line"><span class="css">        -o-<span class="attribute">transition</span>: opacity <span class="number">1s</span> ease;</span></span><br><span class="line"><span class="css">        <span class="attribute">transition</span>: opacity <span class="number">1s</span> ease;</span></span><br><span class="line">    &#125;</span><br><span class="line">    .loading-image&#123;</span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">120px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>);</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="css">    <span class="selector-class">.loading-image</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>) &#123;</span></span><br><span class="line"><span class="css">        -webkit-<span class="attribute">animation</span>: pacman-balls <span class="number">1s</span> linear <span class="number">0s</span> infinite;</span></span><br><span class="line"><span class="css">        <span class="attribute">animation</span>: pacman-balls <span class="number">1s</span> linear <span class="number">0s</span> infinite</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.loading-image</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>) &#123;</span></span><br><span class="line"><span class="css">        -webkit-<span class="attribute">animation</span>: pacman-balls <span class="number">1s</span> linear .<span class="number">33s</span> infinite;</span></span><br><span class="line"><span class="css">        <span class="attribute">animation</span>: pacman-balls <span class="number">1s</span> linear .<span class="number">33s</span> infinite</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.loading-image</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child</span>(<span class="number">4</span>) &#123;</span></span><br><span class="line"><span class="css">        -webkit-<span class="attribute">animation</span>: pacman-balls <span class="number">1s</span> linear .<span class="number">66s</span> infinite;</span></span><br><span class="line"><span class="css">        <span class="attribute">animation</span>: pacman-balls <span class="number">1s</span> linear .<span class="number">66s</span> infinite</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.loading-image</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child</span>(<span class="number">5</span>) &#123;</span></span><br><span class="line"><span class="css">        -webkit-<span class="attribute">animation</span>: pacman-balls <span class="number">1s</span> linear .<span class="number">99s</span> infinite;</span></span><br><span class="line"><span class="css">        <span class="attribute">animation</span>: pacman-balls <span class="number">1s</span> linear .<span class="number">99s</span> infinite</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="css">   <span class="selector-class">.loading-image</span> <span class="selector-tag">div</span><span class="selector-pseudo">:first</span>-of-type &#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">height</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">border</span>: <span class="number">25px</span> solid <span class="number">#49b1f5</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">border-right-color</span>: transparent;</span></span><br><span class="line"><span class="css">        <span class="attribute">border-radius</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="css">        -webkit-<span class="attribute">animation</span>: rotate_pacman_half_up .<span class="number">5s</span> <span class="number">0s</span> infinite;</span></span><br><span class="line"><span class="css">        <span class="attribute">animation</span>: rotate_pacman_half_up .<span class="number">5s</span> <span class="number">0s</span> infinite;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.loading-image</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>) &#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">height</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">border</span>: <span class="number">25px</span> solid <span class="number">#49b1f5</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">border-right-color</span>: transparent;</span></span><br><span class="line"><span class="css">        <span class="attribute">border-radius</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="css">        -webkit-<span class="attribute">animation</span>: rotate_pacman_half_down .<span class="number">5s</span> <span class="number">0s</span> infinite;</span></span><br><span class="line"><span class="css">        <span class="attribute">animation</span>: rotate_pacman_half_down .<span class="number">5s</span> <span class="number">0s</span> infinite;</span></span><br><span class="line"><span class="css">        <span class="attribute">margin-top</span>: -<span class="number">50px</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="keyword">@-webkit-keyframes</span> rotate_pacman_half_up &#123;<span class="number">0%</span> &#123;<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">270deg</span>)&#125;<span class="number">50%</span> &#123;<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">1turn</span>)&#125;<span class="selector-tag">to</span> &#123;<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">270deg</span>)&#125;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="keyword">@keyframes</span> rotate_pacman_half_up &#123;<span class="number">0%</span> &#123;<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">270deg</span>)&#125;<span class="number">50%</span> &#123;<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">1turn</span>)&#125;<span class="selector-tag">to</span> &#123;<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">270deg</span>)&#125;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="keyword">@-webkit-keyframes</span> rotate_pacman_half_down &#123;<span class="number">0%</span> &#123;<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">90deg</span>)&#125;<span class="number">50%</span> &#123;<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>)&#125;<span class="selector-tag">to</span> &#123;<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">90deg</span>)&#125;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="keyword">@keyframes</span> rotate_pacman_half_down &#123;<span class="number">0%</span> &#123;<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">90deg</span>)&#125;<span class="number">50%</span> &#123;<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>)&#125;<span class="selector-tag">to</span> &#123;<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">90deg</span>)&#125;&#125;</span></span><br><span class="line">    </span><br><span class="line"><span class="css">    <span class="keyword">@-webkit-keyframes</span> pacman-balls &#123;<span class="number">75%</span> &#123;<span class="attribute">opacity</span>: .<span class="number">7</span>&#125;<span class="selector-tag">to</span> &#123;<span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">100px</span>, -<span class="number">6.25px</span>)&#125;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="keyword">@keyframes</span> pacman-balls &#123;<span class="number">75%</span> &#123;<span class="attribute">opacity</span>: .<span class="number">7</span>&#125;<span class="selector-tag">to</span> &#123;<span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">100px</span>, -<span class="number">6.25px</span>)&#125;&#125;</span></span><br><span class="line">    </span><br><span class="line">   </span><br><span class="line"><span class="css">    <span class="selector-class">.loading-image</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>),</span></span><br><span class="line"><span class="css">    <span class="selector-class">.loading-image</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child</span>(<span class="number">4</span>),</span></span><br><span class="line"><span class="css">    <span class="selector-class">.loading-image</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child</span>(<span class="number">5</span>),</span></span><br><span class="line"><span class="css">    <span class="selector-class">.loading-image</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child</span>(<span class="number">6</span>)&#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: <span class="number">#49b1f5</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">height</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">border-radius</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">margin</span>: <span class="number">2px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">height</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">        <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-<span class="number">6.25px</span>);</span></span><br><span class="line"><span class="css">        <span class="attribute">top</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">left</span>: <span class="number">100px</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    .loading-text&#123;</span><br><span class="line"><span class="css">        <span class="attribute">margin-bottom</span>: <span class="number">20vh</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="css">        <span class="attribute">color</span>: <span class="number">#2c3e50</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">font-size</span>: <span class="number">2rem</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">box-sizing</span>: border-box;</span></span><br><span class="line"><span class="css">        <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">10px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">text-shadow</span>: <span class="number">0</span> <span class="number">2px</span> <span class="number">10px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.2</span>);</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">500px</span>) &#123;</span></span><br><span class="line">         .loading-text&#123;</span><br><span class="line"><span class="css">            <span class="attribute">font-size</span>: <span class="number">1.5rem</span>;</span></span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    .fadeout &#123;</span><br><span class="line"><span class="css">        <span class="attribute">opacity</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">filter</span>: <span class="built_in">alpha</span>(opacity=<span class="number">0</span>);</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="comment">/* logo出现动画 */</span></span></span><br><span class="line"><span class="css">    <span class="keyword">@-webkit-keyframes</span> fadeInDown&#123;<span class="number">0%</span>&#123;<span class="attribute">opacity</span>:<span class="number">0</span>;-webkit-<span class="attribute">transform</span>:<span class="built_in">translate3d</span>(<span class="number">0</span>,-<span class="number">100%</span>,<span class="number">0</span>);<span class="attribute">transform</span>:<span class="built_in">translate3d</span>(<span class="number">0</span>,-<span class="number">100%</span>,<span class="number">0</span>)&#125;<span class="number">100%</span>&#123;<span class="attribute">opacity</span>:<span class="number">1</span>;-webkit-<span class="attribute">transform</span>:none;<span class="attribute">transform</span>:none&#125;&#125;</span></span><br><span class="line"><span class="css">    <span class="keyword">@keyframes</span> fadeInDown&#123;<span class="number">0%</span>&#123;<span class="attribute">opacity</span>:<span class="number">0</span>;-webkit-<span class="attribute">transform</span>:<span class="built_in">translate3d</span>(<span class="number">0</span>,-<span class="number">100%</span>,<span class="number">0</span>);&#125;&#125;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>在<code>head</code>中追加加载完毕事件</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> loaded = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">       <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> loader = <span class="built_in">document</span>.getElementById(<span class="string">&quot;loading-container&quot;</span>);</span></span><br><span class="line"><span class="javascript">            loader.className=<span class="string">&quot;fadeout&quot;</span> ;<span class="comment">//使用渐隐的方法淡出loading page</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.getElementById(<span class="string">&quot;body-wrap&quot;</span>).style.display=<span class="string">&quot;flex&quot;</span>;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                loader.style.display=<span class="string">&quot;none&quot;</span>;</span></span><br><span class="line">            &#125;,1000); </span><br><span class="line"><span class="javascript">        &#125;,<span class="number">1000</span>);<span class="comment">//强制显示loading page 1s  </span></span></span><br><span class="line">    &#125;;</span><br><span class="line">    loaded();</span><br><span class="line">&#125;)()</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="在hexo中使用"><a class="markdownIt-Anchor" href="#在hexo中使用"></a> 在<code>Hexo</code>中使用</h2><blockquote><p>使用<code>Hexo</code>的<a href="https://hexo.io/zh-cn/docs/plugins#%E8%84%9A%E6%9C%AC%EF%BC%88Scripts%EF%BC%89">scripts</a></p></blockquote><ol><li>在项目根目录新建<code>scipts</code>目录</li><li>新建<code>loading-page.js</code>文件</li><li>使用<code>after_render:html</code>过滤器</li><li>为渲染后的<code>html</code>添加<code>loading page</code></li></ol><blockquote><p><code>loading-page.js</code>代码如下:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* global hexo */</span></span><br><span class="line"><span class="meta">&quot;use strict&quot;</span>;</span><br><span class="line">hexo.extend.filter.register(<span class="string">&#x27;after_render:html&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">htmlContent</span>) </span>&#123;</span><br><span class="line">     <span class="keyword">const</span> injectHead =</span><br><span class="line"> <span class="string">`&lt;style type=&quot;text/css&quot; lang=&quot;css&quot;&gt;</span></span><br><span class="line"><span class="string">    #loading-container&#123;</span></span><br><span class="line"><span class="string">        position: fixed;</span></span><br><span class="line"><span class="string">        top: 0;</span></span><br><span class="line"><span class="string">        left: 0;</span></span><br><span class="line"><span class="string">        min-height: 100vh;</span></span><br><span class="line"><span class="string">        width: 100vw;</span></span><br><span class="line"><span class="string">        z-index: 9999;</span></span><br><span class="line"><span class="string">        display: flex;</span></span><br><span class="line"><span class="string">        flex-direction: column;</span></span><br><span class="line"><span class="string">        justify-content: center;</span></span><br><span class="line"><span class="string">        align-items: center;</span></span><br><span class="line"><span class="string">        background: #FFF;</span></span><br><span class="line"><span class="string">        text-align: center;</span></span><br><span class="line"><span class="string">        /* loader页面消失采用渐隐的方式*/</span></span><br><span class="line"><span class="string">        -webkit-transition: opacity 1s ease;</span></span><br><span class="line"><span class="string">        -moz-transition: opacity 1s ease;</span></span><br><span class="line"><span class="string">        -o-transition: opacity 1s ease;</span></span><br><span class="line"><span class="string">        transition: opacity 1s ease;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    .loading-image&#123;</span></span><br><span class="line"><span class="string">        width: 120px;</span></span><br><span class="line"><span class="string">        height: 50px;</span></span><br><span class="line"><span class="string">        transform: translate(-50%);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    .loading-image div:nth-child(2) &#123;</span></span><br><span class="line"><span class="string">        -webkit-animation: pacman-balls 1s linear 0s infinite;</span></span><br><span class="line"><span class="string">        animation: pacman-balls 1s linear 0s infinite</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    .loading-image div:nth-child(3) &#123;</span></span><br><span class="line"><span class="string">        -webkit-animation: pacman-balls 1s linear .33s infinite;</span></span><br><span class="line"><span class="string">        animation: pacman-balls 1s linear .33s infinite</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    .loading-image div:nth-child(4) &#123;</span></span><br><span class="line"><span class="string">        -webkit-animation: pacman-balls 1s linear .66s infinite;</span></span><br><span class="line"><span class="string">        animation: pacman-balls 1s linear .66s infinite</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    .loading-image div:nth-child(5) &#123;</span></span><br><span class="line"><span class="string">        -webkit-animation: pacman-balls 1s linear .99s infinite;</span></span><br><span class="line"><span class="string">        animation: pacman-balls 1s linear .99s infinite</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">   .loading-image div:first-of-type &#123;</span></span><br><span class="line"><span class="string">        width: 0;</span></span><br><span class="line"><span class="string">        height: 0;</span></span><br><span class="line"><span class="string">        border: 25px solid #49b1f5;</span></span><br><span class="line"><span class="string">        border-right-color: transparent;</span></span><br><span class="line"><span class="string">        border-radius: 25px;</span></span><br><span class="line"><span class="string">        -webkit-animation: rotate_pacman_half_up .5s 0s infinite;</span></span><br><span class="line"><span class="string">        animation: rotate_pacman_half_up .5s 0s infinite;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    .loading-image div:nth-child(2) &#123;</span></span><br><span class="line"><span class="string">        width: 0;</span></span><br><span class="line"><span class="string">        height: 0;</span></span><br><span class="line"><span class="string">        border: 25px solid #49b1f5;</span></span><br><span class="line"><span class="string">        border-right-color: transparent;</span></span><br><span class="line"><span class="string">        border-radius: 25px;</span></span><br><span class="line"><span class="string">        -webkit-animation: rotate_pacman_half_down .5s 0s infinite;</span></span><br><span class="line"><span class="string">        animation: rotate_pacman_half_down .5s 0s infinite;</span></span><br><span class="line"><span class="string">        margin-top: -50px;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    @-webkit-keyframes rotate_pacman_half_up &#123;0% &#123;transform: rotate(270deg)&#125;50% &#123;transform: rotate(1turn)&#125;to &#123;transform: rotate(270deg)&#125;&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    @keyframes rotate_pacman_half_up &#123;0% &#123;transform: rotate(270deg)&#125;50% &#123;transform: rotate(1turn)&#125;to &#123;transform: rotate(270deg)&#125;&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    @-webkit-keyframes rotate_pacman_half_down &#123;0% &#123;transform: rotate(90deg)&#125;50% &#123;transform: rotate(0deg)&#125;to &#123;transform: rotate(90deg)&#125;&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    @keyframes rotate_pacman_half_down &#123;0% &#123;transform: rotate(90deg)&#125;50% &#123;transform: rotate(0deg)&#125;to &#123;transform: rotate(90deg)&#125;&#125;</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    @-webkit-keyframes pacman-balls &#123;75% &#123;opacity: .7&#125;to &#123;transform: translate(-100px, -6.25px)&#125;&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    @keyframes pacman-balls &#123;75% &#123;opacity: .7&#125;to &#123;transform: translate(-100px, -6.25px)&#125;&#125;</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">   </span></span><br><span class="line"><span class="string">    .loading-image div:nth-child(3),</span></span><br><span class="line"><span class="string">    .loading-image div:nth-child(4),</span></span><br><span class="line"><span class="string">    .loading-image div:nth-child(5),</span></span><br><span class="line"><span class="string">    .loading-image div:nth-child(6)&#123;</span></span><br><span class="line"><span class="string">        background-color: #49b1f5;</span></span><br><span class="line"><span class="string">        width: 15px;</span></span><br><span class="line"><span class="string">        height: 15px;</span></span><br><span class="line"><span class="string">        border-radius: 100%;</span></span><br><span class="line"><span class="string">        margin: 2px;</span></span><br><span class="line"><span class="string">        width: 10px;</span></span><br><span class="line"><span class="string">        height: 10px;</span></span><br><span class="line"><span class="string">        position: absolute;</span></span><br><span class="line"><span class="string">        transform: translateY(-6.25px);</span></span><br><span class="line"><span class="string">        top: 25px;</span></span><br><span class="line"><span class="string">        left: 100px;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    .loading-text&#123;</span></span><br><span class="line"><span class="string">        margin-bottom: 20vh;</span></span><br><span class="line"><span class="string">        text-align: center;</span></span><br><span class="line"><span class="string">        color: #2c3e50;</span></span><br><span class="line"><span class="string">        font-size: 2rem;</span></span><br><span class="line"><span class="string">        box-sizing: border-box;</span></span><br><span class="line"><span class="string">        padding: 0 10px;</span></span><br><span class="line"><span class="string">        text-shadow: 0 2px 10px rgba(0,0,0,0.2);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    @media only screen and (max-width: 500px) &#123;</span></span><br><span class="line"><span class="string">         .loading-text&#123;</span></span><br><span class="line"><span class="string">            font-size: 1.5rem;</span></span><br><span class="line"><span class="string">         &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    .fadeout &#123;</span></span><br><span class="line"><span class="string">        opacity: 0;</span></span><br><span class="line"><span class="string">        filter: alpha(opacity=0);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    /* logo出现动画 */</span></span><br><span class="line"><span class="string">    @-webkit-keyframes fadeInDown&#123;0%&#123;opacity:0;-webkit-transform:translate3d(0,-100%,0);transform:translate3d(0,-100%,0)&#125;100%&#123;opacity:1;-webkit-transform:none;transform:none&#125;&#125;</span></span><br><span class="line"><span class="string">    @keyframes fadeInDown&#123;0%&#123;opacity:0;-webkit-transform:translate3d(0,-100%,0);&#125;&#125;</span></span><br><span class="line"><span class="string"> &lt;/style&gt;</span></span><br><span class="line"><span class="string"> &lt;script&gt;</span></span><br><span class="line"><span class="string">(function () &#123;</span></span><br><span class="line"><span class="string">    const loaded = function()&#123;</span></span><br><span class="line"><span class="string">       setTimeout(function()&#123;</span></span><br><span class="line"><span class="string">            const loader = document.getElementById(&quot;loading-container&quot;);</span></span><br><span class="line"><span class="string">            loader.className=&quot;fadeout&quot; ;//使用渐隐的方法淡出loading page</span></span><br><span class="line"><span class="string">            document.getElementById(&quot;body-wrap&quot;).style.display=&quot;flex&quot;;</span></span><br><span class="line"><span class="string">            setTimeout(function()&#123;</span></span><br><span class="line"><span class="string">                loader.style.display=&quot;none&quot;;</span></span><br><span class="line"><span class="string">            &#125;,1000); </span></span><br><span class="line"><span class="string">        &#125;,1000);//强制显示loading page 1s  </span></span><br><span class="line"><span class="string">    &#125;;</span></span><br><span class="line"><span class="string">    loaded();</span></span><br><span class="line"><span class="string">&#125;)()</span></span><br><span class="line"><span class="string"> &lt;/script&gt;`</span>;</span><br><span class="line">     <span class="keyword">const</span> injectBody = <span class="string">`</span></span><br><span class="line"><span class="string"> &lt;div id=&quot;loading-container&quot;&gt;</span></span><br><span class="line"><span class="string">     &lt;p class=&quot;loading-text&quot;&gt;玩命加载中 . . . &lt;/p&gt; </span></span><br><span class="line"><span class="string">     &lt;div class=&quot;loading-image&quot;&gt;</span></span><br><span class="line"><span class="string">         &lt;div&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">         &lt;div&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">         &lt;div&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">         &lt;div&gt;&lt;/div&gt; </span></span><br><span class="line"><span class="string">         &lt;div&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">     &lt;/div&gt;</span></span><br><span class="line"><span class="string"> &lt;/div&gt;`</span>;</span><br><span class="line">     <span class="keyword">if</span> (<span class="regexp">/&lt;\/head&gt;/gi</span>.test(htmlContent)) &#123;</span><br><span class="line">         <span class="keyword">let</span> lastIndex = htmlContent.lastIndexOf(<span class="string">&#x27;&lt;/head&gt;&#x27;</span>);</span><br><span class="line">         htmlContent = htmlContent.substring(<span class="number">0</span>, lastIndex) + injectHead + htmlContent.substring(lastIndex, htmlContent.length);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">if</span> (<span class="regexp">/&lt;body&gt;/gi</span>.test(htmlContent)) &#123;</span><br><span class="line">         <span class="keyword">let</span> index = htmlContent.indexOf(<span class="string">&#x27;&lt;body&gt;&#x27;</span>);</span><br><span class="line">         htmlContent = htmlContent.substring(<span class="number">0</span>, index) + injectBody + htmlContent.substring(index, htmlContent.length);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span> htmlContent;</span><br><span class="line"> &#125;, <span class="number">1</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个神奇的 python 开源项目-thefuck</title>
      <link href="post/how-interesting-project-thefuck.html"/>
      <url>post/how-interesting-project-thefuck.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>最近在 github 发现了一个神奇的项目,差点没笑死,也太好玩了吧</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="http://ww3.sinaimg.cn/large/9150e4e5gy1g2x649qt0zg207i07i0u1.gif" alt="" /></p><p>这到底是个怎样的项目? 让我们来一探究竟</p><h2 id="项目描述"><a class="markdownIt-Anchor" href="#项目描述"></a> 项目描述</h2><blockquote><p>Fuck 是一款功能强大的 应用程序,可纠正控制台命令中的错误。</p></blockquote><p>下面我们通过一个动态图看一下它的魔性</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/nvbn/thefuck@master/example.gif" alt="" /></p><blockquote><ol><li>这哥们输入了错误命令<code>aptget install vim</code>,提示没有<code>aptget</code>这个命令</li><li>哥们吼了一声<code>fuck</code>,应用纠正为<code>apt-get install vim</code>,这时候又提示需要管理员权限</li><li>哥们又吼了一声<code>fuck</code>,应用纠正为<code>sudo apt-get install vim</code></li></ol></blockquote><p>然后我总结了,只要输错了命令,吼一声<code>fuck</code>应用就会自动纠正。(前提是你不能错的太离谱)</p><p>真怕我以后用惯了,写博客成这样:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm instal http-server -g</span><br><span class="line">fuck</span><br></pre></td></tr></table></figure><p>👉下面附上<a href="https://github.com/nvbn/thefuck">项目地址</a></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringSecurity中通过Nginx转发重定向到Nginx的地址解决办法</title>
      <link href="post/spring-security-redirect.html"/>
      <url>post/spring-security-redirect.html</url>
      
        <content type="html"><![CDATA[<h2 id="问题描述"><a class="markdownIt-Anchor" href="#问题描述"></a> 问题描述</h2><blockquote><p>用于请求到服务端时,<code>SpringSecurity</code>会对用户进行鉴权(如果需要)。如果未认证,就会重定向到登录页进行认证授权。<code>SpringSecurity</code>的重定向是直接获取到<br />客户端Ip,如果说我们使用<code>Nginx</code>进行转发,而且使用的内网Ip,就会重定向到内网Ip。</p></blockquote><p>场景:</p><ul><li><code>tomcat</code>服务器一台,内网ip:192.168.0.101,端口8080</li><li><code>nginx</code>服务器一台,外网ip:172.1.1.1,端口80</li></ul><p>客户端使用浏览器访问 <code>http://172.1.1.1</code>,会重定向到<code>http://192/168.0.101:8080/login</code>,该ip为内网ip,肯定是访问不到的。</p><h2 id="解决思路"><a class="markdownIt-Anchor" href="#解决思路"></a> 解决思路</h2><h3 id="1-自定义springsecurity重定向逻辑"><a class="markdownIt-Anchor" href="#1-自定义springsecurity重定向逻辑"></a> 1. 自定义<code>SpringSecurity</code>重定向逻辑</h3><blockquote><p>要想自定义<code>SpringSecurity</code>重定向逻辑,就需要了解<code>SpringSecurity</code>的认证流程。</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="http://ws1.sinaimg.cn/large/0065JV1Hgy1gaa010gmr5j30ir0jnaav.jpg" alt="" /></p><p>在<code>ExceptionTranslationFilter</code>的<code>doFilter</code>方法,我们发现这里抛出了<code>AuthenticationException</code></p><p>调用<code>AccessDeniedException</code>方法处理异常</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">handleSpringSecurityException</span><span class="params">(HttpServletRequest request,</span></span></span><br><span class="line"><span class="function"><span class="params">        HttpServletResponse response, FilterChain chain, RuntimeException exception)</span></span></span><br><span class="line"><span class="function">        <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (exception <span class="keyword">instanceof</span> AuthenticationException) &#123;</span><br><span class="line">        <span class="comment">// ...... </span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (exception <span class="keyword">instanceof</span> AccessDeniedException) &#123;</span><br><span class="line">        <span class="comment">// 获取认证信息</span></span><br><span class="line">        Authentication authentication = SecurityContextHolder.getContext().getAuthentication();</span><br><span class="line">        <span class="comment">// 是否为匿名或者记住我？当然匿名啊,都没有登录</span></span><br><span class="line">        <span class="keyword">if</span> (authenticationTrustResolver.isAnonymous(authentication) || authenticationTrustResolver.isRememberMe(authentication)) &#123;</span><br><span class="line">            logger.debug(</span><br><span class="line">                    <span class="string">&quot;Access is denied (user is &quot;</span> + (authenticationTrustResolver.isAnonymous(authentication) ? <span class="string">&quot;anonymous&quot;</span> : <span class="string">&quot;not fully authenticated&quot;</span>) + <span class="string">&quot;); redirecting to authentication entry point&quot;</span>,</span><br><span class="line">                    exception);</span><br><span class="line">            </span><br><span class="line">            sendStartAuthentication(</span><br><span class="line">                    request,</span><br><span class="line">                    response,</span><br><span class="line">                    chain,</span><br><span class="line">                    <span class="keyword">new</span> InsufficientAuthenticationException(</span><br><span class="line">                        messages.getMessage(</span><br><span class="line">                            <span class="string">&quot;ExceptionTranslationFilter.insufficientAuthentication&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Full authentication is required to access this resource&quot;</span>)));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            logger.debug(</span><br><span class="line">                    <span class="string">&quot;Access is denied (user is not anonymous); delegating to AccessDeniedHandler&quot;</span>,</span><br><span class="line">                    exception);</span><br><span class="line"></span><br><span class="line">            accessDeniedHandler.handle(request, response,</span><br><span class="line">                    (AccessDeniedException) exception);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>因为抛出的是<code>AccessDeniedException</code>,这里判断是否为匿名或者记住我,调用<code>sendStartAuthentication</code>方法</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">sendStartAuthentication</span><span class="params">(HttpServletRequest request,</span></span></span><br><span class="line"><span class="function"><span class="params">        HttpServletResponse response, FilterChain chain,</span></span></span><br><span class="line"><span class="function"><span class="params">        AuthenticationException reason)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    SecurityContextHolder.getContext().setAuthentication(<span class="keyword">null</span>);</span><br><span class="line">    requestCache.saveRequest(request, response);</span><br><span class="line">    logger.debug(<span class="string">&quot;Calling Authentication entry point.&quot;</span>);</span><br><span class="line">    authenticationEntryPoint.commence(request, response, reason);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>在<code>sendStartAuthentication</code>方法中调用<code>authenticationEntryPoint.commence</code>,debug到它的实现类<code>LoginUrlAuthenticationEntryPoint</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">commence</span><span class="params">(HttpServletRequest request, HttpServletResponse response,</span></span></span><br><span class="line"><span class="function"><span class="params">AuthenticationException authException)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">String redirectUrl = <span class="keyword">null</span>;</span><br><span class="line">       <span class="comment">// 是否使用 forward? 这里是重定向好吗。</span></span><br><span class="line"><span class="keyword">if</span> (useForward) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (forceHttps &amp;&amp; <span class="string">&quot;http&quot;</span>.equals(request.getScheme())) &#123;</span><br><span class="line"><span class="comment">// First redirect the current request to HTTPS.</span></span><br><span class="line"><span class="comment">// When that request is received, the forward to the login page will be</span></span><br><span class="line"><span class="comment">// used.</span></span><br><span class="line">redirectUrl = buildHttpsRedirectUrlForRequest(request);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (redirectUrl == <span class="keyword">null</span>) &#123;</span><br><span class="line">String loginForm = determineUrlToUseForThisRequest(request, response,</span><br><span class="line">authException);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (logger.isDebugEnabled()) &#123;</span><br><span class="line">logger.debug(<span class="string">&quot;Server side forward to: &quot;</span> + loginForm);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">RequestDispatcher dispatcher = request.getRequestDispatcher(loginForm);</span><br><span class="line"></span><br><span class="line">dispatcher.forward(request, response);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">       <span class="comment">// 是重定向走这里</span></span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// redirect to login page. Use https if forceHttps true</span></span><br><span class="line"></span><br><span class="line">redirectUrl = buildRedirectUrlToLoginPage(request, response, authException);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">redirectStrategy.sendRedirect(request, response, redirectUrl);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>redirectUrl = buildRedirectUrlToLoginPage(request, response, authException);</code>,也就是这一句构建了重定向到登录页到<code>url</code>。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> String <span class="title">buildRedirectUrlToLoginPage</span><span class="params">(HttpServletRequest request,</span></span></span><br><span class="line"><span class="function"><span class="params">HttpServletResponse response, AuthenticationException authException)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">String loginForm = determineUrlToUseForThisRequest(request, response,</span><br><span class="line">authException);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (UrlUtils.isAbsoluteUrl(loginForm)) &#123;</span><br><span class="line"><span class="keyword">return</span> loginForm;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> serverPort = portResolver.getServerPort(request);</span><br><span class="line">String scheme = request.getScheme();</span><br><span class="line"></span><br><span class="line">RedirectUrlBuilder urlBuilder = <span class="keyword">new</span> RedirectUrlBuilder();</span><br><span class="line"></span><br><span class="line">urlBuilder.setScheme(scheme);</span><br><span class="line">urlBuilder.setServerName(request.getServerName());</span><br><span class="line">urlBuilder.setPort(serverPort);</span><br><span class="line">urlBuilder.setContextPath(request.getContextPath());</span><br><span class="line">urlBuilder.setPathInfo(loginForm);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (forceHttps &amp;&amp; <span class="string">&quot;http&quot;</span>.equals(scheme)) &#123;</span><br><span class="line">Integer httpsPort = portMapper.lookupHttpsPort(Integer.valueOf(serverPort));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (httpsPort != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="comment">// Overwrite scheme and port in the redirect URL</span></span><br><span class="line">urlBuilder.setScheme(<span class="string">&quot;https&quot;</span>);</span><br><span class="line">urlBuilder.setPort(httpsPort.intValue());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">logger.warn(<span class="string">&quot;Unable to redirect to HTTPS as no port mapping found for HTTP port &quot;</span></span><br><span class="line">+ serverPort);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> urlBuilder.getUrl();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="http://ww3.sinaimg.cn/large/9150e4e5gy1g7wybumlthj20j60kqab3.jpg" alt="" /></p><blockquote><p>也就是说我们重写 <code>LoginUrlAuthenticationEntryPoint</code> 的 <code>buildRedirectUrlToLoginPage</code>的方法不就可以了吗？Ok,直接贴源码。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span>  <span class="class"><span class="keyword">class</span> <span class="title">UnauthorizedEntryPoint</span> <span class="keyword">extends</span> <span class="title">LoginUrlAuthenticationEntryPoint</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    UnauthorizedEntryPoint() &#123;</span><br><span class="line">        <span class="keyword">super</span>(LOGIN_PAGE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> String <span class="title">buildRedirectUrlToLoginPage</span><span class="params">(HttpServletRequest request, HttpServletResponse response, AuthenticationException authException)</span> </span>&#123;</span><br><span class="line">        String loginForm = determineUrlToUseForThisRequest(request, response, authException);</span><br><span class="line">        <span class="keyword">if</span> (UrlUtils.isAbsoluteUrl(loginForm)) &#123;</span><br><span class="line">            <span class="keyword">return</span> loginForm;</span><br><span class="line">        &#125;</span><br><span class="line">        String url = ServletUtil.getRedirectUrl(request, loginForm);</span><br><span class="line">        log.info(<span class="string">&quot;redirect url: &#123;&#125;&quot;</span>, url);</span><br><span class="line">        HttpSession session = request.getSession();</span><br><span class="line">        <span class="keyword">if</span> (session != <span class="keyword">null</span>) &#123;</span><br><span class="line">            session.setAttribute(REDIRECT_FROM_SESSION_NAME, ServletUtil.getRedirectUrl(request));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> url;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p><code>ServletUtil</code>相关源码,主要用于获取真实客户端信息。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServletUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getPort</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">        String port = request.getHeader(<span class="string">&quot;X-Real-Port&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(port) || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(port)) &#123;</span><br><span class="line">            port = String.valueOf(request.getServerPort());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Integer.parseInt(port);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getIpAddr</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String ip = request.getHeader(<span class="string">&quot;X-Real-Host&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isEmpty(ip) || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">                ip = request.getHeader(<span class="string">&quot;X-Real-IP&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isEmpty(ip) || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">                ip = request.getHeader(<span class="string">&quot;X-Forwarded-For&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isEmpty(ip) || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">                ip = request.getHeader(<span class="string">&quot;Proxy-Client-IP&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isEmpty(ip) || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">                ip = request.getHeader(<span class="string">&quot;WL-Proxy-Client-IP&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isEmpty(ip) || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">                String host = request.getHeader(<span class="string">&quot;host&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (StringUtils.hasLength(host)) &#123;</span><br><span class="line">                    ip = host.split(<span class="string">&quot;:&quot;</span>)[<span class="number">0</span>];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isEmpty(ip) || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">                ip = request.getRemoteAddr();</span><br><span class="line">                <span class="keyword">if</span> (ip.equals(<span class="string">&quot;127.0.0.1&quot;</span>) || ip.equals(<span class="string">&quot;0:0:0:0:0:0:0:1&quot;</span>)) &#123;</span><br><span class="line">                    <span class="comment">// 根据网卡取本机配置的IP</span></span><br><span class="line">                    InetAddress inetAddress = InetAddress.getLocalHost();</span><br><span class="line">                    ip = inetAddress.getHostAddress();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 对于通过多个代理的情况，第一个IP为客户端真实IP,多个IP按照&#x27;,&#x27;分割</span></span><br><span class="line">            <span class="keyword">if</span> (ip.indexOf(<span class="string">&quot;,&quot;</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                ip = ip.substring(<span class="number">0</span>, ip.indexOf(<span class="string">&quot;,&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> ip;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getScheme</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">        String scheme = request.getHeader(<span class="string">&quot;X-Forwarded-Proto&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(scheme) || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(scheme)) &#123;</span><br><span class="line">            scheme = String.valueOf(request.getScheme());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> scheme;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getRedirectUrl</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> getRedirectUrl(request, request.getServletPath());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getRedirectUrl</span><span class="params">(HttpServletRequest request, String path)</span> </span>&#123;</span><br><span class="line">        RedirectUrlBuilder urlBuilder = <span class="keyword">new</span> RedirectUrlBuilder();</span><br><span class="line">        urlBuilder.setPathInfo(path);</span><br><span class="line">        urlBuilder.setScheme(getScheme(request));</span><br><span class="line">        urlBuilder.setServerName(getIpAddr(request));</span><br><span class="line">        urlBuilder.setPort(ServletUtil.getPort(request));</span><br><span class="line">        urlBuilder.setContextPath(request.getContextPath());</span><br><span class="line">        urlBuilder.setQuery(request.getQueryString());</span><br><span class="line">        <span class="keyword">return</span> urlBuilder.getUrl();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>当然了,还需要在<code>WebSecurityConfigurerAdapter</code>进行配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableWebSecurity</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity httpSecurity)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        httpSecurity.exceptionHandling().authenticationEntryPoint(<span class="keyword">new</span> UnauthorizedEntryPoint()).and()</span><br><span class="line">        <span class="comment">//   ... 此处省略其他配置     </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-将真实的客户端信息传递给服务端"><a class="markdownIt-Anchor" href="#2-将真实的客户端信息传递给服务端"></a> 2. 将真实的客户端信息传递给服务端</h3><blockquote><p>那这些真实客户端信息到底怎么来的,必须<code>nginx</code>转发的啊。</p></blockquote><p>配置 nginx</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">location &#x2F; &#123;</span><br><span class="line">        proxy_pass   http:&#x2F;&#x2F;192.168.0.101:8080;</span><br><span class="line">        proxy_redirect  default;</span><br><span class="line">        proxy_set_header  X-Real-Host $host;</span><br><span class="line">        proxy_set_header  X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header  X-Real-PORT $server_port;</span><br><span class="line">        proxy_set_header  X-Forwarded-Proto $scheme;</span><br><span class="line">        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_connect_timeout 1;</span><br><span class="line">        proxy_send_timeout 30;</span><br><span class="line">        proxy_read_timeout 60;</span><br><span class="line">        client_max_body_size 50m;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这下就可以重定向到真实到客户端地址了。当然你可能会说,干嘛不做转发。转发是可以的,考虑项目使用的是相对地址,使用重定向也可以规避很多问题。绝对地址的话需要考虑到<code>contextPath</code>。</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> spring-security </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分享 Github 开源的程序员抢票神器</title>
      <link href="post/12306-open-source.html"/>
      <url>post/12306-open-source.html</url>
      
        <content type="html"><![CDATA[<p>马上春节了,很多胖友都在为回家的火车票抓狂呢,一票难求啊。</p><p>作为一个程序员,还能被抢票难住了？下面我给大家推荐几个开源的抢票神器。</p><h2 id="testersunshine12306"><a class="markdownIt-Anchor" href="#testersunshine12306"></a> testerSunshine/12306</h2><blockquote><p><code>testerSunshine/12306</code>项目是一个开源的,用<code>python</code>语言编写的12306智能刷票，订票系统,在 Github 拥有 21.8k 的star.</p></blockquote><p>支持自动打码,自动登录,准点预售和捡漏,智能候补,邮件通知和server酱通知,只需要一些简单的配置即可.</p><p><a href="https://github.com/testerSunshine/12306">项目地址</a></p><h2 id="pjialinpy12306"><a class="markdownIt-Anchor" href="#pjialinpy12306"></a> pjialin/py12306</h2><blockquote><p><code>pjialin/py12306</code>项目也是一个用<code>python</code>语言编写的12306 购票助手,支持集群,多账号,多任务购票以及 <code>Web</code> 页面管理,在 Github 拥有 8.5k 的star.</p></blockquote><p>请看项目截图:</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/pjialin/py12306@master/data/images/order_success.png" alt="" /></p><p><a href="https://github.com/pjialin/py12306">项目地址</a></p><p>啥玩意？不喜欢命令行工具？</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="http://ww4.sinaimg.cn/large/9150e4e5ly1fs57iatj60j205i03y0so.jpg" alt="" /></p><h2 id="iccfish12306_ticket_helper"><a class="markdownIt-Anchor" href="#iccfish12306_ticket_helper"></a> iccfish/12306_ticket_helper</h2><blockquote><p><code>iccfish/12306_ticket_helper</code>项目是一个用<code>JavaScript</code>语言编写,基于Webkit/Firefox浏览器的12306订票的助手软件。</p></blockquote><p>可以运行在 <code>遨游3</code> 、 <code>Chrome</code> 、 <code>猎豹</code> 或 <code>Firefox</code> 浏览器上的脚本扩展，可以帮助您在 <a href="http://12306.CN">12306.CN</a> 购买火车票（或抢火车票？），反正就是偷懒呗。</p><p><a href="https://github.com/iccfish/12306_ticket_helper">项目地址</a></p><p>如果你使用的是<code>window</code>操作系统,<a href="https://www.bypass.cn/">Bypass-分流抢票</a> (免费)、以及一些第三方的平台(某猪、某程等。加速需要收费)也是一个不错的选择。</p><p>妈妈再也不用担心我买不到火车票了。</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="http://ww4.sinaimg.cn/large/9150e4e5ly1fnxtz17ngfg208c08c3z2.gif" alt="" /></p>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>推荐一些实用的开源工具(Java篇)</title>
      <link href="post/awesome-java-github-tool.html"/>
      <url>post/awesome-java-github-tool.html</url>
      
        <content type="html"><![CDATA[<h2 id="alibabaarthas"><a class="markdownIt-Anchor" href="#alibabaarthas"></a> alibaba/arthas</h2><p>项目地址:<a href="https://github.com/alibaba/arthas">alibaba/arthas</a></p><blockquote><p>Alibaba Java Diagnostic Tool Arthas/Alibaba Java诊断利器Arthas <a href="https://alibaba.github.io/arthas/">https://alibaba.github.io/arthas/</a></p></blockquote><p><code>Arthas</code> 是<code>Alibaba</code>开源的<code>Java</code>诊断工具，深受开发者喜爱。</p><p>当你遇到以下类似问题而束手无策时，<code>Arthas可以帮助你解决</code>：</p><ul><li>这个类从哪个 jar 包加载的？为什么会报各种类相关的 Exception？</li><li>我改的代码为什么没有执行到？难道是我没 commit？分支搞错了？</li><li>遇到问题无法在线上 debug，难道只能通过加日志再重新发布吗？</li><li>线上遇到某个用户的数据处理有问题，但线上同样无法 debug，线下无法重现！</li><li>是否有一个全局视角来查看系统的运行状况？</li><li>有什么办法可以监控到JVM的实时运行状态？</li><li>怎么快速定位应用的热点，生成火焰图？</li></ul><p><code>Arthas</code>支持JDK 6+，支持<code>Linux/Mac/Windows</code>，采用命令行交互模式，同时提供丰富的 Tab 自动补全功能，进一步方便进行问题的定位和诊断。</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/alibaba/arthas@master/site/src/site/sphinx/_static/dashboard.png" alt="" /></p><h2 id="zouzgmybatis-generator-gui"><a class="markdownIt-Anchor" href="#zouzgmybatis-generator-gui"></a> zouzg/mybatis-generator-gui</h2><p>项目地址:<a href="https://github.com/zouzg/mybatis-generator-gui">zouzg/mybatis-generator-gui</a></p><blockquote><p><code>mybatis-generator-gui</code>是基于<a href="http://mybatis.org/generator/index.html">mybatis generator</a>开发一款界面工具, 本工具可以使你非常容易及快速生成<code>Mybatis</code>的<code>Java POJO</code>文件及数据库<code>Mapping</code>文件。</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="http://ws1.sinaimg.cn/large/0065JV1Hgy1ga6t1sx9adj31f00zatfw.jpg" alt="" /></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="http://ws1.sinaimg.cn/large/0065JV1Hgy1ga6t21x9mkj30lt0cet93.jpg" alt="" /></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="http://ws1.sinaimg.cn/large/0065JV1Hgy1ga6t26sxywj30lt0l6q3t.jpg" alt="" /></p><p>核心特征</p><ul><li>按照界面步骤轻松生成代码，省去<code>XML</code>繁琐的学习与配置过程</li><li>保存数据库连接与<code>Generator</code>配置，每次代码生成轻松搞定</li><li>内置常用插件，比如分页插件</li><li>支持<code>OverSSH</code> 方式，通过<code>SSH</code>隧道连接至公司内网访问数据库</li><li>把数据库中表列的注释生成为<code>Java</code>实体的注释，生成的实体清晰明了</li><li>可选的去除掉对版本管理不友好的注释，这样新增或删除字段重新生成的文件比较过来清楚</li><li>目前已经支持<code>Mysql</code>、<code>Mysql8</code>、<code>Oracle</code>、<code>PostgreSQL</code>与<code>SQL Server</code>，暂不对其他非主流数据库提供支持。(<code>MySQL</code>支持的比较好，其他数据库有什么问题可以在<code>issue</code>中反馈)</li></ul><h2 id="gedoormybookshelf"><a class="markdownIt-Anchor" href="#gedoormybookshelf"></a> gedoor/MyBookshelf</h2><p>项目地址:<a href="https://github.com/gedoor/MyBookshelf">gedoor/MyBookshelf</a></p><blockquote><p>阅读是一款可以自定义来源阅读网络内容的工具，为广大网络文学爱好者提供一种方便、快捷舒适的试读体验。 <a href="https://gedoor.github.io/MyBookshelf/">https://gedoor.github.io/MyBookshelf/</a></p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/gedoor/gedoor.github.io@master/MyBookshelf/image/mybook1.jpg" alt="" /></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/gedoor/gedoor.github.io@master/MyBookshelf/image/mybook2.jpg" alt="" /></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/gedoor/gedoor.github.io@master/MyBookshelf/image/mybook3.jpg" alt="" /></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/gedoor/gedoor.github.io@master/MyBookshelf/image/mybook4.jpg" alt="" /></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/gedoor/gedoor.github.io@master/MyBookshelf/image/mybook5.jpg" alt="" /></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/gedoor/gedoor.github.io@master/MyBookshelf/image/mybook6.jpg" alt="" /></p><h2 id="ffaylanproxy"><a class="markdownIt-Anchor" href="#ffaylanproxy"></a> ffay/lanproxy</h2><p>项目地址: <a href="https://github.com/ffay/lanproxy">ffay/lanproxy</a></p><blockquote><p><code>lanproxy</code>是一个将局域网个人电脑、服务器代理到公网的内网穿透工具，支持tcp流量转发，可支持任何tcp上层协议（访问内网网站、本地支付接口调试、ssh访问、远程桌面…）。目前市面上提供类似服务的有花生壳、<code>TeamView</code>、<code>GoToMyCloud</code>等等，但要使用第三方的公网服务器就必须为第三方付费，并且这些服务都有各种各样的限制，此外，由于数据包会流经第三方，因此对数据安全也是一大隐患。</p></blockquote><p>目前<code>lanproxy</code>有免费版和付费版,免费版可以 可创建<code>1 个</code>客户端 ,可创建<code>1 个</code>映射端口,支持最大<code>100 个</code>并发连接数,每月流量<code>1 GB</code>,不支持自定义域名,使用的是海外节点。</p><p><a href="https://nat.cdjxt.net/">官网地址</a></p><h2 id="oldmanpushcartgreys-anatomy"><a class="markdownIt-Anchor" href="#oldmanpushcartgreys-anatomy"></a> oldmanpushcart/greys-anatomy</h2><p>项目地址: <a href="https://github.com/oldmanpushcart/greys-anatomy">oldmanpushcart/greys-anatomy</a></p><blockquote><p>Java诊断工具</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/oldmanpushcart/images@master/greys/greys-logo-readme.png" alt="" /></p><p>线上系统为何经常出错？数据库为何屡遭黑手？业务调用为何频频失败？连环异常堆栈案，究竟是哪次调用所为？ 数百台服务器意外雪崩背后又隐藏着什么？是软件的扭曲还是硬件的沦丧？ 走进科学带你了解Greys, Java线上问题诊断工具。</p><h2 id="alipaysolopi"><a class="markdownIt-Anchor" href="#alipaysolopi"></a> alipay/SoloPi</h2><p>项目地址: <a href="https://github.com/alipay/SoloPi">alipay/SoloPi</a></p><blockquote><p><code>SoloPi</code>是一个无线化、非侵入式的<code>Android</code>自动化工具，公测版拥有录制回放、性能测试、一机多控三项主要功能，能为测试开发人员节省宝贵时间。</p></blockquote><p>录制回放</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/alipay/SoloPi@/master/assets/replay.gif" alt="" /></p><p>性能工具</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/alipay/SoloPi@/master/assets/performance.gif" alt="" /></p><p>一机多控</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/alipay/SoloPi@/master/assets/oneToMany.gif" alt="" /></p><h2 id="abrahamcaijincommonutillibrary"><a class="markdownIt-Anchor" href="#abrahamcaijincommonutillibrary"></a> AbrahamCaiJin/CommonUtilLibrary</h2><p>项目地址: <a href="https://github.com/AbrahamCaiJin/CommonUtilLibrary">AbrahamCaiJin/CommonUtilLibrary</a></p><blockquote><p>快速开发工具类收集，史上最全的开发工具类,欢迎Follow、Fork、Star</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>推荐一些实用的Github项目(Java篇)</title>
      <link href="post/awesome-java-github-project.html"/>
      <url>post/awesome-java-github-project.html</url>
      
        <content type="html"><![CDATA[<h2 id="zhoutaoospringcloud"><a class="markdownIt-Anchor" href="#zhoutaoospringcloud"></a> zhoutaoo/SpringCloud</h2><p>项目地址:<a href="https://github.com/zhoutaoo/SpringCloud">zhoutaoo/SpringCloud</a></p><blockquote><p>基于<code>SpringCloud2.1</code>的微服务开发脚手架，整合了<code>spring-security-oauth2</code>、<code>nacos</code>、<code>feign</code>、<code>sentinel</code>、<code>springcloud-gateway</code>等。<br />服务治理方面引入<code>elasticsearch</code>、<code>skywalking</code>、<code>springboot-admin</code>、<code>zipkin</code>等，让项目开发快速进入业务开发，而不需过多时间花费在架构搭建上。</p></blockquote><blockquote><p>用户管理</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="http://ws1.sinaimg.cn/large/0065JV1Hgy1ga6qyprazej32l618wamj.jpg" alt="" /></p><blockquote><p>角色管理</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="http://ws1.sinaimg.cn/large/0065JV1Hgy1ga6qzh3mr8j32la17w7g1.jpg" alt="" /></p><blockquote><p>服务容错</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="http://ws1.sinaimg.cn/large/0065JV1Hgy1ga6qzvum8oj32la1audrh.jpg" alt="" /></p><blockquote><p>API文档</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="http://ws1.sinaimg.cn/large/0065JV1Hgy1ga6r0rqi94j32l81gsgxd.jpg" alt="" /></p><blockquote><p>组织架构管理</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="http://ws1.sinaimg.cn/large/0065JV1Hgy1ga6r14nnv4j32la18cqba.jpg" alt="" /></p><h2 id="macrozhengmall"><a class="markdownIt-Anchor" href="#macrozhengmall"></a> macrozheng/mall</h2><blockquote><p><code>mall</code>项目是一套电商系统，包括前台商城系统及后台管理系统，基于<code>SpringBoot</code>+<code>MyBatis</code>实现，采用<code>Docker</code>容器化部署。<br />前台商城系统包含首页门户、商品推荐、商品搜索、商品展示、购物车、订单流程、会员中心、客户服务、帮助中心等模块。<br />后台管理系统包含商品管理、订单管理、会员管理、促销管理、运营管理、内容管理、统计报表、财务管理、权限管理、设置等模块。</p></blockquote><p>项目地址:<a href="https://github.com/macrozheng/mall">macrozheng/mall</a></p><blockquote><p>后台管理系统</p></blockquote><p>前端项目<code>mall-admin-web</code>地址: <a href="https://github.com/macrozheng/mall-admin-web">https://github.com/macrozheng/mall-admin-web</a><br />项目演示地址： <a href="http://www.macrozheng.com/admin/index.html">http://www.macrozheng.com/admin/index.html</a></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/macrozheng/mall@master/document/resource/mall-admin.gif" alt="" /></p><blockquote><p>前台商城系统</p></blockquote><p>前端项目<code>mall-app-web</code>地址：敬请期待…<br />项目演示地址：<a href="http://www.macrozheng.com/app/index.html">http://www.macrozheng.com/app/index.html</a></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/macrozheng/mall@master/document/resource/mall-app.gif" alt="" /></p><h2 id="shuzhengzheng"><a class="markdownIt-Anchor" href="#shuzhengzheng"></a> shuzheng/zheng</h2><blockquote><p>基于<code>Spring</code>+<code>SpringMVC</code>+<code>Mybatis</code>分布式敏捷开发系统架构，提供整套公共微服务服务模块：集中权限管理（单点登录）、<br />内容管理、支付中心、用户管理（支持第三方登录）、微信平台、存储系统、配置中心、日志分析、任务和通知等，支持服务治理、<br />监控和追踪，努力为中小型企业打造全方位J2EE企业级开发解决方案。 <a href="http://47.93.195.63/zheng-upms-server">http://47.93.195.63/zheng-upms-server</a></p></blockquote><p>演示地址： <a href="http://upms.zhangshuzheng.cn/">http://upms.zhangshuzheng.cn/</a></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/shuzheng/zheng@master/project-bootstrap/idea.png" alt="" /><br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/shuzheng/zheng@master/project-bootstrap/zheng-login.png" alt="" /><br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/shuzheng/zheng@master/project-bootstrap/zheng-upms.png" alt="" /><br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/shuzheng/zheng@master/project-bootstrap/zheng-cms.png" alt="" /><br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/shuzheng/zheng@master/project-bootstrap/api.png" alt="" /></p><h2 id="lenvevhr"><a class="markdownIt-Anchor" href="#lenvevhr"></a> lenve/vhr</h2><p>项目地址: <a href="https://github.com/lenve/vhr">lenve/vhr</a></p><blockquote><p>微人事是一个前后端分离的人力资源管理系统，项目采用<code>SpringBoot</code>+<code>Vue</code>开发。</p></blockquote><p>首先，不同的用户在登录成功之后，根据不同的角色，会看到不同的系统菜单，完整菜单如下：</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="http://ws1.sinaimg.cn/large/0065JV1Hgy1gabdlfb22zj311t0ikweq.jpg" alt="" /></p><p>不同用户登录上来之后，可能看到的会有差异，如下：</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="http://ws1.sinaimg.cn/large/0065JV1Hgy1ga7kt2xa26j311v06sweh.jpg" alt="" /></p><p>每个用户的角色是由系统管理员进行分配的，系统管理员给用户分配角色的页面如下：</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="http://ws1.sinaimg.cn/large/0065JV1Hgy1ga7ktvqjtej311l0idgnn.jpg" alt="" /></p><p>系统管理员也可以管理不同角色可以操作的资源，页面如下：</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="http://ws1.sinaimg.cn/large/0065JV1Hgy1ga7kud2187j311k0ia74z.jpg" alt="" /></p><h2 id="halo-devhalo"><a class="markdownIt-Anchor" href="#halo-devhalo"></a> halo-dev/halo</h2><p>项目地址: <a href="https://github.com/halo-dev/halo">halo-dev/halo</a></p><blockquote><p>✍ Halo 一款现代化的个人独立博客系统 <a href="https://halo.run">https://halo.run</a></p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://i.loli.net/2019/09/11/OQtKEWcCe8xYBph.png" alt="theme-anatole.png" /></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://i.loli.net/2019/09/11/F6CjZKJX1N2x5dU.png" alt="theme-walker.png" /></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://i.loli.net/2019/09/11/4lO2wNCLiqyIJmR.png" alt="theme-icarus.png" /></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://i.loli.net/2019/09/11/q4t86cCPUEwlGMn.png" alt="theme-destiny.png" /></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://i.loli.net/2019/09/11/Iu1eMzZDg6frw97.png" alt="install.png" /></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://i.loli.net/2019/09/11/3CahVJAvXngwiQu.png" alt="admin-login.png" /></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://i.loli.net/2019/09/11/G5R6bOweYoiZKEv.png" alt="admin-dashboard.png" /></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://i.loli.net/2019/09/11/uMHSeIkmC4iPzfJ.png" alt="admin-posts.png" /></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://i.loli.net/2019/09/11/ucDh2tOZLJGTyHX.png" alt="admin-post-edit.png" /></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://i.loli.net/2019/09/11/UwC3ecsRpAMONgq.png" alt="admin-post-publish.png" /></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://i.loli.net/2019/09/11/bxmJ7OTirtvV4Gs.png" alt="admin-post-settings.png" /></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://i.loli.net/2019/09/11/B5UlX6vAgZ3bzaJ.png" alt="admin-attachment.png" /></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://i.loli.net/2019/09/11/mMageUXv5EDpfJQ.png" alt="admin-profile.png" /></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://i.loli.net/2019/09/11/FVA953Ljswd4c8G.png" alt="admin-themes.png" /></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://i.loli.net/2019/09/11/TK6SeMdVj1xcrDw.png" alt="admin-options.png" /></p><h2 id="linlinjavalitemall"><a class="markdownIt-Anchor" href="#linlinjavalitemall"></a> linlinjava/litemall</h2><p>项目地址: <a href="https://github.com/linlinjava/litemall">linlinjava/litemall</a></p><blockquote><p>又一个小商城。<code>litemall</code> = <code>Spring Boot</code>后端 + <code>Vue</code>管理员前端 + 微信小程序用户前端 + <code>Vue</code>用户移动端</p></blockquote><p>小商场实例</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/linlinjava/litemall@master/doc/pic/renard_wx_demo.png" alt="" /></p><p>管理后台实例</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/linlinjava/litemall@master/doc/pic/4.png" alt="" /></p><h2 id="zhangdaiscottjeecg-boot"><a class="markdownIt-Anchor" href="#zhangdaiscottjeecg-boot"></a> zhangdaiscott/jeecg-boot</h2><p>项目地址: <a href="https://github.com/zhangdaiscott/jeecg-boot">zhangdaiscott/jeecg-boot</a></p><blockquote><p>一款基于代码生成器的JAVA快速开发平台(低代码开发平台)，开源界“小普元”超越传统商业企业级开发平台！<br />采用前后端分离架构：<code>SpringBoot 2.x</code>，<code>Ant Design&amp;Vue</code>，<code>Mybatis-plus</code>，<code>Shiro</code>，<code>JWT</code>。<br />强大的代码生成器让前后端代码一键生成，无需写任何代码! 引领新的开发模式(OnlineCoding模式-&gt; 代码生成器模式-&gt; 手工MERGE智能开发)，<br />帮助Java项目解决70%的重复工作，让开发更多关注业务逻辑。既能快速提高开发效率，帮助公司节省成本，同时又不失灵活性。<br /><code>JeecgBoot</code>还独创在线开发模式（No代码）：在线表单配置（表单设计器）、移动配置能力、在线工作流配置（流程设计器）、在线报表配置、在线图表配置、插件能力（可插拔）等等</p></blockquote><blockquote><p>系统效果</p></blockquote><p>PC端</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://static.oschina.net/uploads/img/201904/14155402_AmlV.png" alt="" /><br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://oscimg.oschina.net/oscnet/ba807921197596ba56f495d4b22ee3280ca.jpg" alt="" /><br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://static.oschina.net/uploads/img/201904/14160657_cHwb.png" alt="" /><br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://static.oschina.net/uploads/img/201904/14160813_KmXS.png" alt="" /><br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://static.oschina.net/uploads/img/201904/14160935_Nibs.png" alt="" /><br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://static.oschina.net/uploads/img/201904/14161004_bxQ4.png" alt="" /></p><p>在线接口文档</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://static.oschina.net/uploads/img/201908/27095258_M2Xq.png" alt="" /><br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://static.oschina.net/uploads/img/201904/14160957_hN3X.png" alt="" /></p><p>报表<br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://static.oschina.net/uploads/img/201904/14160828_pkFr.png" alt="" /><br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://static.oschina.net/uploads/img/201904/14160834_Lo23.png" alt="" /><br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://static.oschina.net/uploads/img/201904/14160842_QK7B.png" alt="" /><br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://static.oschina.net/uploads/img/201904/14160849_GBm5.png" alt="" /><br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://static.oschina.net/uploads/img/201904/14160858_6RAM.png" alt="" /></p><p>流程<br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://static.oschina.net/uploads/img/201904/14160623_8fwk.png" alt="" /><br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://static.oschina.net/uploads/img/201904/14160917_9Ftz.png" alt="" /><br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://static.oschina.net/uploads/img/201904/14160633_u59G.png" alt="" /><br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://static.oschina.net/uploads/img/201907/05165142_yyQ7.png" alt="" /></p><p>手机端<br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://oscimg.oschina.net/oscnet/da543c5d0d57baab0cecaa4670c8b68c521.jpg" alt="" /><br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://oscimg.oschina.net/oscnet/fda4bd82cab9d682de1c1fbf2060bf14fa6.jpg" alt="" /></p><p>PAD端<br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://oscimg.oschina.net/oscnet/e90fef970a8c33790ab03ffd6c4c7cec225.jpg" alt="" /><br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://oscimg.oschina.net/oscnet/d78218803a9e856a0aa82b45efc49849a0c.jpg" alt="" /><br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://oscimg.oschina.net/oscnet/0404054d9a12647ef6f82cf9cfb80a5ac02.jpg" alt="" /><br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://oscimg.oschina.net/oscnet/59c23b230f52384e588ee16309b44fa20de.jpg" alt="" /></p><h2 id="paascloudpaascloud-master"><a class="markdownIt-Anchor" href="#paascloudpaascloud-master"></a> paascloud/paascloud-master</h2><p>项目地址: <a href="https://github.com/paascloud/paascloud-master">paascloud/paascloud-master</a></p><blockquote><p><code>spring cloud</code> + <code>vue</code> + <code>oAuth2.0</code>全家桶实战，前后端分离模拟商城，完整的购物流程、后端运营平台，可以实现快速搭建企业级微服务项目。<br />支持微信登录等三方登录。<a href="http://www.paascloud.net">http://www.paascloud.net</a></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">功能点：</span><br><span class="line">    模拟商城，完整的购物流程、后端运营平台对前端业务的支撑，和对项目的运维，有各项的监控指标和运维指标。</span><br><span class="line">技术点：</span><br><span class="line">       核心技术为springcloud+vue两个全家桶实现，采取了取自开源用于开源的目标，所以能用开源绝不用收费框架，整体技术栈只有</span><br><span class="line">    阿里云短信服务是收费的，都是目前java前瞻性的框架，可以为中小企业解决微服务架构难题，可以帮助企业快速建站。由于服务</span><br><span class="line">    器成本较高，尽量降低开发成本的原则，本项目由10个后端项目和3个前端项目共同组成。真正实现了基于RBAC、jwt和oauth2的</span><br><span class="line">    无状态统一权限认证的解决方案，实现了异常和日志的统一管理，实现了MQ落地保证100%到达的解决方案。</span><br><span class="line"></span><br><span class="line">核心框架：springcloud Edgware全家桶</span><br><span class="line">安全框架：Spring Security Spring Cloud Oauth2</span><br><span class="line">分布式任务调度：elastic-job</span><br><span class="line">持久层框架：MyBatis、通用Mapper4、Mybatis_PageHelper</span><br><span class="line">数据库连接池：Alibaba Druid</span><br><span class="line">日志管理：Logback前端框架：Vue全家桶以及相关组件</span><br><span class="line">三方服务： 邮件服务、阿里云短信服务、七牛云文件服务、钉钉机器人服务、高德地图API</span><br></pre></td></tr></table></figure><h2 id="hs-webhsweb-framework"><a class="markdownIt-Anchor" href="#hs-webhsweb-framework"></a> hs-web/hsweb-framework</h2><p>项目地址: <a href="https://github.com/hs-web/hsweb-framework">hs-web/hsweb-framework</a></p><blockquote><p>hsweb (haʊs wɛb) 是一个用于快速搭建企业后台管理系统的基础项目,集成一揽子便捷功能如:便捷的通用增删改查,强大的权限管理,动态多数据源,动态表单,在线数据库维护等. 基于 <code>spring-boot</code>,<code>mybaits</code>. <a href="http://framework.hsweb.io">http://framework.hsweb.io</a></p></blockquote><p>应用场景</p><ol><li>完全开源的后台管理系统.</li><li>细粒度(按钮,行,列)权限控制的后台管理系统.</li><li>模块化的后台管理系统.</li><li>功能可拓展的后台管理系统.</li><li>集成各种常用功能的后台管理系统.</li><li>前后分离的后台管理系统.</li></ol><h2 id="justauthjustauth"><a class="markdownIt-Anchor" href="#justauthjustauth"></a> justauth/JustAuth</h2><p>项目地址: <a href="https://github.com/justauth/JustAuth">justauth/JustAuth</a></p><blockquote><p>💯 史上最全的整合第三方登录的开源库。目前已支持<code>Github</code>、<code>Gitee</code>、<code>微博</code>、<code>钉钉</code>、<code>百度</code>、<code>Coding</code>、<code>腾讯云开发者平台</code>、<code>OSChina</code>、<code>支付宝</code>、<code>QQ</code>、<code>微信</code>、<code>淘宝</code>、<code>Google</code>、<code>Facebook</code>、<code>抖音</code>、<code>领英</code>、<code>小米</code>、<code>微软</code>、<code>今日头条</code>、<code>Teambition</code>、<code>StackOverflow</code>、<code>Pinterest</code>、<code>人人</code>、<code>华为</code>、<code>企业微信</code>、<code>酷家乐</code>、<code>Gitlab</code>、<code>美团</code>、<code>饿了么</code>和<code>推特</code>等第三方平台的授权登录。 Login, so easy! <a href="https://docs.justauth.whnb.wang">https://docs.justauth.whnb.wang</a></p></blockquote><p>支持的平台:</p><center>    <table>        <tr>            <td align="center" width="200"><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/gitee.png" width="20"></td>            <td align="center" width="200"><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/github.png" width="20"></td>            <td align="center" width="200"><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/weibo.png" width="20"></td>            <td align="center" width="200"><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/dingtalk.png" width="20"></td>            <td align="center" width="200"><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/baidu.png" width="20"></td>        </tr>        <tr>            <td align="center" width="200"><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/coding.png" width="20"></td>            <td align="center" width="200"><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/tencentCloud.png" width="20"></td>            <td align="center" width="200"><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/oschina.png" width="20"></td>            <td align="center" width="200"><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/alipay.png" width="20"></td>            <td align="center" width="200"><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/qq.png" width="20"></td>        </tr>        <tr>            <td align="center" width="200"><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/wechat.png" width="20"></td>            <td align="center" width="200"><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/taobao.png" width="20"></td>            <td align="center" width="200"><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/google.png" width="20"></td>            <td align="center" width="200"><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/facebook.png" width="20"></td>            <td align="center" width="200"><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/douyin.png" width="20"></td>        </tr>        <tr>            <td align="center" width="200"><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/linkedin.png" width="20"></td>            <td align="center" width="200"><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/microsoft.png" width="20"></td>            <td align="center" width="200"><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/mi.png" width="20"></td>            <td align="center" width="200"><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/toutiao.png" width="20"></td>            <td align="center" width="200"><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/teambition.png" width="20"></td>        </tr>        <tr>            <td align="center" width="200"><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/renren.png" width="20"></td>            <td align="center" width="200"><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/pinterest.png" width="20"></td>            <td align="center" width="200"><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/stackoverflow.png" width="20"></td>            <td align="center" width="200"><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/huawei.png" width="20"></td>            <td align="center" width="200"><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/csdn.png" width="20"></td>        </tr>        <tr>            <td align="center" width="200"><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/kujiale.png" width="20"></td>            <td align="center" width="200"><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/gitlab.png" width="20"></td>            <td align="center" width="200"><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/meituan.png" width="20"></td>            <td align="center" width="200"><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/eleme.png" width="20"></td>            <td align="center" width="200"><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/twitter.png" width="20"></td>        </tr>    </table>    <center><a href="https://docs.justauth.whnb.wang/#/?id=%E5%B7%B2%E9%9B%86%E6%88%90%E7%9A%84%E5%B9%B3%E5%8F%B0" target="_blank">查看更多</a></center></center><h2 id="lunezeladmin"><a class="markdownIt-Anchor" href="#lunezeladmin"></a> lunez/eladmin</h2><p>项目地址: <a href="https://github.com/elunez/eladmin">lunez/eladmin</a></p><blockquote><p>项目基于 <code>Spring Boot 2.1.0</code> 、 <code>Jpa</code>、 <code>Spring Security</code>、<code>redis</code>、<code>Vue</code>的前后端分离的后台管理系统，项目采用分模块开发方式， 权限控制采用 RBAC，支持数据字典与数据权限管理，支持一键生成前后端代码，支持动态路由 <a href="https://auauz.net">https://auauz.net</a></p></blockquote><p>主要特性</p><ul><li>使用最新技术栈，社区资源丰富。</li><li>项目按功能模块化，提升开发，测试效率。</li><li>高效率开发，使用代码生成器可以一键生成前后端代码</li><li>支持数据字典，可方便的对一些状态进行管理</li><li>支持接口限流，避免恶意请求导致服务层压力过大</li><li>支持接口级别的功能权限与数据权限，可自定义操作</li><li>自定义权限注解与匿名接口注解，可快速对某一接口拦截与放行</li><li>对一些常用的前端组件封装：表格数据请求、数据字典等</li><li>前后端统一异常拦截处理，统一输出异常，避免繁琐的判断</li></ul><p>系统功能</p><ul><li>用户管理：提供用户的相关配置，新增用户后，默认密码为123456</li><li>角色管理：对权限与菜单进行分配，可根据部门设置角色的数据权限</li><li>菜单管理：已实现菜单动态路由，后端可配置化，支持多级菜单</li><li>部门管理：可配置系统组织架构，树形表格展示</li><li>岗位管理：配置各个部门的职位</li><li>字典管理：可维护常用一些固定的数据，如：状态，性别等</li><li>操作日志：记录用户操作的日志</li><li>异常日志：记录异常日志，方便开发人员定位错误</li><li>SQL监控：采用druid 监控数据库访问性能，默认用户名admin，密码123456</li><li>定时任务：整合Quartz做定时任务，加入任务日志，任务运行情况一目了然</li><li>代码生成：高灵活度一键生成前后端代码，减少百分之80左右的工作任务</li><li>邮件工具：配合富文本，发送html格式的邮件</li><li>免费图床：使用sm.ms图床，用作公共图片上传使用，该图床不怎么稳定，不太建议使用</li><li>七牛云存储：可同步七牛云存储的数据到系统，无需登录七牛云直接操作云数据</li><li>支付宝支付：整合了支付宝支付并且提供了测试账号，可自行测试</li></ul><p>项目预览</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://i.loli.net/2019/05/18/5cdf77fa8144d68788.png" alt="" /><br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://i.loli.net/2019/05/18/5cdf7763993e361778.png" alt="" /><br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://i.loli.net/2019/05/18/5cdf7763971d453615.png" alt="" /><br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://i.loli.net/2019/05/18/5cdf77632e85a60423.png" alt="" /><br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://i.loli.net/2019/05/18/5cdf77632b4b090165.png" alt="" /><br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://i.loli.net/2019/05/18/5cdf77639929277783.png" alt="" /><br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://i.loli.net/2019/05/18/5cdf78969adc389599.png" alt="" /></p><h2 id="lihengmingspring-boot-api-project-seed"><a class="markdownIt-Anchor" href="#lihengmingspring-boot-api-project-seed"></a> lihengming/spring-boot-api-project-seed</h2><p>项目地址: <a href="https://github.com/lihengming/spring-boot-api-project-seed">lihengming/spring-boot-api-project-seed</a></p><blockquote><p>🌱🚀一个基于<code>Spring Boot</code> &amp; <code>MyBatis</code>的种子项目，用于快速构建中小型<code>API</code>、<code>RESTful API</code>项目~</p></blockquote><p><code>Spring Boot API Project Seed</code> 是一个基于<code>Spring Boot</code> &amp;<code>MyBatis</code>的种子项目，用于快速构建中小型<code>API</code>、<code>RESTful API</code>项目，该种子项目已经有过多个真实项目的实践，稳定、简单、快速，使我们摆脱那些重复劳动，专注于业务代码的编写，减少加班。下面是一个简单的使用演示，看如何基于本项目在短短几十秒钟内实现一套简单的API，并运行提供服务。</p><p>特征&amp;提供</p><ul><li>最佳实践的项目结构、配置文件、精简的<code>POM</code>（[查看项目结构图](<a href="https://github.com/lihengming/java-codes/blob/master/shared-resources/github-images/project-struct.png%EF%BC%89">https://github.com/lihengming/java-codes/blob/master/shared-resources/github-images/project-struct.png）</a></li><li>统一响应结果封装及生成工具</li><li>统一异常处理</li><li>简单的接口签名认证</li><li>常用基础方法抽象封装</li><li>使用<code>Druid</code> <code>Spring Boot Starter</code> 集成<code>Drui</code>d数据库连接池与监控</li><li>使用<code>FastJsonHttpMessageConverter</code>，提高<code>JSON</code>序列化速度</li><li>集成<code>MyBatis</code>、通用<code>Mapper</code>插件、<code>PageHelper</code>分页插件，实现单表业务零<code>SQL</code></li><li>提供代码生成器根据表名生成对应的<code>Model</code>、<code>Mapper</code>、<code>MapperXML</code>、<code>Service</code>、<code>ServiceImpl</code>、<code>Controller</code>等基础代码，其中<code>Controller</code>模板默认提供<code>POST</code>和<code>RESTful</code>两套，根据需求在CodeGenerator.genController(tableName)方法中自己选择，默认使用POST模板。代码模板可根据实际项目的需求来扩展，由于每个公司业务都不太一样，所以只提供了一些比较基础、通用的模板，主要是提供一个思路来减少重复代码的编写，我在实际项目的使用中，其实根据公司业务的抽象编写了大量的模板。另外，使用模板也有助于保持团队代码风格的统一</li><li>另有彩蛋，待你探索</li></ul><h2 id="exrickxmall"><a class="markdownIt-Anchor" href="#exrickxmall"></a> Exrick/xmall</h2><p>项目地址: <a href="https://github.com/Exrick/xmall">Exrick/xmall</a></p><blockquote><p>基于<code>SOA</code>架构的分布式电商购物商城 前后端分离 前台商城:<code>Vue</code>全家桶 后台管理系统:<code>Dubbo</code>/<code>SSM</code>/<code>Elasticsearch</code>/<code>Redis</code>/<code>MySQL</code>/<code>ActiveMQ</code>/<code>Shiro</code>/<code>Zookeeper</code>等 <a href="http://xmall.exrick.cn">http://xmall.exrick.cn</a></p></blockquote><p>在线Demo</p><p>前台商城：<a href="http://xmall.exrick.cn/">http://xmall.exrick.cn/</a><br />后台管理系统：<a href="http://xmadmin.exrick.cn/">http://xmadmin.exrick.cn/</a></p><blockquote><p>基于SOA架构的分布式购物电商商城</p></blockquote><ul><li>[x] 后台管理系统：管理商品、订单、类目、商品规格属性、用户、权限、系统统计、系统日志以及前台内容等功能</li><li>[x] 前台系统：用户可以在前台系统中进行注册、登录、浏览商品、首页、下单等操作</li><li>[x] 会员系统：用户可以在该系统中查询已下的订单、管理订单、我的优惠券等信息</li><li>[x] 订单系统：提供下单、查询订单、修改订单状态、定时处理订单</li><li>[x] 搜索系统：提供商品的搜索功能</li><li>[x] 单点登录系统：为多个系统之间提供用户登录凭证以及查询登录用户的信息</li></ul><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://i.loli.net/2018/07/22/5b5461099039e.jpg" alt="" title="后台首页" /></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://i.loli.net/2018/07/22/5b546125886ca.jpg" alt="" title="商品管理" /></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://i.loli.net/2018/07/22/5b54613bc866f.jpg" alt="" title="管理员编辑" /></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://i.loli.net/2018/07/22/5b54615b95788.jpg" alt="" title="前台首页" /></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://i.loli.net/2018/07/22/5b5461756b2b0.jpg" alt="" title="ES分词搜索" /></p><blockquote><p>项目架构及功能模块图</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://i.loli.net/2018/07/22/5b5461926969b.png" alt="" /></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://i.loli.net/2018/07/22/5b5461aa2fdee.jpg" alt="" /></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://i.loli.net/2018/07/22/5b5461c54cb55.jpg" alt="" /></p><h2 id="lenvevblog"><a class="markdownIt-Anchor" href="#lenvevblog"></a> lenve/VBlog</h2><p>项目地址: <a href="https://github.com/lenve/VBlog">lenve/VBlog</a></p><blockquote><p>V部落是一个多用户博客管理平台，采用<code>Vue</code>+<code>SpringBoot</code>开发。</p></blockquote><p>登陆页面</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/lenve/VBlog@master/doc/login.png" alt="" /></p><p>文章列表</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/lenve/VBlog@master/doc/article.png" alt="" /></p><p>发表文章</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/lenve/VBlog@master/doc/post.png" alt="" /></p><p>用户管理</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/lenve/VBlog@master/doc/usermana.png" alt="" /></p><p>栏目管理</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/lenve/VBlog@master/doc/category.png" alt="" /></p><p>数据统计</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/lenve/VBlog@master/doc/datastatistics.png" alt="" /></p><h2 id="roncooroncoo-pay"><a class="markdownIt-Anchor" href="#roncooroncoo-pay"></a> roncoo/roncoo-pay</h2><p>项目地址: <a href="https://github.com/roncoo/roncoo-pay">roncoo/roncoo-pay</a></p><blockquote><p>龙果支付系统（roncoo-pay）是国内首款开源的互联网支付系统，拥有独立的账户体系、用户体系、支付接入体系、支付交易体系、对账清结算体系。目标是打造一款集成主流支付方式且轻量易用的支付收款系统，满足互联网业务系统打通支付通道实现支付收款和业务资金管理等功能。 <a href="https://pay.roncoo.net">https://pay.roncoo.net</a></p></blockquote><p>主要特点：</p><blockquote><ol><li>有支付系统通用的支付通道接入、用户管理、资金账户管理、对账清算管理、支付订单管理等功能；</li></ol></blockquote><ol start="2"><li>已接通支付宝支付和微信支付的多种支付方式，满足大部分企业业务系统的支付需求；</li><li>独立的支付网关接入系统，为下游商户或业务平台提供统一支付接入接口，轻松实现统一支付接入；</li><li>项目代码免费开源且定期更新维护，扩展自由、使用无忧；</li><li>配套完善的系统使用文档、部署文档、视频教程，学习使用更轻松；</li><li>拥有活跃的产品技术学习交流社群，学习交流更高效；</li><li>由专业的支付系统产品技术团队提供服务支持，专业性及持续性有保障；</li></ol><h2 id="exrickxpay"><a class="markdownIt-Anchor" href="#exrickxpay"></a> Exrick/xpay</h2><p>项目地址: <a href="https://github.com/Exrick/xpay">Exrick/xpay</a></p><blockquote><p>XPay个人免签收款支付系统 完全免费 资金直接到达本人账号 支持 支付宝 微信 QQ 云闪付 无需备案 无需签约 无需挂机监控APP 无需插件 无需第三方支付SDK 无需营业执照身份证 只需收款码 搞定支付流程 现已支持移动端支付 <a href="http://xpay.exrick.cn/">http://xpay.exrick.cn/</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Opencv 开源项目</title>
      <link href="post/opencv-opensource.html"/>
      <url>post/opencv-opensource.html</url>
      
        <content type="html"><![CDATA[<h2 id="roujackmathai"><a class="markdownIt-Anchor" href="#roujackmathai"></a> Roujack/mathAI</h2><blockquote><p>一个拍照做题程序。输入一张包含数学计算题的图片，输出识别出的数学计算式以及计算结果。This is a mathematic expression recognition project.</p></blockquote><p><a href="https://github.com/Roujack/mathAI">mathAI</a></p><p>一个拍照做题程序。输入一张包含数学计算题的图片，输出识别出的数学计算式以及计算结果。<br /><strong>请查看系统文档说明来运行程序。注意，这是一个半开源的项目，目前上传的版本只能处理简单的一维加减乘除算术表达式（如果想要识别更加复杂的表达式，可以参考数学公式识别的论文）。可以参考的代码是前面字符识别部分以及整个算法处理框架。</strong><br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Roujack/mathAI/test.png" alt="" /></p><p>整个程序使用python实现，具体处理流程包括了图像预处理、字符识别、数学公式识别、数学公式语义理解、结果输出。</p><p>本程序使用opencv对输入的图像进行预处理，并将字符裁剪出来再归一化成固定大小的矩阵。我在TensorFlow上实现了一个lenet5<br />的卷积神经网络用来识别数学字符，训练使用CHROME数据集。对于数学公式的识别，主要是将识别出的独立的字符组织成计算机能够<br />理解的数学公式（这里的数学公式就是纯字符的可求解的数学计算题）。大概的方法是使用编译原理的算符优先法和递归下降法进行实现。<br />然后根据属性文法的值传递思想，将数学公式的值计算出来。最后使用python的matlibplot库把计算过程和答案打印出来。</p><p>优点：这是一整套拍照做题的算法框架，同时能够处理多种多样的计算题，目前市面上还没有看到实现。OCR技术如此成熟的今天字符识别<br />已经不算有挑战的东西了。<br />缺点：字符空间关系判断只用了人类启发式规则，图像预处理不够鲁棒，数学公式的结构识别算法不够完美（可以考虑使用二维文法来做）。<br />系统还有很大的提升空间。</p><p>这本来是一个很有野心的project，因为它试图解决所有的我们遇到的数学题。更一般的是，我试图实现一个演算系统，<br />在这个系统里，输入一些规则（公理），以及已知条件，我们希望它能够推出一些结论出来。但是我发现这是一个很难的问题。<br />最近的学习结论告诉我，一方面循环不变式的寻找无法自动化，另一方面演算的时间和空间复杂度太高（可以参考prolog语言的实现）。</p><p>什么是智能？是现在的机器学习吗？我觉得不像。SVM是最大化函数间隔的算法，神经网络是寻找损失函数局部最优解的过程。这些技术只是数学层面的优化。<br />还是某种推理能力？我不知道。如果给它一些演算规则，和一些具有现实意义的符号，再加上一些公理，它能够演算出一些结论，这个结论具有现实意义，<br />是不是就意味着智能？我觉着是的，不过很难实现。据说吴文俊采用了自动化的方法证明了几何定理（吴方法）。</p><p>我们的意识或者思维到底是什么东西？信息在大脑里面到底是如何表示的？我们为什么具有泛华的学习能力？一方面脑认知科学在求索，一方面计算科学也在求索。<br />我希望意识是能够认识物质的，并在最终达到越来越完美的过程。这才是科研的意义。我愿一直去寻找真理。</p><h2 id="oarriagaface_classification"><a class="markdownIt-Anchor" href="#oarriagaface_classification"></a> oarriaga/face_classification</h2><blockquote><p>Real-time face detection and emotion/gender classification using fer2013/imdb datasets with a keras CNN model and openCV.</p></blockquote><p>一个实时人脸检测,表情/性别分析</p><p><a href="https://github.com/oarriaga/face_classification">face_classification</a></p><h3 id="face-classification-and-detection"><a class="markdownIt-Anchor" href="#face-classification-and-detection"></a> Face classification and detection.</h3><p>Real-time face detection and emotion/gender classification using fer2013/IMDB datasets with a keras CNN model and openCV.</p><ul><li>IMDB gender classification test accuracy: 96%.</li><li>fer2013 emotion classification test accuracy: 66%.</li></ul><p>For more information please consult the <a href="https://cdn.jsdelivr.net/gh/oarriaga/face_classification@master/report.pdf">publication</a></p><h3 id="emotiongender-examples"><a class="markdownIt-Anchor" href="#emotiongender-examples"></a> Emotion/gender examples:</h3><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/oarriaga/face_classification@master/images/demo_results.png" alt="" /></p><p>Guided back-prop<br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/oarriaga/face_classification@master/images/gradcam_results.png" alt="" /></p><p>Real-time demo:</p><div align='center'>  <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src='https://github.com/oarriaga/face_classification/raw/master/images/color_demo.gif' width='400px'></div><p><a href="https://mas-group.inf.h-brs.de/?page_id=622">B-IT-BOTS</a> robotics team 😃<br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/oarriaga/face_classification@master/images/robocup_team.png" alt="" /></p><h4 id="instructions"><a class="markdownIt-Anchor" href="#instructions"></a> Instructions</h4><h5 id="run-real-time-emotion-demo"><a class="markdownIt-Anchor" href="#run-real-time-emotion-demo"></a> Run real-time emotion demo:</h5><blockquote><p>python3 video_emotion_color_demo.py</p></blockquote><h5 id="run-real-time-guided-back-prop-demo"><a class="markdownIt-Anchor" href="#run-real-time-guided-back-prop-demo"></a> Run real-time guided back-prop demo:</h5><blockquote><p>python3 image_gradcam_demo.py</p></blockquote><h5 id="make-inference-on-single-images"><a class="markdownIt-Anchor" href="#make-inference-on-single-images"></a> Make inference on single images:</h5><blockquote><p>python3 image_emotion_gender_demo.py &lt;image_path&gt;</p></blockquote><p>e.g.</p><blockquote><p>python3 image_emotion_gender_demo.py …/images/test_image.jpg</p></blockquote><h5 id="running-with-docker"><a class="markdownIt-Anchor" href="#running-with-docker"></a> Running with Docker</h5><p>With a few steps one can get its own face classification and detection running. Follow the commands below:</p><ul><li><code>docker pull ekholabs/face-classifier</code></li><li><code>docker run -d -p 8084:8084 --name=face-classifier ekholabs/face-classifier</code></li><li><code>curl -v -F image=@[path_to_image] http://localhost:8084/classifyImage &gt; image.png</code></li></ul><h5 id="to-train-previousnew-models-for-emotion-classification"><a class="markdownIt-Anchor" href="#to-train-previousnew-models-for-emotion-classification"></a> To train previous/new models for emotion classification:</h5><ul><li><p>Download the fer2013.tar.gz file from <a href="https://www.kaggle.com/c/challenges-in-representation-learning-facial-expression-recognition-challenge/data">here</a></p></li><li><p>Move the downloaded file to the datasets directory inside this repository.</p></li><li><p>Untar the file:</p></li></ul><blockquote><p>tar -xzf fer2013.tar</p></blockquote><ul><li>Run the train_emotion_classification.py file</li></ul><blockquote><p>python3 train_emotion_classifier.py</p></blockquote><h5 id="to-train-previousnew-models-for-gender-classification"><a class="markdownIt-Anchor" href="#to-train-previousnew-models-for-gender-classification"></a> To train previous/new models for gender classification:</h5><ul><li><p>Download the imdb_crop.tar file from <a href="https://data.vision.ee.ethz.ch/cvl/rrothe/imdb-wiki/">here</a> (It’s the 7GB button with the tittle Download faces only).</p></li><li><p>Move the downloaded file to the datasets directory inside this repository.</p></li><li><p>Untar the file:</p></li></ul><blockquote><p>tar -xfv imdb_crop.tar</p></blockquote><ul><li>Run the train_gender_classification.py file</li></ul><blockquote><p>python3 train_gender_classifier.py</p></blockquote><h2 id="fingers-detection-using-opencv-and-python"><a class="markdownIt-Anchor" href="#fingers-detection-using-opencv-and-python"></a> Fingers-Detection-using-OpenCV-and-Python</h2><blockquote><p>A simple Fingers Detection (or Gesture Recognition) using OpenCV and Python with background substraction 简单手势识别</p></blockquote><p><a href="https://github.com/lzane/Fingers-Detection-using-OpenCV-and-Python">Fingers-Detection-using-OpenCV-and-Python</a></p><blockquote><p>for people using python2 and opencv2, please check out the <a href="https://github.com/lzane/Fingers-Detection-using-OpenCV-and-Python/tree/py2_opencv2"><code>lzane:py2_opencv2</code></a> branch.</p></blockquote><blockquote><p>for people using opencv4, please change line 96 in the <code>new.py</code> to <code>contours, hierarchy = cv2.findContours(thresh1, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)</code> according to the <a href="https://github.com/lzane/Fingers-Detection-using-OpenCV-and-Python/issues/7#issuecomment-509925971">opencv api change</a>.</p></blockquote><h3 id="environment"><a class="markdownIt-Anchor" href="#environment"></a> Environment</h3><ul><li>OS: MacOS El Capitan</li><li>Platform: Python 3</li><li>Librarys:<ul><li>OpenCV 3</li><li>appscript</li></ul></li></ul><h3 id="demo-videos"><a class="markdownIt-Anchor" href="#demo-videos"></a> Demo Videos</h3><ul><li>Youtube: <a href="https://youtu.be/CmBxUnp7XwM">Click here</a></li><li>Youku: <a href="http://v.youku.com/v_show/id_XMTc3MjI4MjQwOA==.html">Click here</a></li></ul><h3 id="how-to-run-it"><a class="markdownIt-Anchor" href="#how-to-run-it"></a> How to run it?</h3><ul><li>run it in python</li><li>press <code>'b'</code> to capture the background model (Remember to move your hand out of the blue rectangle)</li><li>press <code>'r'</code> to reset the backgroud model</li><li>press <code>'ESC'</code> to exit</li></ul><h3 id="process"><a class="markdownIt-Anchor" href="#process"></a> Process</h3><h4 id="capture-original-image"><a class="markdownIt-Anchor" href="#capture-original-image"></a> Capture original image</h4><p>Capture video from camera and pick up a frame.</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/lzane/Fingers-Detection-using-OpenCV-and-Python@master/material/-1474508814843.png" alt="Alt text" /></p><h4 id="capture-background-model-background-subtraction"><a class="markdownIt-Anchor" href="#capture-background-model-background-subtraction"></a> Capture background model &amp; Background subtraction</h4><p>Use background subtraction method called <strong>Gaussian Mixture-based Background/Foreground Segmentation Algorithm</strong> to subtract background.</p><p>For more information about the method, check <a href="http://www.zoranz.net/Publications/zivkovic2004ICPR.pdf">Zivkovic2004</a></p><p>Here I use the OpenCV’s built-in function <code>BackgroundSubtractorMOG2</code> to subtract background.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bgModel = cv2.BackgroundSubtractorMOG2(<span class="number">0</span>, bgSubThreshold)</span><br></pre></td></tr></table></figure><p>Build a background subtractor model</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fgmask = bgModel.apply(frame)</span><br></pre></td></tr></table></figure><p>Apply the model to a frame</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">res = cv2.bitwise_and(frame, frame, mask=fgmask)</span><br></pre></td></tr></table></figure><p>Get the foreground(hand) image</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/lzane/Fingers-Detection-using-OpenCV-and-Python@master/material/-1474508613267.png" alt="Alt text" /></p><h4 id="gaussian-blur-threshold"><a class="markdownIt-Anchor" href="#gaussian-blur-threshold"></a> Gaussian blur &amp; Threshold</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)</span><br></pre></td></tr></table></figure><p>First convert the image to gray scale.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">blur = cv2.GaussianBlur(gray, (blurValue, blurValue), <span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>By Gaussian blurring, we create smooth transition from one color to another and reduce the edge content.</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/lzane/Fingers-Detection-using-OpenCV-and-Python@master/material/-1474508640877.png" alt="Alt text" /></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ret, thresh = cv2.threshold(blur, threshold, <span class="number">255</span>, cv2.THRESH_BINARY)</span><br></pre></td></tr></table></figure><p>We use thresholding to create binary images from grayscale images.</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/lzane/Fingers-Detection-using-OpenCV-and-Python@master/material/-1474508661044.png" alt="Alt text" /></p><h4 id="contour-hull-convexity"><a class="markdownIt-Anchor" href="#contour-hull-convexity"></a> Contour &amp; Hull &amp; Convexity</h4><p>We now need to find out the hand contour from the binary image we created before and detect fingers (or in other words, recognize gestures)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">contours, hierarchy = cv2.findContours(thresh1, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)</span><br></pre></td></tr></table></figure><p>This function will find all the contours from the binary image. We need to get the biggest contours (our hand) based on their area since we can assume that our hand will be the biggest contour in this situation. (it’s obvious)</p><p>After picking up our hand, we can create its hull and detect the defects by calling :</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hull = cv2.convexHull(res)</span><br><span class="line">defects = cv2.convexityDefects(res, hull)</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/lzane/Fingers-Detection-using-OpenCV-and-Python@master/material/-1474508788185.png" alt="Alt text" /></p><p>Now we have the number of fingers. How to use this information? It’s based on your imagination…</p><p>I add in a keyboard simulation package named <strong>appscript</strong> as interface to control Chrome’s dinosaur game.</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/lzane/Fingers-Detection-using-OpenCV-and-Python@master/material/-1474522195081.png" alt="Alt text" /></p><hr /><h3 id="references-tutorials"><a class="markdownIt-Anchor" href="#references-tutorials"></a> References &amp; Tutorials</h3><ol><li>OpenCV documentation:<br /><a href="http://docs.opencv.org/2.4.13/">http://docs.opencv.org/2.4.13/</a></li><li>Opencv python hand gesture recognition:<br /><a href="http://creat-tabu.blogspot.com/2013/08/opencv-python-hand-gesture-recognition.html">http://creat-tabu.blogspot.com/2013/08/opencv-python-hand-gesture-recognition.html</a></li><li>Mahaveerverma’s hand gesture recognition project:<br /><a href="https://github.com/mahaveerverma/hand-gesture-recognition-opencv">hand-gesture-recognition-opencv</a></li></ol><h2 id="kr1s77flask-video-streaming-recorder"><a class="markdownIt-Anchor" href="#kr1s77flask-video-streaming-recorder"></a> Kr1s77/flask-video-streaming-recorder</h2><blockquote><p>opencv+flask 家庭监控系统(surveillance_system)</p></blockquote><p><span align="center"><code>Raspberry Pi flask+opencv Surveillance System</code></pan></p><br><p align="center">    <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CriseLYJ/flask-video-streaming-recorder@master/img/main.jpg" alt="Master"></p><br><p align="center">"<i>Did you know all your doors were locked?</i>" - Riddick (The Chronicles of Riddick)</p><br><p align="center">  <a href="https://github.com/CriseLYJ/flask-video-streaming-recorder/tree/master">    <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://img.shields.io/badge/Branch-master-green.svg?longCache=true"        alt="Branch">  </a>  <a href="https://github.com/CriseLYJ/flask-video-streaming-recorder/pulls">    <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg?longCache=true"        alt="Pull Requests">  </a>  <a href="http://www.gnu.org/licenses/">    <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://img.shields.io/badge/License-GNU-blue.svg?longCache=true" alt="License">  </a></p><div align="center">  <sub>Created by  <a href="https://criselyj.github.io/">CriseLYJ</a></div><br><hr /><h3 id="installing"><a class="markdownIt-Anchor" href="#installing"></a> Installing</h3><h4 id="first-you-should-install-python3x-on-your-raspberry-pi"><a class="markdownIt-Anchor" href="#first-you-should-install-python3x-on-your-raspberry-pi"></a> 🐍First you should install <code>Python3.x</code> on your Raspberry Pi</h4><blockquote><p>$ sudo  apt-get  update<br />$ sudo  apt-get  upgrade</p></blockquote><ul><li>Install python<code>dependent environment</code></li><li>install python <code>Dependent environment</code></li></ul><blockquote><p>$ sudo apt-get install build-essential libsqlite3-dev sqlite3 bzip2 libbz2-dev</p></blockquote><ul><li>Download the python3.6 version source and extract it</li><li>Download the python version 3.6 source code and decompress it</li></ul><blockquote><pre><code>  $ wget https://www.python.org/ftp/python/3.6.1/Python-3.6.1.tgz  $ tar zxvf Python-3.6.1.tgz</code></pre></blockquote><ul><li>Compilation and installation</li></ul><blockquote><pre><code>  $ cd Python-3.6.1  $ sudo ./configure  $ sudo make  $ sudo make install</code></pre></blockquote><ul><li>Check installation</li></ul><blockquote><p>$ ls -al /usr/local/bin/python*</p></blockquote><h4 id="next-install-the-module"><a class="markdownIt-Anchor" href="#next-install-the-module"></a> Next install the module</h4><ul><li>Install flask</li></ul><blockquote><p>$ pip3 install flask==0.10.1</p></blockquote><ul><li>Install opencv</li><li>install opencv</li></ul><blockquote><p>$ pip3 install opencv_python</p></blockquote><h3 id="running-the-tests"><a class="markdownIt-Anchor" href="#running-the-tests"></a> Running the tests</h3><ul><li>Download all files to run</li><li>run <a href="http://main.py">main.py</a></li></ul><blockquote><p>$ python3 <a href="http://main.py">main.py</a> -p 0.0.0.0<br />当然你也可以使用Gunicorn来当做你的多线程服务器</p></blockquote><ul><li><p>2019.2.21 update</p></li><li><p>Increased login, a simple login interface, does not need a database</p></li><li><p>Test account</p></li></ul> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Username:  admin</span><br><span class="line">Password:  admin</span><br></pre></td></tr></table></figure><ul><li><p>2019.3.4 update</p></li><li><p>Add multi-threading and recording downloads</p></li><li><p>Support multi-device access, logout login is normal</p></li><li><p>2019.3.14 update</p></li><li><p>现在的目录结构是这个样子</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Kr1s77/flask-video-streaming-recorder@master/img/tree.png" alt="" /></p><ul><li><p>抽取了代码，进行了优化，就是这样目录看起来会很多</p></li><li><p>Added a beautiful login interface<br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Kr1s77/flask-video-streaming-recorder@master/img/login.png" alt="Alt text" /></p></li><li><p>Optimization homepage</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Kr1s77/flask-video-streaming-recorder@master/img/index.jpg" alt="Alt text" /></p><ul><li>Add video recording and download capabilities</li><li>Realized the <code>high performance</code>, using the yield generator, and multi-threading, silky smooth!</li></ul><h3 id="author"><a class="markdownIt-Anchor" href="#author"></a> Author</h3><ul><li>Crise LYJ</li></ul><h3 id="acknowledgments"><a class="markdownIt-Anchor" href="#acknowledgments"></a> Acknowledgments</h3><ul><li><p>Thanks for all!</p></li><li><p>Have a good time!</p></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Kr1s77/flask-video-streaming-recorder@master/img/hha.jpeg" alt="Alt text" /></p><h2 id="nuno-fariatiler"><a class="markdownIt-Anchor" href="#nuno-fariatiler"></a> nuno-faria/tiler</h2><blockquote><p>👷 Build images with images</p></blockquote><p><a href="https://github.com/nuno-faria/tiler">nuno-faria/tiler</a></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/nuno-faria/tiler@master/images/title_stripes.png" alt="title" /></p><p>👷 Build images with images.</p><h3 id="about"><a class="markdownIt-Anchor" href="#about"></a> About</h3><p>Tiler is a tool to create an image using all kinds of other smaller images (tiles). It is different from other mosaic tools since it can adapt to tiles with multiple shapes and sizes (i.e. not limited to squares).</p><p>An image can be built out of circles, lines, waves, cross stitches, legos, minecraft blocks, paper clips, letters, … The possibilities are endless!</p><h3 id="installation"><a class="markdownIt-Anchor" href="#installation"></a> Installation</h3><ul><li>Clone the repo: <code>git clone https://github.com/nuno-faria/tiler.git</code>;</li><li>Install Python 3;</li><li>Install pip (optional, to install the dependencies);</li><li>Install dependencies: <code>pip install -r requirements.txt</code></li></ul><h3 id="usage"><a class="markdownIt-Anchor" href="#usage"></a> Usage</h3><ul><li>Make a folder with the tiles (and only the tiles) to build the image;<ul><li>The script <code>gen_tiles.py</code> can help in this task; it builds tiles with multiple colors based on the source tile (note: its recommended for the source file to have an RGB color of (240,240,240)). It is used as <code>python gen_tiles.py path/to/image</code> and creates a folder with a ‘gen_’ prefix in the same path as the base image.</li></ul></li><li>Run <code>python tiler.py path/to/image path/to/tiles_folder/</code>.</li></ul><h3 id="configuration"><a class="markdownIt-Anchor" href="#configuration"></a> Configuration</h3><p>All configurations can be changed in the <code>conf.py</code> file.</p><h4 id="gen_tilespy"><a class="markdownIt-Anchor" href="#gen_tilespy"></a> <code>gen_tiles.py</code></h4><ul><li><code>DEPTH</code> - number of divisions in each color channel (ex: DEPTH = 4 -&gt; 4 * 4 * 4 = 64 colors);</li><li><code>ROTATIONS</code> - list of rotations, in degrees, to apply over the original image (ex: [0, 90]).</li></ul><h4 id="tilerpy"><a class="markdownIt-Anchor" href="#tilerpy"></a> <code>tiler.py</code></h4><ul><li><code>COLOR_DEPTH</code> - number of divisions in each color channel (ex: COLOR_DEPTH = 4 -&gt; 4 * 4 * 4 = 64 colors);</li><li><code>RESIZING_SCALES</code> - scale to apply to each tile (ex: [1, 0.75, 0.5, 0.25]);</li><li><code>PIXEL_SHIFT</code> - number of pixels shifted to create each box (ex: (5,5)); if None, shift will be the same as the tile dimension);<br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/nuno-faria/tiler@master/images/pixel_shift.png" width="100%"></li><li><code>OVERLAP_TILES</code> - if tiles can overlap;</li><li><code>RENDER</code> - render image as its being built;</li><li><code>POOL_SIZE</code> - multiprocessing pool size;</li><li><code>IMAGE_TO_TILE</code> - image to tile (ignored if passed as the 1st arg);</li><li><code>TILES_FOLDER</code> - folder with tiles (ignored if passed as the 2nd arg);</li><li><code>OUT</code> - result image filename.</li></ul><h3 id="examples"><a class="markdownIt-Anchor" href="#examples"></a> Examples</h3><h4 id="circles"><a class="markdownIt-Anchor" href="#circles"></a> Circles</h4><h5 id="various-sizes"><a class="markdownIt-Anchor" href="#various-sizes"></a> Various sizes</h5><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/nuno-faria/tiler@master/images/cake_circles.png" width="40%"><p><a href="https://www.flaticon.com/free-icon/cake_1102780">Original</a> cake image by <a href="https://www.flaticon.com/authors/pongsakornred">pongsakornred</a> from <a href="https://www.flaticon.com">FLATICON</a>.</p><h5 id="fixed"><a class="markdownIt-Anchor" href="#fixed"></a> Fixed</h5><ul><li>10x10<br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/nuno-faria/tiler@master/images/cake_circles_simple.png" width="40%"><br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/nuno-faria/tiler@master/images/starry_night_circles_10x10.png" width="100%"></li><li>25x25<br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/nuno-faria/tiler@master/images/starry_night_circles_25x25.png" width="100%"></li><li>50x50<br /><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/nuno-faria/tiler@master/images/starry_night_circles_50x50.png" width="100%"></li></ul><h4 id="paper-clips"><a class="markdownIt-Anchor" href="#paper-clips"></a> Paper clips</h4><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/nuno-faria/tiler@master/images/cake_clips.png" width="40%"><h4 id="cross-stitch-times"><a class="markdownIt-Anchor" href="#cross-stitch-times"></a> Cross stitch (times)</h4><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/nuno-faria/tiler@master/images/cake_times.png" width="40%"><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/nuno-faria/tiler@master/images/starry_night_times.png" width="100%"><h4 id="hearts"><a class="markdownIt-Anchor" href="#hearts"></a> Hearts</h4><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/nuno-faria/tiler@master/images/heart_hearts.png" width="40%"><h4 id="legos"><a class="markdownIt-Anchor" href="#legos"></a> Legos</h4><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/nuno-faria/tiler@master/images/cake_lego.png" width="40%"><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/nuno-faria/tiler@master/images/starry_night_lego.png" width="100%"><h4 id="minecraft-blocks"><a class="markdownIt-Anchor" href="#minecraft-blocks"></a> Minecraft blocks</h4><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/nuno-faria/tiler@master/images/cake_minecraft.png" width="40%"><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/nuno-faria/tiler@master/images/starry_night_minecraft.png" width="100%"><h4 id="stripes-lines"><a class="markdownIt-Anchor" href="#stripes-lines"></a> Stripes (lines)</h4><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/nuno-faria/tiler@master/images/cake_stripes.png" width="50%"><h4 id="at"><a class="markdownIt-Anchor" href="#at"></a> At</h4><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/nuno-faria/tiler@master/images/github_logo_at.png" width="50%"><h2 id="hironsanbosssensor"><a class="markdownIt-Anchor" href="#hironsanbosssensor"></a> Hironsan/BossSensor</h2><blockquote><p>Hide screen when boss is approaching.</p></blockquote><p><a href="https://github.com/Hironsan/BossSensor">BossSensor</a></p><h3 id="bosssensor"><a class="markdownIt-Anchor" href="#bosssensor"></a> BossSensor</h3><p>Hide your screen when your boss is approaching.</p><h4 id="demo"><a class="markdownIt-Anchor" href="#demo"></a> Demo</h4><p>The boss stands up. He is approaching.</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Hironsan/BossSensor@master/resource_for_readme/standup.jpg" alt="standup" /></p><p>When he is approaching, the program fetches face images and classifies the image.</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Hironsan/BossSensor@master/resource_for_readme/approach.jpg" alt="approaching" /></p><p>If the image is classified as the Boss, it will monitor changes.</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Hironsan/BossSensor@master/resource_for_readme/editor.jpg" alt="editor" /></p><h4 id="requirements"><a class="markdownIt-Anchor" href="#requirements"></a> Requirements</h4><ul><li>WebCamera</li><li>Python3.5</li><li>OSX</li><li>Anaconda</li><li>Lots of images of your boss and other person image</li></ul><p>Put images into <a href="https://cdn.jsdelivr.net/gh/Hironsan/BossSensor/tree/master/data/boss">data/boss</a> and <a href="https://github.com/Hironsan/BossSensor/tree/master/data/other">data/other</a>.</p><h4 id="usage-2"><a class="markdownIt-Anchor" href="#usage-2"></a> Usage</h4><p>First, Train boss image.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python boss_train.py</span><br></pre></td></tr></table></figure><p>Second, start BossSensor.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python camera_reader.py</span><br></pre></td></tr></table></figure><h4 id="install"><a class="markdownIt-Anchor" href="#install"></a> Install</h4><p>Install OpenCV, PyQt4, Anaconda.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">conda create -n venv python&#x3D;3.5</span><br><span class="line">source activate venv</span><br><span class="line">conda install -c https:&#x2F;&#x2F;conda.anaconda.org&#x2F;menpo opencv3</span><br><span class="line">conda install -c conda-forge tensorflow</span><br><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure><p>Change Keras backend from Theano to TensorFlow.</p><h4 id="licence"><a class="markdownIt-Anchor" href="#licence"></a> Licence</h4><p><a href="https://github.com/Hironsan/BossSensor/blob/master/LICENSE">MIT</a></p><h4 id="author-2"><a class="markdownIt-Anchor" href="#author-2"></a> Author</h4><p><a href="https://github.com/Hironsan">Hironsan</a></p><h2 id="vipstonefaceai"><a class="markdownIt-Anchor" href="#vipstonefaceai"></a> vipstone/faceai</h2><blockquote><p>一款入门级的人脸、视频、文字检测以及识别的项目.</p></blockquote><p><a href="https://github.com/vipstone/faceai">vipstone/faceai</a></p><h3 id="功能"><a class="markdownIt-Anchor" href="#功能"></a> 功能</h3><ol><li>人脸检测、识别（图片、视频）</li><li>轮廓标识</li><li>头像合成（给人戴帽子）</li><li>数字化妆（画口红、眉毛、眼睛等）</li><li>性别识别</li><li>表情识别（生气、厌恶、恐惧、开心、难过、惊喜、平静等七种情绪）</li><li>视频对象提取</li><li>图片修复（可用于水印去除）</li><li>图片自动上色</li><li>眼动追踪（待完善）</li><li>换脸（待完善）</li></ol><p><strong>查看功能预览↓↓↓</strong></p><h3 id="开发环境"><a class="markdownIt-Anchor" href="#开发环境"></a> 开发环境</h3><ul><li>Windows 10（x64）</li><li>Python 3.6.4</li><li>OpenCV 3.4.1</li><li>Dlib 19.8.1</li><li>face_recognition 1.2.2</li><li>keras 2.1.6</li><li>tensorflow 1.8.0</li><li>Tesseract OCR 4.0.0-beta.1</li></ul><h3 id="教程"><a class="markdownIt-Anchor" href="#教程"></a> 教程</h3><p><a href="doc/settingup.md">OpenCV环境搭建</a></p><p><a href="doc/tesseractOCR.md">Tesseract OCR文字识别</a></p><p><a href="doc/detectionOpenCV.md">图片人脸检测（OpenCV版）</a></p><p><a href="doc/detectionDlib.md">图片人脸检测（Dlib版）</a></p><p><a href="doc/videoOpenCV.md">视频人脸检测（OpenCV版）</a></p><p><a href="doc/videoDlib.md">视频人脸检测（Dlib版）</a></p><p><a href="doc/faceRecognitionOutline.md">脸部轮廓绘制</a></p><p><a href="doc/faceRecognitionMakeup.md">数字化妆</a></p><p><a href="doc/faceRecognition.md">视频人脸识别</a></p><p><a href="doc/compose.md">头像特效合成</a></p><p><a href="doc/gender.md">性别识别</a></p><p><a href="doc/emotion.md">表情识别</a></p><p><a href="https://github.com/vipstone/faceai/blob/master/doc/hsv-opencv.md">视频对象提取</a></p><p><a href="https://github.com/vipstone/faceai/blob/master/doc/inpaint.md">图片修复</a></p><h3 id="其他教程"><a class="markdownIt-Anchor" href="#其他教程"></a> 其他教程</h3><p><a href="doc/ubuntuChange.md">Ubuntu apt-get和pip源更换</a></p><p><a href="doc/pipChange.md">pip/pip3更换国内源——Windows版</a></p><p><a href="doc/chinese.md">OpenCV添加中文</a></p><p><a href="https://github.com/vipstone/faceai/blob/master/doc/opencv/mouse.md">使用鼠标绘图——OpenCV</a></p><h3 id="功能预览"><a class="markdownIt-Anchor" href="#功能预览"></a> 功能预览</h3><p><strong>绘制脸部轮廓</strong></p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/vipstone/faceai@master/res/face_recognition-outline.png" width = "250" height = "300" alt="绘制脸部轮廓" /><hr /><p><strong>人脸68个关键点标识</strong></p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/vipstone/faceai@master/res/dlib68.png" width = "230" height = "300" alt="人脸68个关键点标识" /><hr /><p><strong>头像特效合成</strong></p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/vipstone/faceai@master/res/compose.png" width = "200" height = "300" alt="头像特效合成"  /><hr /><p><strong>性别识别</strong></p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/vipstone/faceai@master/res/gender.png" width = "430" height = "220" alt="性别识别"  /><hr /><p><strong>表情识别</strong></p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/vipstone/faceai@master/res/emotion.png" width = "250" height = "300" alt="表情识别"  /><hr /><p><strong>数字化妆</strong></p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/vipstone/faceai@master/res/faceRecognitionMakeup-1.png" width = "450" height = "300" alt="视频人脸识别"  /><hr /><p><strong>视频人脸检测</strong></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/vipstone/faceai@master/res/video-jiance.gif" alt="" /></p><hr /><p><strong>视频人脸识别</strong></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/vipstone/faceai@master/res/faceRecognition.gif" alt="" /></p><hr /><p><strong>视频人脸识别</strong></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="http://icdn.apigo.cn/opencv-hsv.gif" alt="" /></p><hr /><p><strong>图片修复</strong></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="http://icdn.apigo.cn/inpaint.png?2" alt="" /></p><hr /><p><strong>图片自动上色</strong></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="http://icdn.apigo.cn/colorize-faceai.png" alt="" /></p><hr /><h3 id="技术方案"><a class="markdownIt-Anchor" href="#技术方案"></a> 技术方案</h3><p>技术实现方案介绍</p><pre><code>人脸识别：OpenCV / Dlib人脸检测：face_recognition性别识别：keras + tensorflow文字识别：Tesseract OCR</code></pre><h4 id="todo"><a class="markdownIt-Anchor" href="#todo"></a> TODO</h4><p>换脸——待完善</p><p>眼睛移动方向检测——待完善</p><p>Dlib性能优化方案</p><p>Dlib模型训练方法</p><p>Tesseract模型训练方法</p><h2 id="youyuge34anime-inpainting"><a class="markdownIt-Anchor" href="#youyuge34anime-inpainting"></a> youyuge34/Anime-InPainting</h2><blockquote><p>An application tool of edge-connect, which can do anime inpainting and drawing. 动漫人物图片自动修复，去马赛克，填补，去瑕疵</p></blockquote><p><a href="https://github.com/youyuge34/Anime-InPainting">youyuge34/Anime-InPainting</a></p><p>Anime-InPainting: An application Tool based on <a href="https://github.com/knazeri/edge-connect">Edge-Connect</a></p><p align="left">    <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://img.shields.io/badge/version-0.2-brightgreen.svg?style=flat-square" alt="Version">    <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://img.shields.io/badge/status-Release-gold.svg?style=flat-square" alt="Status">    <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://img.shields.io/badge/platform-win | linux-lightgrey.svg?style=flat-square" alt="Platform">    <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://img.shields.io/badge/PyTorch version-1.0-blue.svg?style=flat-square" alt="PyTorch">    <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://img.shields.io/badge/License-CC BY·NC 4.0-green.svg?style=flat-square" alt="License"></p><hr><h3 id="重要"><a class="markdownIt-Anchor" href="#重要"></a> 重要</h3><p><strong>2019.3.27 更新:</strong><br />我们的最新模型 <a href="https://github.com/youyuge34/PI-REC">PI-REC</a> 更强大.<br />如果你想用最新的AI绘画黑科技，而非仅仅是修补图像，请点击上面的链接👆</p><hr><h3 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h3><p>Tool效果看上面👆 | Bilibili视频教程：TO DO</p><p>这是图像修补方向最新研究成果<a href="https://github.com/knazeri/edge-connect">Edge-Connect</a>的<s>阿姆斯特朗氮气加速魔改</s>（优化）版。<br />用<code>Opencv</code>写了个前端部分，后端是<a href="https://github.com/knazeri/edge-connect">Edge-Connect</a>，方便当作工具使用。<br />此工具可以用来自动图像修补，去马赛克……同样优化了模型训练的过程。具体优化内容请看<a href="#improve">英文版Improvements</a>。</p><p>更新：<a href="https://github.com/youyuge34/Anime-InPainting/blob/master/training_manual.md#jump_zh">训练手册</a>已经填坑完发布了！你可以照着指南训练自己数据集了~</p><h3 id="基础环境"><a class="markdownIt-Anchor" href="#基础环境"></a> 基础环境</h3><ul><li>Python 3</li><li>PyTorch <code>1.0</code> (<code>0.4</code> 会报错)</li><li>NVIDIA GPU + CUDA cuDNN （当前版本已可选cpu，请修改<code>config.yml</code>中的<code>DEVICE</code>）</li></ul><h3 id="第三方库安装"><a class="markdownIt-Anchor" href="#第三方库安装"></a> 第三方库安装</h3><ul><li>Clone this repo</li><li>安装PyTorch和torchvision --&gt; <a href="http://pytorch.org">http://pytorch.org</a></li><li>安装 python requirements:</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure><h3 id="运行tool"><a class="markdownIt-Anchor" href="#运行tool"></a> 运行Tool</h3><p>教练！我有个大胆的想法🈲……别急，一步步来：</p><p><strong>注意：以下模型是在动漫头像数据集上训练的，所以对动漫全身大图修补效果一般，想自己再训练的参考下面的训练指南</strong></p><ol><li>下训练好的模型文件 --&gt; <a href="https://drive.google.com/file/d/12I-K7GQEXEL_rEOVJnRv7ecVHyuZE-1-/view?usp=sharing">Google Drive</a> | <a href="https://pan.baidu.com/s/1WkeRtYViGGGw4fUqPo3nsg">Baidu</a></li><li>解压 <code>.7z</code> 放到你的根目录下.<br />确保你的目录现在是这样: <code>./model/getchu/&lt;xxxxx.pth&gt;</code></li><li>完成上面的基础环境和第三方库安装步骤</li><li>(可选) 检查并编辑 <code>./model/getchu/config.yml</code> 配置文件</li><li>使用以下命令运行：</li></ol><h4 id="默认tool"><a class="markdownIt-Anchor" href="#默认tool"></a> 默认Tool:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python tool_patch.py --path model/getchu/</span><br></pre></td></tr></table></figure><h4 id="带edge编辑窗口的tool"><a class="markdownIt-Anchor" href="#带edge编辑窗口的tool"></a> 带Edge编辑窗口的Tool:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python tool_patch.py --edge --path model/getchu/</span><br></pre></td></tr></table></figure><h4 id="命令行参数帮助"><a class="markdownIt-Anchor" href="#命令行参数帮助"></a> 命令行参数帮助</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python tool_patch.py -h</span><br></pre></td></tr></table></figure><blockquote><p>PS. 你也能用tool跑别的任何模型，在这里下载原作更多模型<a href="https://github.com/knazeri/edge-connect">Edge-Connect</a>.<br />文件组织方式参考上面，其余运行命令都一样。唯一注意的是这个项目的 <code>config.yml</code> 比原作的多了几个选项，报错了的话注意修改。</p></blockquote><h3 id="tool操作指南"><a class="markdownIt-Anchor" href="#tool操作指南"></a> Tool操作指南</h3><p>详细内容请翻看控制台的打印内容，或查看<code>tool_patch.py</code>里的<code>__doc__</code><br />简略版tool使用指南：</p><table><thead><tr><th>按键</th><th>说明</th></tr></thead><tbody><tr><td>鼠标左键</td><td>Input窗口：画出瑕疵区域的遮盖，Edge窗口：手动画边缘</td></tr><tr><td>鼠标右键</td><td>Edge窗口：橡皮擦</td></tr><tr><td>按键 <code>[</code></td><td>笔刷变细 （控制台打印粗细大小）</td></tr><tr><td>按键 <code>]</code></td><td>笔刷变粗</td></tr><tr><td>按键 <code>0</code></td><td>Todo</td></tr><tr><td>按键 <code>1</code></td><td>Todo</td></tr><tr><td>按键 <code>n</code></td><td>修补黑色涂抹区域，只使用一张输入图片</td></tr><tr><td>按键 <code>e</code></td><td>修补黑色涂抹区域，使用输入图片和边缘图片（仅当edge窗口启动时有效）</td></tr><tr><td>按键 <code>r</code></td><td>全部重置</td></tr><tr><td>按键 <code>s</code></td><td>保存输出图片</td></tr><tr><td>按键 <code>q</code></td><td>退出</td></tr></tbody></table><h3 id="训练指南"><a class="markdownIt-Anchor" href="#训练指南"></a> 训练指南</h3><p>训练指南 --&gt; <a href="https://github.com/youyuge34/Anime-InPainting/blob/master/training_manual.md#jump_zh">阅读</a></p><h3 id="feature-matching特征匹配"><a class="markdownIt-Anchor" href="#feature-matching特征匹配"></a> Feature Matching(特征匹配)</h3><ul><li>对水印模板图片进行了一些初始化处理，比如二值化后去除非文字部分等</li><li>尝试了 OpenCV 的多种算法<ul><li>比如 ORB + Brute-Force，即蛮力匹配，对应 cv2.BFMatcher() 方法</li><li>比如 SIFT + FLANN，即快速最近邻匹配，对应 cv2.BFMatcher() 方法</li><li>比如 Template Matching，即模板匹配，对应 cv2.matchTemplate() 方法</li></ul></li><li>最后发现 Template Matching 最简单方便，效果也最好。</li><li>如果水印位置固定的话则可以跳过Feature Matching(特征匹配)，直接进行下一步的Inpainting(图片修复)</li></ul><h3 id="inpainting图片修复"><a class="markdownIt-Anchor" href="#inpainting图片修复"></a> Inpainting(图片修复)</h3><ul><li>修复图片前需要做一些前置处理<ul><li>首先要得到图片的去水印 Mask 图片，即和待处理图片一样大小的除了水印部分的文字部分外其他部分全部是黑色的位图</li><li>因为前面对水印做了二值化等处理，最终效果发现会有水印轮廓，所以需要对 Mask 图片做一次膨胀处理覆盖掉轮廓</li></ul></li><li>选用了Telea在2004年提出的Telea算法，即基于快速行进（FMM）的修复算法<ul><li>对应 cv2.inpaint(img, mask, 5, cv2.INPAINT_TELEA)</li><li>对应论文：<a href="http://www.cs.rug.nl/~alext/PAPERS/JGT04/paper.pdf">An Image Inpainting Technique Based on the Fast Marching Method (2004)</a></li></ul></li></ul><h3 id="todo-2"><a class="markdownIt-Anchor" href="#todo-2"></a> Todo</h3><ul><li>由于某些图片的水印和背景图片相似程度太高，如何提高水印位置的识别正确率</li><li>改进修复图片算法，可以考虑用深度学习来做做看？</li><li>Google CVPR 2017, <a href="https://watermark-cvpr17.github.io">《On the Effectiveness of Visible Watermarks》</a>这个据说很牛的，回头可以读一读</li></ul><h4 id="license"><a class="markdownIt-Anchor" href="#license"></a> License</h4><p><a href="https://tldrlegal.com/license/mit-license">MIT</a></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> opencv </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于博客文章加密的设计</title>
      <link href="post/about-document-encrypt.html"/>
      <url>post/about-document-encrypt.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>目前开源的博客框架很多种,从架构来分,大致分为两种<br />一种生成纯静态页面的无后台博客(例如 hexo,vuepress 等)<br />另一种是用户后台管理的博客框架(例如 wordpress,typecho 等)</p></blockquote><p>本文主要以 hexo(或者静态 html 博客) 为主</p><h2 id="什么是-hexo"><a class="markdownIt-Anchor" href="#什么是-hexo"></a> 什么是 Hexo</h2><blockquote><p>如果你不知道什么是 <code>Hexo</code>,这篇文章同样适合你,本文主要讨论如何实现对博客文章加密。<code>hexo</code> 最终也是生成静态对 html 文件。</p></blockquote><p><code>Hexo</code> 是一个快速、简洁且高效的博客框架。</p><p><code>Hexo</code> 的特点:</p><ul><li><strong>超快速度</strong> - Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。</li><li><strong>支持 Markdown</strong> - <code>Hexo</code> 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 <code>Octopress</code> 的大多数插件。</li><li><strong>一键部署</strong> - 只需一条指令即可部署到 GitHub Pages, Heroku 或其他平台。</li><li><strong>插件和可扩展性</strong> - 强大的 API 带来无限的可能，与数种模板引擎（EJS，Pug，Nunjucks）和工具（Babel，PostCSS，Less/Sass）轻易集成</li></ul><h1 id="加密方式"><a class="markdownIt-Anchor" href="#加密方式"></a> 加密方式</h1><h2 id="无后台"><a class="markdownIt-Anchor" href="#无后台"></a> 无后台</h2><blockquote><p>你可能没有自己的域名,可能没有自己的服务器,你只是使用了 (Github,Gitlab,Coding,Gitee 等) Pages 服务。</p></blockquote><h3 id="伪加密"><a class="markdownIt-Anchor" href="#伪加密"></a> 伪加密</h3><blockquote><p>第一种加密方式,我叫它伪加密,正如它的名字,它不是真正的加密,只是做了一个伪装。</p></blockquote><p>所谓实现方式,就是在文章前面加上一个遮罩层,待输入正确的密码,再将遮罩层隐藏。</p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="http://ww4.sinaimg.cn/large/6af89bc8gw1f8pz61bw7zj2064064t8s.jpg" alt="" /></p><p>你可能会说:“你是在逗我吗?稍微懂点技术的人,分分钟就能破解了”。</p><p>所以这种加密方式只适用于,非技术内博客,且对安全性要求不高(感觉这种&quot;加密&quot;基本没什么X用)</p><h3 id="绝对加密"><a class="markdownIt-Anchor" href="#绝对加密"></a> 绝对加密</h3><blockquote><p>这种方式相对来说很安全了,先说一下加密过程:</p></blockquote><ol><li>对原始密码(password)进行非对称加密(假设用 Md5) <code>md5Password = md5(password)</code>,生成 md5Password</li><li>使用原始密码对文章 html 文本进行对称加密(假设使用 DES)</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">DESHtml = CryptoJS.DES.encrypt(</span><br><span class="line">    html, CryptoJS.enc.Utf8.parse(password),</span><br><span class="line">    &#123;</span><br><span class="line">        mode: CryptoJS.mode.ECB,</span><br><span class="line">        padding: CryptoJS.pad.Pkcs7</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><blockquote><p>解密过程:</p></blockquote><ol><li>对用户输入的密码进行校验,得到正确的明文密码(password)</li><li>使用 DES 算法解密得到 html文本</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">html = CryptoJS.DES.decrypt(message, password, &#123;</span><br><span class="line">        mode: CryptoJS.mode.ECB,</span><br><span class="line">        padding: CryptoJS.pad.Pkcs7</span><br><span class="line">    &#125;).toString(CryptoJS.enc.Utf8);</span><br></pre></td></tr></table></figure><ol start="3"><li>将得到的 html 渲染到 dom 中。</li></ol><blockquote><p>可以这种方式已经是很安全了,为了增加安全性,我们可以对加密算法进行优化(比如对 md5 算法加 salt)</p></blockquote><h2 id="有后台"><a class="markdownIt-Anchor" href="#有后台"></a> 有后台</h2><blockquote><p>有后台就很好办了,想怎么玩就怎么玩,让用户登录也好,输入密码也好</p></blockquote><h3 id="伪加密升级版"><a class="markdownIt-Anchor" href="#伪加密升级版"></a> 伪加密升级版</h3><blockquote><p>将伪加密的 dom 交由后台管理,调用后台接口,验证通过返回 html,再渲染到 dom 中即可<br />但是这种方式实现起来复杂,增加部署成本</p></blockquote><p>需要将文章的 html 从静态文件中抽取出来保存到数据库(数据库中至少还要包括 密码,url等信息),<br />然后为这些 html 增加 请求后台接口的代码。<br />至于静态文章可以部署到 Pages 服务中.</p><h3 id="过滤器拦截"><a class="markdownIt-Anchor" href="#过滤器拦截"></a> 过滤器拦截</h3><blockquote><p>这种方式可以对文章进行分类,对于需要加密对文章放在统一对 url 下,通过 url 进行拦截过滤,验证密码或者验证身份.<br />同样是使用原始对静态文件,只是由 web 服务器控制访问。</p></blockquote><p>这种方式部署方式不变,一般都是 ftp 上传到个人服务器。</p><hr /><p>当然还有很多方式实现加密,还有一些实现起来太复杂,对于有需要对博客加密的胖友可以拿来参考。</p>]]></content>
      
      
      <categories>
          
          <category> other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> encrypt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github 上的学习资源</title>
      <link href="post/github-learning.html"/>
      <url>post/github-learning.html</url>
      
        <content type="html"><![CDATA[<p>统计一些 github 上的学习资源,感觉对你有帮助的朋友,可以给我一个 star🌟. Github仓库地址:<a href="https://github.com/hvnobug/awesome-learning">hvnobug/awesome-learning</a></p><h1 id="javakotlin"><a class="markdownIt-Anchor" href="#javakotlin"></a> Java/Kotlin</h1><h2 id="基础面试算法"><a class="markdownIt-Anchor" href="#基础面试算法"></a> 基础/面试/算法</h2><div style="display: flex;flex-direction: row;justify-content: flex-start;flex-wrap: wrap;">            <a href="https://github.com/DuGuQiuBai/Java" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=DuGuQiuBai&repo=Java" alt="Java"/>            </a>            <a href="https://github.com/doocs/advanced-java" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=doocs&repo=advanced-java" alt="advanced-java"/>            </a>            <a href="https://github.com/Snailclimb/JavaGuide" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=Snailclimb&repo=JavaGuide" alt="JavaGuide"/>            </a>            <a href="https://github.com/JackChan1999/Kotlin-Tutorials" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=JackChan1999&repo=Kotlin-Tutorials" alt="Kotlin-Tutorials"/>            </a>            <a href="https://github.com/JackyAndroid/AndroidInterview-Q-A" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=JackyAndroid&repo=AndroidInterview-Q-A" alt="AndroidInterview-Q-A"/>            </a>            <a href="https://github.com/crossoverJie/JCSprout" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=crossoverJie&repo=JCSprout" alt="JCSprout"/>            </a>            <a href="https://github.com/AweiLoveAndroid/CommonDevKnowledge" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=AweiLoveAndroid&repo=CommonDevKnowledge" alt="CommonDevKnowledge"/>            </a>            <a href="https://github.com/Blankj/awesome-java-leetcode" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=Blankj&repo=awesome-java-leetcode" alt="awesome-java-leetcode"/>            </a>            <a href="https://github.com/heibaiying/BigData-Notes" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=heibaiying&repo=BigData-Notes" alt="BigData-Notes"/>            </a>            <a href="https://github.com/ZXZxin/ZXBlog" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=ZXZxin&repo=ZXBlog" alt="ZXBlog"/>            </a>            <a href="https://github.com/iluwatar/java-design-patterns" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=iluwatar&repo=java-design-patterns" alt="java-design-patterns"/>            </a>            <a href="https://github.com/AobingJava/JavaFamily" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=AobingJava&repo=JavaFamily" alt="JavaFamily"/>            </a></div><h2 id="进阶博客笔记"><a class="markdownIt-Anchor" href="#进阶博客笔记"></a> 进阶/博客/笔记</h2><div style="display: flex;flex-direction: row;justify-content: flex-start;flex-wrap: wrap;">            <a href="https://github.com/francistao/LearningNotes" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=francistao&repo=LearningNotes" alt="LearningNotes"/>            </a>            <a href="https://github.com/hollischuang/toBeTopJavaer" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=hollischuang&repo=toBeTopJavaer" alt="toBeTopJavaer"/>            </a>            <a href="https://github.com/javagrowing/JGrowing" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=javagrowing&repo=JGrowing" alt="JGrowing"/>            </a>            <a href="https://github.com/qiurunze123/miaosha" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=qiurunze123&repo=miaosha" alt="miaosha"/>            </a>            <a href="https://github.com/mqyqingfeng/Blog" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=mqyqingfeng&repo=Blog" alt="Blog"/>            </a></div><h2 id="spring系列"><a class="markdownIt-Anchor" href="#spring系列"></a> Spring系列</h2><div style="display: flex;flex-direction: row;justify-content: flex-start;flex-wrap: wrap;">            <a href="https://github.com/spring-projects/spring-data-examples" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=spring-projects&repo=spring-data-examples" alt="spring-data-examples"/>            </a>            <a href="https://github.com/ityouknow/spring-boot-examples" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=ityouknow&repo=spring-boot-examples" alt="spring-boot-examples"/>            </a>            <a href="https://github.com/seaswalker/spring-analysis" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=seaswalker&repo=spring-analysis" alt="spring-analysis"/>            </a>            <a href="https://github.com/dyc87112/SpringBoot-Learning" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=dyc87112&repo=SpringBoot-Learning" alt="SpringBoot-Learning"/>            </a>            <a href="https://github.com/JeffLi1993/springboot-learning-example" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=JeffLi1993&repo=springboot-learning-example" alt="springboot-learning-example"/>            </a>            <a href="https://github.com/forezp/SpringCloudLearning" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=forezp&repo=SpringCloudLearning" alt="SpringCloudLearning"/>            </a>            <a href="https://github.com/dyc87112/SpringCloud-Learning" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=dyc87112&repo=SpringCloud-Learning" alt="SpringCloud-Learning"/>            </a>            <a href="https://github.com/wuyouzhuguli/SpringAll" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=wuyouzhuguli&repo=SpringAll" alt="SpringAll"/>            </a>            <a href="https://github.com/ityouknow/spring-cloud-examples" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=ityouknow&repo=spring-cloud-examples" alt="spring-cloud-examples"/>            </a>            <a href="https://github.com/YunaiV/SpringBoot-Labs" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=YunaiV&repo=SpringBoot-Labs" alt="SpringBoot-Labs"/>            </a>            <a href="https://github.com/xkcoding/spring-boot-demo" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=xkcoding&repo=spring-boot-demo" alt="spring-boot-demo"/>            </a></div><h2 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h2><div style="display: flex;flex-direction: row;justify-content: flex-start;flex-wrap: wrap;">            <a href="https://github.com/DuGuQiuBai/Java" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=DuGuQiuBai&repo=Java" alt="Java"/>            </a>            <a href="https://github.com/jobbole/awesome-java-cn" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=jobbole&repo=awesome-java-cn" alt="awesome-java-cn"/>            </a>            <a href="https://github.com/zhanglei-workspace/shopping-management-system" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=zhanglei-workspace&repo=shopping-management-system" alt="shopping-management-system"/>            </a>            <a href="https://github.com/zhisheng17/flink-learning" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=zhisheng17&repo=flink-learning" alt="flink-learning"/>            </a>            <a href="https://github.com/huanglizhuo/kotlin-in-chinese" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=huanglizhuo&repo=kotlin-in-chinese" alt="kotlin-in-chinese"/>            </a>            <a href="https://github.com/2227324689/gpmall" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=2227324689&repo=gpmall" alt="gpmall"/>            </a>            <a href="https://github.com/macrozheng/mall-learning" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=macrozheng&repo=mall-learning" alt="mall-learning"/>            </a>            <a href="https://github.com/winterbe/java8-tutorial" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=winterbe&repo=java8-tutorial" alt="java8-tutorial"/>            </a></div><h1 id="大数据"><a class="markdownIt-Anchor" href="#大数据"></a> 大数据</h1><div style="display: flex;flex-direction: row;justify-content: flex-start;flex-wrap: wrap;">            <a href="https://github.com/shijinkui/spark_study" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=shijinkui&repo=spark_study" alt="spark_study"/>            </a>            <a href="https://github.com/zhisheng17/flink-learning" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=zhisheng17&repo=flink-learning" alt="flink-learning"/>            </a>            <a href="https://github.com/wangzhiwubigdata/God-Of-BigData" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=wangzhiwubigdata&repo=God-Of-BigData" alt="God-Of-BigData"/>            </a>            <a href="https://github.com/weiweifan/Big-Data-Resources" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=weiweifan&repo=Big-Data-Resources" alt="Big-Data-Resources"/>            </a>            <a href="https://github.com/sunnyandgood/BigData" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=sunnyandgood&repo=BigData" alt="BigData"/>            </a>            <a href="https://github.com/Dr11ft/BigDataGuide" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=Dr11ft&repo=BigDataGuide" alt="BigDataGuide"/>            </a>            <a href="https://github.com/TALKDATA/JavaBigData" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=TALKDATA&repo=JavaBigData" alt="JavaBigData"/>            </a>            <a href="https://github.com/oeljeklaus-you/UserActionAnalyzePlatform" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=oeljeklaus-you&repo=UserActionAnalyzePlatform" alt="UserActionAnalyzePlatform"/>            </a></div><h1 id="htmlcss"><a class="markdownIt-Anchor" href="#htmlcss"></a> Html/Css</h1><div style="display: flex;flex-direction: row;justify-content: flex-start;flex-wrap: wrap;">            <a href="https://github.com/l-hammer/You-need-to-know-css" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=l-hammer&repo=You-need-to-know-css" alt="You-need-to-know-css"/>            </a></div><h1 id="javascript"><a class="markdownIt-Anchor" href="#javascript"></a> Javascript</h1><h2 id="react系列"><a class="markdownIt-Anchor" href="#react系列"></a> React系列</h2><div style="display: flex;flex-direction: row;justify-content: flex-start;flex-wrap: wrap;">            <a href="https://github.com/yiminghe/learning-react" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=yiminghe&repo=learning-react" alt="learning-react"/>            </a>            <a href="https://github.com/adam-golab/react-developer-roadmap" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=adam-golab&repo=react-developer-roadmap" alt="react-developer-roadmap"/>            </a>            <a href="https://github.com/jasonslyvia/a-cartoon-intro-to-redux-cn" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=jasonslyvia&repo=a-cartoon-intro-to-redux-cn" alt="a-cartoon-intro-to-redux-cn"/>            </a>            <a href="https://github.com/shimohq/react-cookbook" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=shimohq&repo=react-cookbook" alt="react-cookbook"/>            </a>            <a href="https://github.com/Juliiii/React-Cnode" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=Juliiii&repo=React-Cnode" alt="React-Cnode"/>            </a></div><h2 id="nodejs"><a class="markdownIt-Anchor" href="#nodejs"></a> Nodejs</h2><div style="display: flex;flex-direction: row;justify-content: flex-start;flex-wrap: wrap;">            <a href="https://github.com/alsotang/node-lessons" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=alsotang&repo=node-lessons" alt="node-lessons"/>            </a>            <a href="https://github.com/nqdeng/7-days-nodejs" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=nqdeng&repo=7-days-nodejs" alt="7-days-nodejs"/>            </a></div><h2 id="小程序"><a class="markdownIt-Anchor" href="#小程序"></a> 小程序</h2><div style="display: flex;flex-direction: row;justify-content: flex-start;flex-wrap: wrap;">            <a href="https://github.com/justjavac/awesome-wechat-weapp" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=justjavac&repo=awesome-wechat-weapp" alt="awesome-wechat-weapp"/>            </a></div><h2 id="其他-2"><a class="markdownIt-Anchor" href="#其他-2"></a> 其他</h2><div style="display: flex;flex-direction: row;justify-content: flex-start;flex-wrap: wrap;">            <a href="https://github.com/leonardomso/33-js-concepts" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=leonardomso&repo=33-js-concepts" alt="33-js-concepts"/>            </a>            <a href="https://github.com/30-seconds/30-seconds-of-code" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=30-seconds&repo=30-seconds-of-code" alt="30-seconds-of-code"/>            </a>            <a href="https://github.com/Platform-CUF/use-gulp" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=Platform-CUF&repo=use-gulp" alt="use-gulp"/>            </a>            <a href="https://github.com/dolymood/AngularLearning" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=dolymood&repo=AngularLearning" alt="AngularLearning"/>            </a>            <a href="https://github.com/elsewhencode/project-guidelines" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=elsewhencode&repo=project-guidelines" alt="project-guidelines"/>            </a>            <a href="https://github.com/lydiahallie/javascript-questions" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=lydiahallie&repo=javascript-questions" alt="javascript-questions"/>            </a>            <a href="https://github.com/xitu/js-stack-from-scratch" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=xitu&repo=js-stack-from-scratch" alt="js-stack-from-scratch"/>            </a>            <a href="https://github.com/wx-chevalier/Web-Series" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=wx-chevalier&repo=Web-Series" alt="Web-Series"/>            </a>            <a href="https://github.com/DMQ/mvvm" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=DMQ&repo=mvvm" alt="mvvm"/>            </a>            <a href="https://github.com/jobbole/awesome-javascript-cn" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=jobbole&repo=awesome-javascript-cn" alt="awesome-javascript-cn"/>            </a>            <a href="https://github.com/airbnb/javascript" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=airbnb&repo=javascript" alt="javascript"/>            </a></div><h1 id="typescript"><a class="markdownIt-Anchor" href="#typescript"></a> Typescript</h1><div style="display: flex;flex-direction: row;justify-content: flex-start;flex-wrap: wrap;">            <a href="https://github.com/xcatliu/typescript-tutorial" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=xcatliu&repo=typescript-tutorial" alt="typescript-tutorial"/>            </a>            <a href="https://github.com/zhongsp/TypeScript" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=zhongsp&repo=TypeScript" alt="TypeScript"/>            </a>            <a href="https://github.com/basarat/typescript-book" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=basarat&repo=typescript-book" alt="typescript-book"/>            </a></div><h1 id="python"><a class="markdownIt-Anchor" href="#python"></a> Python</h1><h2 id="基础算法面试"><a class="markdownIt-Anchor" href="#基础算法面试"></a> 基础/算法/面试</h2><div style="display: flex;flex-direction: row;justify-content: flex-start;flex-wrap: wrap;">            <a href="https://github.com/huihut/interview" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=huihut&repo=interview" alt="interview"/>            </a>            <a href="https://github.com/geekxh/hello-algorithm" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=geekxh&repo=hello-algorithm" alt="hello-algorithm"/>            </a>            <a href="https://github.com/azl397985856/leetcode" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=azl397985856&repo=leetcode" alt="leetcode"/>            </a>            <a href="https://github.com/wangzheng0822/algo" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=wangzheng0822&repo=algo" alt="algo"/>            </a>            <a href="https://github.com/jackfrued/Python-100-Days" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=jackfrued&repo=Python-100-Days" alt="Python-100-Days"/>            </a>            <a href="https://github.com/donnemartin/system-design-primer" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=donnemartin&repo=system-design-primer" alt="system-design-primer"/>            </a>            <a href="https://github.com/xianhu/LearnPython" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=xianhu&repo=LearnPython" alt="LearnPython"/>            </a>            <a href="https://github.com/qiwsir/algorithm" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=qiwsir&repo=algorithm" alt="algorithm"/>            </a>            <a href="https://github.com/taizilongxu/interview_python" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=taizilongxu&repo=interview_python" alt="interview_python"/>            </a>            <a href="https://github.com/TheAlgorithms/Python" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=TheAlgorithms&repo=Python" alt="Python"/>            </a>            <a href="https://github.com/faif/python-patterns" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=faif&repo=python-patterns" alt="python-patterns"/>            </a>            <a href="https://github.com/microsoft/c9-python-getting-started" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=microsoft&repo=c9-python-getting-started" alt="c9-python-getting-started"/>            </a></div><h2 id="opencv"><a class="markdownIt-Anchor" href="#opencv"></a> OpenCV</h2><div style="display: flex;flex-direction: row;justify-content: flex-start;flex-wrap: wrap;">            <a href="https://github.com/1zlab/1ZLAB_OpenCV_Tutorial" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=1zlab&repo=1ZLAB_OpenCV_Tutorial" alt="1ZLAB_OpenCV_Tutorial"/>            </a>            <a href="https://github.com/TonyStark1997/OpenCV-Python" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=TonyStark1997&repo=OpenCV-Python" alt="OpenCV-Python"/>            </a>            <a href="https://github.com/ex2tron/OpenCV-Python-Tutorial" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=ex2tron&repo=OpenCV-Python-Tutorial" alt="OpenCV-Python-Tutorial"/>            </a>            <a href="https://github.com/QianMo/OpenCV3-Intro-Book-Src" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=QianMo&repo=OpenCV3-Intro-Book-Src" alt="OpenCV3-Intro-Book-Src"/>            </a>            <a href="https://github.com/techfort/pycv" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=techfort&repo=pycv" alt="pycv"/>            </a></div><h2 id="爬虫"><a class="markdownIt-Anchor" href="#爬虫"></a> 爬虫</h2><div style="display: flex;flex-direction: row;justify-content: flex-start;flex-wrap: wrap;">            <a href="https://github.com/lining0806/PythonSpiderNotes" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=lining0806&repo=PythonSpiderNotes" alt="PythonSpiderNotes"/>            </a></div><h2 id="其他-3"><a class="markdownIt-Anchor" href="#其他-3"></a> 其他</h2><div style="display: flex;flex-direction: row;justify-content: flex-start;flex-wrap: wrap;">            <a href="https://github.com/Tim9Liu9/TimLiu-Python" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=Tim9Liu9&repo=TimLiu-Python" alt="TimLiu-Python"/>            </a>            <a href="https://github.com/jobbole/awesome-python-cn" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=jobbole&repo=awesome-python-cn" alt="awesome-python-cn"/>            </a>            <a href="https://github.com/michaelliao/awesome-python-webapp" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=michaelliao&repo=awesome-python-webapp" alt="awesome-python-webapp"/>            </a>            <a href="https://github.com/makelove/OpenCV-Python-Tutorial" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=makelove&repo=OpenCV-Python-Tutorial" alt="OpenCV-Python-Tutorial"/>            </a>            <a href="https://github.com/aosabook/500lines" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=aosabook&repo=500lines" alt="500lines"/>            </a>            <a href="https://github.com/MrKiven/PyZh" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=MrKiven&repo=PyZh" alt="PyZh"/>            </a>            <a href="https://github.com/satwikkansal/wtfpython" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=satwikkansal&repo=wtfpython" alt="wtfpython"/>            </a></div><h1 id="golang"><a class="markdownIt-Anchor" href="#golang"></a> Golang</h1><div style="display: flex;flex-direction: row;justify-content: flex-start;flex-wrap: wrap;">            <a href="https://github.com/hackstoic/golang-open-source-projects" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=hackstoic&repo=golang-open-source-projects" alt="golang-open-source-projects"/>            </a>            <a href="https://github.com/hoanhan101/ultimate-go" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=hoanhan101&repo=ultimate-go" alt="ultimate-go"/>            </a></div><h1 id="swift"><a class="markdownIt-Anchor" href="#swift"></a> Swift</h1><div style="display: flex;flex-direction: row;justify-content: flex-start;flex-wrap: wrap;">            <a href="https://github.com/SwiftGGTeam/the-swift-programming-language-in-chinese" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=SwiftGGTeam&repo=the-swift-programming-language-in-chinese" alt="the-swift-programming-language-in-chinese"/>            </a></div><h1 id="工具"><a class="markdownIt-Anchor" href="#工具"></a> 工具</h1><div style="display: flex;flex-direction: row;justify-content: flex-start;flex-wrap: wrap;">            <a href="https://github.com/jikeytang/sublime-text" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=jikeytang&repo=sublime-text" alt="sublime-text"/>            </a>            <a href="https://github.com/xirong/my-git" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=xirong&repo=my-git" alt="my-git"/>            </a>            <a href="https://github.com/phodal/github" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=phodal&repo=github" alt="github"/>            </a>            <a href="https://github.com/521xueweihan/git-tips" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=521xueweihan&repo=git-tips" alt="git-tips"/>            </a>            <a href="https://github.com/tiimgreen/github-cheat-sheet" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=tiimgreen&repo=github-cheat-sheet" alt="github-cheat-sheet"/>            </a>            <a href="https://github.com/pcottle/learnGitBranching" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=pcottle&repo=learnGitBranching" alt="learnGitBranching"/>            </a>            <a href="https://github.com/judasn/IntelliJ-IDEA-Tutorial" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=judasn&repo=IntelliJ-IDEA-Tutorial" alt="IntelliJ-IDEA-Tutorial"/>            </a>            <a href="https://github.com/wsdjeg/vim-galore-zh_cn" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=wsdjeg&repo=vim-galore-zh_cn" alt="vim-galore-zh_cn"/>            </a>            <a href="https://github.com/jaywcjlove/linux-command" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=jaywcjlove&repo=linux-command" alt="linux-command"/>            </a>            <a href="https://github.com/me115/linuxtools_rst" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=me115&repo=linuxtools_rst" alt="linuxtools_rst"/>            </a>            <a href="https://github.com/OrwillT/Visual-Studio-Code-Keymap-CN" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=OrwillT&repo=Visual-Studio-Code-Keymap-CN" alt="Visual-Studio-Code-Keymap-CN"/>            </a></div><h1 id="培训课程"><a class="markdownIt-Anchor" href="#培训课程"></a> 培训/课程</h1><div style="display: flex;flex-direction: row;justify-content: flex-start;flex-wrap: wrap;">            <a href="https://github.com/PKUanonym/REKCARC-TSC-UHT" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=PKUanonym&repo=REKCARC-TSC-UHT" alt="REKCARC-TSC-UHT"/>            </a>            <a href="https://github.com/c-hj/SJTU-Courses" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=c-hj&repo=SJTU-Courses" alt="SJTU-Courses"/>            </a>            <a href="https://github.com/USTC-Resource/USTC-Course" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=USTC-Resource&repo=USTC-Course" alt="USTC-Course"/>            </a>            <a href="https://github.com/lib-pku/libpku" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=lib-pku&repo=libpku" alt="libpku"/>            </a>            <a href="https://github.com/QSCTech/zju-icicles" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=QSCTech&repo=zju-icicles" alt="zju-icicles"/>            </a>            <a href="https://github.com/ruanyf/jstraining" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=ruanyf&repo=jstraining" alt="jstraining"/>            </a>            <a href="https://github.com/prakhar1989/awesome-courses" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=prakhar1989&repo=awesome-courses" alt="awesome-courses"/>            </a>            <a href="https://github.com/Pierian-Data/Complete-Python-3-Bootcamp" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=Pierian-Data&repo=Complete-Python-3-Bootcamp" alt="Complete-Python-3-Bootcamp"/>            </a></div><h1 id="书籍"><a class="markdownIt-Anchor" href="#书籍"></a> 书籍</h1><h2 id="javascript-2"><a class="markdownIt-Anchor" href="#javascript-2"></a> Javascript</h2><div style="display: flex;flex-direction: row;justify-content: flex-start;flex-wrap: wrap;">            <a href="https://github.com/es6-org/exploring-es6" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=es6-org&repo=exploring-es6" alt="exploring-es6"/>            </a>            <a href="https://github.com/ruanyf/es6tutorial" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=ruanyf&repo=es6tutorial" alt="es6tutorial"/>            </a>            <a href="https://github.com/huzidaha/react-naive-book" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=huzidaha&repo=react-naive-book" alt="react-naive-book"/>            </a></div><h2 id="typescript-2"><a class="markdownIt-Anchor" href="#typescript-2"></a> Typescript</h2><div style="display: flex;flex-direction: row;justify-content: flex-start;flex-wrap: wrap;">            <a href="https://github.com/jkchao/typescript-book-chinese" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=jkchao&repo=typescript-book-chinese" alt="typescript-book-chinese"/>            </a></div><h2 id="java"><a class="markdownIt-Anchor" href="#java"></a> Java</h2><div style="display: flex;flex-direction: row;justify-content: flex-start;flex-wrap: wrap;">            <a href="https://github.com/LingCoder/OnJava8" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=LingCoder&repo=OnJava8" alt="OnJava8"/>            </a>            <a href="https://github.com/sorenduan/awesome-java-books" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=sorenduan&repo=awesome-java-books" alt="awesome-java-books"/>            </a></div><h2 id="python-2"><a class="markdownIt-Anchor" href="#python-2"></a> Python</h2><div style="display: flex;flex-direction: row;justify-content: flex-start;flex-wrap: wrap;">            <a href="https://github.com/eastlakeside/interpy-zh" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=eastlakeside&repo=interpy-zh" alt="interpy-zh"/>            </a>            <a href="https://github.com/BrambleXu/pydata-notebook" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=BrambleXu&repo=pydata-notebook" alt="pydata-notebook"/>            </a>            <a href="https://github.com/ethan-funny/explore-python" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=ethan-funny&repo=explore-python" alt="explore-python"/>            </a>            <a href="https://github.com/yidao620c/python3-cookbook" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=yidao620c&repo=python3-cookbook" alt="python3-cookbook"/>            </a>            <a href="https://github.com/Prodesire/Python-Guide-CN" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=Prodesire&repo=Python-Guide-CN" alt="Python-Guide-CN"/>            </a>            <a href="https://github.com/realpython/python-guide" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=realpython&repo=python-guide" alt="python-guide"/>            </a></div><h2 id="golang-2"><a class="markdownIt-Anchor" href="#golang-2"></a> Golang</h2><div style="display: flex;flex-direction: row;justify-content: flex-start;flex-wrap: wrap;">            <a href="https://github.com/go101/go101" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=go101&repo=go101" alt="go101"/>            </a>            <a href="https://github.com/chai2010/advanced-go-programming-book" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=chai2010&repo=advanced-go-programming-book" alt="advanced-go-programming-book"/>            </a>            <a href="https://github.com/astaxie/build-web-application-with-golang" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=astaxie&repo=build-web-application-with-golang" alt="build-web-application-with-golang"/>            </a></div><h2 id="rust"><a class="markdownIt-Anchor" href="#rust"></a> Rust</h2><div style="display: flex;flex-direction: row;justify-content: flex-start;flex-wrap: wrap;">            <a href="https://github.com/KaiserY/rust-book-chinese" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=KaiserY&repo=rust-book-chinese" alt="rust-book-chinese"/>            </a></div><h2 id="shell"><a class="markdownIt-Anchor" href="#shell"></a> Shell</h2><div style="display: flex;flex-direction: row;justify-content: flex-start;flex-wrap: wrap;">            <a href="https://github.com/tinyclub/open-shell-book" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=tinyclub&repo=open-shell-book" alt="open-shell-book"/>            </a></div><h2 id="redis"><a class="markdownIt-Anchor" href="#redis"></a> Redis</h2><div style="display: flex;flex-direction: row;justify-content: flex-start;flex-wrap: wrap;">            <a href="https://github.com/huangz1990/redis" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=huangz1990&repo=redis" alt="redis"/>            </a>            <a href="https://github.com/huangz1990/redisbook" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=huangz1990&repo=redisbook" alt="redisbook"/>            </a></div><h2 id="deeplearning"><a class="markdownIt-Anchor" href="#deeplearning"></a> Deeplearning</h2><div style="display: flex;flex-direction: row;justify-content: flex-start;flex-wrap: wrap;">            <a href="https://github.com/d2l-ai/d2l-zh" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=d2l-ai&repo=d2l-zh" alt="d2l-zh"/>            </a>            <a href="https://github.com/exacity/deeplearningbook-chinese" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=exacity&repo=deeplearningbook-chinese" alt="deeplearningbook-chinese"/>            </a></div><h2 id="docker"><a class="markdownIt-Anchor" href="#docker"></a> Docker</h2><div style="display: flex;flex-direction: row;justify-content: flex-start;flex-wrap: wrap;">            <a href="https://github.com/yeasy/docker_practice" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=yeasy&repo=docker_practice" alt="docker_practice"/>            </a>            <a href="https://github.com/rootsongjc/kubernetes-handbook" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=rootsongjc&repo=kubernetes-handbook" alt="kubernetes-handbook"/>            </a></div><h2 id="其他-4"><a class="markdownIt-Anchor" href="#其他-4"></a> 其他</h2><div style="display: flex;flex-direction: row;justify-content: flex-start;flex-wrap: wrap;">            <a href="https://github.com/ruanyf/free-books" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=ruanyf&repo=free-books" alt="free-books"/>            </a>            <a href="https://github.com/DocsHome/microservices" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=DocsHome&repo=microservices" alt="microservices"/>            </a>            <a href="https://github.com/julycoding/The-Art-Of-Programming-By-July" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=julycoding&repo=The-Art-Of-Programming-By-July" alt="The-Art-Of-Programming-By-July"/>            </a>            <a href="https://github.com/justjavac/free-programming-books-zh_CN" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=justjavac&repo=free-programming-books-zh_CN" alt="free-programming-books-zh_CN"/>            </a>            <a href="https://github.com/jobbole/awesome-programming-books" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=jobbole&repo=awesome-programming-books" alt="awesome-programming-books"/>            </a>            <a href="https://github.com/flutterchina/flutter-in-action" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=flutterchina&repo=flutter-in-action" alt="flutter-in-action"/>            </a>            <a href="https://github.com/feiskyer/sdn-handbook" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=feiskyer&repo=sdn-handbook" alt="sdn-handbook"/>            </a>            <a href="https://github.com/me115/design_patterns" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=me115&repo=design_patterns" alt="design_patterns"/>            </a>            <a href="https://github.com/taobao/nginx-book" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=taobao&repo=nginx-book" alt="nginx-book"/>            </a>            <a href="https://github.com/yangyangwithgnu/the_new_world_linux" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=yangyangwithgnu&repo=the_new_world_linux" alt="the_new_world_linux"/>            </a>            <a href="https://github.com/Snowming04/The-Hacker-Playbook-3-Translation" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=Snowming04&repo=The-Hacker-Playbook-3-Translation" alt="The-Hacker-Playbook-3-Translation"/>            </a></div><h1 id="基础算法"><a class="markdownIt-Anchor" href="#基础算法"></a> 基础/算法</h1><div style="display: flex;flex-direction: row;justify-content: flex-start;flex-wrap: wrap;">            <a href="https://github.com/wangzheng0822/algo" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=wangzheng0822&repo=algo" alt="algo"/>            </a>            <a href="https://github.com/ziishaned/learn-regex" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=ziishaned&repo=learn-regex" alt="learn-regex"/>            </a>            <a href="https://github.com/tangweikun/awesome-leetcode" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=tangweikun&repo=awesome-leetcode" alt="awesome-leetcode"/>            </a>            <a href="https://github.com/MisterBooo/LeetCodeAnimation" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=MisterBooo&repo=LeetCodeAnimation" alt="LeetCodeAnimation"/>            </a>            <a href="https://github.com/labuladong/fucking-algorithm" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=labuladong&repo=fucking-algorithm" alt="fucking-algorithm"/>            </a></div><h1 id="前端"><a class="markdownIt-Anchor" href="#前端"></a> 前端</h1><div style="display: flex;flex-direction: row;justify-content: flex-start;flex-wrap: wrap;">            <a href="https://github.com/jtyjty99999/mobileTech" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=jtyjty99999&repo=mobileTech" alt="mobileTech"/>            </a>            <a href="https://github.com/AlloyTeam/Mars" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=AlloyTeam&repo=Mars" alt="Mars"/>            </a>            <a href="https://github.com/hoosin/mobile-web-favorites" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=hoosin&repo=mobile-web-favorites" alt="mobile-web-favorites"/>            </a>            <a href="https://github.com/JacksonTian/fks" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=JacksonTian&repo=fks" alt="fks"/>            </a>            <a href="https://github.com/dt-fe/weekly" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=dt-fe&repo=weekly" alt="weekly"/>            </a>            <a href="https://github.com/baidu-ife/ife" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=baidu-ife&repo=ife" alt="ife"/>            </a>            <a href="https://github.com/jnoodle/f2e-collect" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=jnoodle&repo=f2e-collect" alt="f2e-collect"/>            </a>            <a href="https://github.com/qianguyihao/Web" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=qianguyihao&repo=Web" alt="Web"/>            </a>            <a href="https://github.com/dongyuanxin/blog" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=dongyuanxin&repo=blog" alt="blog"/>            </a>            <a href="https://github.com/aliyunfe/weekly" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=aliyunfe&repo=weekly" alt="weekly"/>            </a>            <a href="https://github.com/fex-team/styleguide" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=fex-team&repo=styleguide" alt="styleguide"/>            </a>            <a href="https://github.com/ddzy/fe-necessary-book" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=ddzy&repo=fe-necessary-book" alt="fe-necessary-book"/>            </a>            <a href="https://github.com/Advanced-Frontend/Daily-Interview-Question" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=Advanced-Frontend&repo=Daily-Interview-Question" alt="Daily-Interview-Question"/>            </a>            <a href="https://github.com/storybookjs/storybook" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=storybookjs&repo=storybook" alt="storybook"/>            </a>            <a href="https://github.com/unruledboy/WebFrontEndStack" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=unruledboy&repo=WebFrontEndStack" alt="WebFrontEndStack"/>            </a>            <a href="https://github.com/haizlin/fe-interview" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=haizlin&repo=fe-interview" alt="fe-interview"/>            </a></div><h1 id="后端"><a class="markdownIt-Anchor" href="#后端"></a> 后端</h1><div style="display: flex;flex-direction: row;justify-content: flex-start;flex-wrap: wrap;">            <a href="https://github.com/xingshaocheng/architect-awesome" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=xingshaocheng&repo=architect-awesome" alt="architect-awesome"/>            </a>            <a href="https://github.com/frank-lam/fullstack-tutorial" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=frank-lam&repo=fullstack-tutorial" alt="fullstack-tutorial"/>            </a></div><h1 id="系统架构"><a class="markdownIt-Anchor" href="#系统架构"></a> 系统架构</h1><div style="display: flex;flex-direction: row;justify-content: flex-start;flex-wrap: wrap;">            <a href="https://github.com/davideuler/architecture.of.internet-product" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=davideuler&repo=architecture.of.internet-product" alt="architecture.of.internet-product"/>            </a></div><h1 id="机器学习人工智能"><a class="markdownIt-Anchor" href="#机器学习人工智能"></a> 机器学习/人工智能</h1><div style="display: flex;flex-direction: row;justify-content: flex-start;flex-wrap: wrap;">            <a href="https://github.com/trekhleb/homemade-machine-learning" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=trekhleb&repo=homemade-machine-learning" alt="homemade-machine-learning"/>            </a>            <a href="https://github.com/datawhalechina/pumpkin-book" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=datawhalechina&repo=pumpkin-book" alt="pumpkin-book"/>            </a>            <a href="https://github.com/fengdu78/Coursera-ML-AndrewNg-Notes" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=fengdu78&repo=Coursera-ML-AndrewNg-Notes" alt="Coursera-ML-AndrewNg-Notes"/>            </a>            <a href="https://github.com/madewithml/basics" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=madewithml&repo=basics" alt="basics"/>            </a>            <a href="https://github.com/apachecn/AiLearning" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=apachecn&repo=AiLearning" alt="AiLearning"/>            </a>            <a href="https://github.com/yunjey/pytorch-tutorial" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=yunjey&repo=pytorch-tutorial" alt="pytorch-tutorial"/>            </a>            <a href="https://github.com/aymericdamien/TensorFlow-Examples" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=aymericdamien&repo=TensorFlow-Examples" alt="TensorFlow-Examples"/>            </a>            <a href="https://github.com/scutan90/DeepLearning-500-questions" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=scutan90&repo=DeepLearning-500-questions" alt="DeepLearning-500-questions"/>            </a>            <a href="https://github.com/Avik-Jain/100-Days-Of-ML-Code" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=Avik-Jain&repo=100-Days-Of-ML-Code" alt="100-Days-Of-ML-Code"/>            </a>            <a href="https://github.com/josephmisiti/awesome-machine-learning" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=josephmisiti&repo=awesome-machine-learning" alt="awesome-machine-learning"/>            </a></div><h1 id="爬虫-2"><a class="markdownIt-Anchor" href="#爬虫-2"></a> 爬虫</h1><div style="display: flex;flex-direction: row;justify-content: flex-start;flex-wrap: wrap;">            <a href="https://github.com/facert/awesome-spider" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=facert&repo=awesome-spider" alt="awesome-spider"/>            </a></div><h1 id="面试"><a class="markdownIt-Anchor" href="#面试"></a> 面试</h1><div style="display: flex;flex-direction: row;justify-content: flex-start;flex-wrap: wrap;">            <a href="https://github.com/0voice/interview_internal_reference" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=0voice&repo=interview_internal_reference" alt="interview_internal_reference"/>            </a>            <a href="https://github.com/yangshun/tech-interview-handbook" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=yangshun&repo=tech-interview-handbook" alt="tech-interview-handbook"/>            </a>            <a href="https://github.com/h5bp/Front-end-Developer-Interview-Questions" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=h5bp&repo=Front-end-Developer-Interview-Questions" alt="Front-end-Developer-Interview-Questions"/>            </a>            <a href="https://github.com/kdn251/interviews" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=kdn251&repo=interviews" alt="interviews"/>            </a>            <a href="https://github.com/CyC2018/CS-Notes" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=CyC2018&repo=CS-Notes" alt="CS-Notes"/>            </a>            <a href="https://github.com/HIT-Alibaba/interview" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=HIT-Alibaba&repo=interview" alt="interview"/>            </a>            <a href="https://github.com/jwasham/coding-interview-university" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=jwasham&repo=coding-interview-university" alt="coding-interview-university"/>            </a>            <a href="https://github.com/MaximAbramchuck/awesome-interview-questions" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=MaximAbramchuck&repo=awesome-interview-questions" alt="awesome-interview-questions"/>            </a>            <a href="https://github.com/paddingme/Front-end-Web-Development-Interview-Question" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=paddingme&repo=Front-end-Web-Development-Interview-Question" alt="Front-end-Web-Development-Interview-Question"/>            </a></div><h1 id="其他-5"><a class="markdownIt-Anchor" href="#其他-5"></a> 其他</h1><div style="display: flex;flex-direction: row;justify-content: flex-start;flex-wrap: wrap;">            <a href="https://github.com/1c7/chinese-independent-developer" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=1c7&repo=chinese-independent-developer" alt="chinese-independent-developer"/>            </a>            <a href="https://github.com/sdmg15/Best-websites-a-programmer-should-visit" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=sdmg15&repo=Best-websites-a-programmer-should-visit" alt="Best-websites-a-programmer-should-visit"/>            </a>            <a href="https://github.com/ossu/computer-science" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=ossu&repo=computer-science" alt="computer-science"/>            </a>            <a href="https://github.com/kamranahmedse/developer-roadmap" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=kamranahmedse&repo=developer-roadmap" alt="developer-roadmap"/>            </a>            <a href="https://github.com/sindresorhus/awesome" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=sindresorhus&repo=awesome" alt="awesome"/>            </a>            <a href="https://github.com/LearnShare/Learning-Markdown" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=LearnShare&repo=Learning-Markdown" alt="Learning-Markdown"/>            </a>            <a href="https://github.com/niezhiyang/open_source_team" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=niezhiyang&repo=open_source_team" alt="open_source_team"/>            </a>            <a href="https://github.com/TeamStuQ/skill-map" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=TeamStuQ&repo=skill-map" alt="skill-map"/>            </a>            <a href="https://github.com/phodal/growth-in-action" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=phodal&repo=growth-in-action" alt="growth-in-action"/>            </a>            <a href="https://github.com/InterviewMap/CS-Interview-Knowledge-Map" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=InterviewMap&repo=CS-Interview-Knowledge-Map" alt="CS-Interview-Knowledge-Map"/>            </a>            <a href="https://github.com/oldratlee/useful-scripts" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=oldratlee&repo=useful-scripts" alt="useful-scripts"/>            </a>            <a href="https://github.com/chaozh/awesome-blockchain-cn" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=chaozh&repo=awesome-blockchain-cn" alt="awesome-blockchain-cn"/>            </a>            <a href="https://github.com/justjavac/awesome-wechat-weapp" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=justjavac&repo=awesome-wechat-weapp" alt="awesome-wechat-weapp"/>            </a>            <a href="https://github.com/ruanyf/weekly" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=ruanyf&repo=weekly" alt="weekly"/>            </a>            <a href="https://github.com/EZLippi/practical-programming-books" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=EZLippi&repo=practical-programming-books" alt="practical-programming-books"/>            </a>            <a href="https://github.com/mtdvio/every-programmer-should-know" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=mtdvio&repo=every-programmer-should-know" alt="every-programmer-should-know"/>            </a>            <a href="https://github.com/freeCodeCamp/freeCodeCamp" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=freeCodeCamp&repo=freeCodeCamp" alt="freeCodeCamp"/>            </a>            <a href="https://github.com/tuvtran/project-based-learning" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=tuvtran&repo=project-based-learning" alt="project-based-learning"/>            </a>            <a href="https://github.com/byoungd/English-level-up-tips-for-Chinese" style="display: block;margin-right: 40px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=byoungd&repo=English-level-up-tips-for-Chinese" alt="English-level-up-tips-for-Chinese"/>            </a>            <a href="https://github.com/judasn/IntelliJ-IDEA-Tutorial" style="display: block;margin-right: 0px;">              <img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://github-readme-stats.vercel.app/api/pin/?show_owner=true&theme=default&username=judasn&repo=IntelliJ-IDEA-Tutorial" alt="IntelliJ-IDEA-Tutorial"/>            </a></div>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker开启远程访问</title>
      <link href="post/docker-remote-access.html"/>
      <url>post/docker-remote-access.html</url>
      
        <content type="html"><![CDATA[<h2 id="开启远程端口实现远程api调用"><a class="markdownIt-Anchor" href="#开启远程端口实现远程api调用"></a> 开启远程端口实现远程api调用</h2><blockquote><p>进入到 /lib/systemd/system/docker.service</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;lib&#x2F;systemd&#x2F;system&#x2F;docker.service</span><br></pre></td></tr></table></figure><blockquote><p>找到 ExecStart 行,修改</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ExecStart&#x3D;&#x2F;usr&#x2F;bin&#x2F;dockerd -H tcp:&#x2F;&#x2F;0.0.0.0:2375 -H unix:&#x2F;&#x2F;&#x2F;var&#x2F;run&#x2F;docker.sock</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx内置变量</title>
      <link href="post/nginx-variable.html"/>
      <url>post/nginx-variable.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>使用 nginx 服务器时,一定会用到 nginx 内置变量,必须需要获取客户端请求的真实域名/IP</p></blockquote><table><thead><tr><th style="text-align:center">name</th><th style="text-align:center">description</th></tr></thead><tbody><tr><td style="text-align:center">$arg_name</td><td style="text-align:center">请求中的的参数名,即<code>?</code>后面的 arg_name=arg_value</td></tr><tr><td style="text-align:center">$args</td><td style="text-align:center">请求中的参数值</td></tr><tr><td style="text-align:center">$query_string</td><td style="text-align:center">同 $args</td></tr><tr><td style="text-align:center">$binary_remote_addr</td><td style="text-align:center">客户端地址的二进制形式,固定长度为4个字节</td></tr><tr><td style="text-align:center">$body_bytes_sent</td><td style="text-align:center">传输给客户端的字节数,响应头不计算在内;这个变量和<code>Apache</code>的<code>mod_log_config</code>模块中的<code>%B</code>参数保持兼容</td></tr><tr><td style="text-align:center">$bytes_sent</td><td style="text-align:center">传输给客户端的字节数</td></tr><tr><td style="text-align:center">$connection</td><td style="text-align:center"><code>TCP</code>连接的序列号</td></tr><tr><td style="text-align:center">$connection_requests</td><td style="text-align:center"><code>TCP</code>连接当前的请求数量</td></tr><tr><td style="text-align:center">$content_length</td><td style="text-align:center"><code>Content-Length</code>请求头字段</td></tr><tr><td style="text-align:center">$content_type</td><td style="text-align:center"><code>Content-Type</code>请求头字段</td></tr><tr><td style="text-align:center">$cookie_name</td><td style="text-align:center"><code>cookie</code>名称</td></tr><tr><td style="text-align:center">$document_root</td><td style="text-align:center">当前请求的文档根目录或别名</td></tr><tr><td style="text-align:center">$document_uri</td><td style="text-align:center">同 <code>$uri</code></td></tr><tr><td style="text-align:center">$host</td><td style="text-align:center">优先级: <code>HTTP</code> 请求行的主机名 &gt; <code>HOST</code> 请求头字段 &gt; 符合请求的服务器名</td></tr><tr><td style="text-align:center">$hostname</td><td style="text-align:center">主机名</td></tr><tr><td style="text-align:center">$http_name</td><td style="text-align:center">匹配任意请求头字段;变量名中的后半部分 name 可以替换成任意请求头字段,如在配置文件中需要获取 http 请求头:<code>Accept-Language</code>,那么将<code>-</code>替换为下划线,大写字母替换为小写,形如:<code>$http_accept_language</code>即可。</td></tr><tr><td style="text-align:center">$https</td><td style="text-align:center">如果开启了 SSL 安全模式,值为 on,否则为空字符串。</td></tr><tr><td style="text-align:center">$is_args</td><td style="text-align:center">如果请求中有参数,值为<code>?</code>,否则为空字符串。</td></tr><tr><td style="text-align:center">$limit_rate</td><td style="text-align:center">用于设置响应的速度限制</td></tr><tr><td style="text-align:center">$msec</td><td style="text-align:center">当前的 Unix 时间戳</td></tr><tr><td style="text-align:center">$nginx_version</td><td style="text-align:center">nginx 版本</td></tr><tr><td style="text-align:center">$pid</td><td style="text-align:center">工作进程的PID</td></tr><tr><td style="text-align:center">$pipe</td><td style="text-align:center">如果请求来自管道通信,值为<code>p</code>,否则为<code>.</code></td></tr><tr><td style="text-align:center">$proxy_protocol_addr</td><td style="text-align:center">获取代理访问服务器的客户端地址,如果是直接访问,该值为空字符串</td></tr><tr><td style="text-align:center">$realpath_root</td><td style="text-align:center">当前请求的文档根目录或别名的真实路径,会将所有符号连接转换为真实路径</td></tr><tr><td style="text-align:center">$remote_addr</td><td style="text-align:center">客户端地址</td></tr><tr><td style="text-align:center">$remote_port</td><td style="text-align:center">客户端端口</td></tr><tr><td style="text-align:center">$remote_user</td><td style="text-align:center">用于<code>HTTP</code>基础认证服务的用户名</td></tr><tr><td style="text-align:center">$request</td><td style="text-align:center">代表客户端的请求地址</td></tr><tr><td style="text-align:center">$request_body</td><td style="text-align:center">客户端的请求主体,此变量可在 location 中使用,将请求主体通过<code>proxy_pass</code>、<code>fastcgi_pass</code>、<code>uwsgi_pass</code>和<code>scgi_pass</code>传递给下一级的代理服务器。</td></tr><tr><td style="text-align:center">$request_body_file</td><td style="text-align:center">将客户端请求主体保存在临时文件中。文件处理结束后,此文件需删除。如果需要之一开启此功能,需要设置<code>client_body_in_file_only</code>。如果将次文件传递给后端的代理服务器,需要禁用<code>request body</code>，即设置<code>proxy_pass_request_body off</code>、<code>fastcgi_pass_request_body off</code>、<code>uwsgi_pass_request_body off</code>或<code>scgi_pass_request_body off</code>。</td></tr><tr><td style="text-align:center">$request_completion</td><td style="text-align:center">如果请求成功,值为<code>OK</code>,如果请求未完成或者请求不是一个范围请求的最后一部分,则为空。</td></tr><tr><td style="text-align:center">$request_filename</td><td style="text-align:center">当前连接请求的文件路径,由 root 或 alias 指令与<code>URI</code>请求生成。</td></tr><tr><td style="text-align:center">$request_length</td><td style="text-align:center">请求的长度 (包括请求的地址,<code>http</code>请求头和请求主体)</td></tr><tr><td style="text-align:center">$request_method</td><td style="text-align:center">HTTP请求方法</td></tr><tr><td style="text-align:center">$request_time</td><td style="text-align:center">处理客户端请求使用的时间,从读取客户端的第一个字节开始计时。</td></tr><tr><td style="text-align:center">$request_uri</td><td style="text-align:center">这个变量等于包含一些客户端请求参数的原始 URI,它无法修改，请查看 $uri 更改或重写 URI,不包含主机名</td></tr><tr><td style="text-align:center">$scheme</td><td style="text-align:center">请求使用的 Web 协议,<code>http</code>或<code>https</code></td></tr><tr><td style="text-align:center">$sent_http_name</td><td style="text-align:center">可以设置任意http响应头字段,变量名中的后半部分<code>name</code>可以替换成任意响应头字段,如需要设置响应头<code>Content-length</code>,那么将<code>－</code>替换为下划线,大写字母替换为小写</td></tr><tr><td style="text-align:center">$server_addr</td><td style="text-align:center">服务器端地址，需要注意的是：为了避免访问linux系统内核，应将ip地址提前设置在配置文件中。</td></tr><tr><td style="text-align:center">$server_name</td><td style="text-align:center">服务器名</td></tr><tr><td style="text-align:center">$server_port</td><td style="text-align:center">服务器端口</td></tr><tr><td style="text-align:center">$server_protocol</td><td style="text-align:center">服务器的HTTP版本,通常为<code>HTTP/1.0</code>或<code>HTTP/1.1</code></td></tr><tr><td style="text-align:center">$status</td><td style="text-align:center">HTTP响应代码</td></tr><tr><td style="text-align:center">$tcpinfo_rtt $tcpinfo_rttvar $tcpinfo_snd_cwnd $tcpinfo_rcv_space</td><td style="text-align:center">客户端TCP连接的具体信息</td></tr><tr><td style="text-align:center">$time_iso8601</td><td style="text-align:center">服务器时间的 ISO 8610 格式</td></tr><tr><td style="text-align:center">$time_local</td><td style="text-align:center">服务器时间 LOG Format 格式</td></tr><tr><td style="text-align:center">$uri</td><td style="text-align:center">请求中的当前<code>URI</code>(不带请求参数，参数位于<code>$args</code>),可以不同于浏览器传递的<code>$request_uri</code>的值,它可以通过内部重定向,或者使用 index 指令进行修改,不包含主机名</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot-Mail发送邮件</title>
      <link href="post/spring-boot-email.html"/>
      <url>post/spring-boot-email.html</url>
      
        <content type="html"><![CDATA[<h2 id="添加-maven-依赖"><a class="markdownIt-Anchor" href="#添加-maven-依赖"></a> 添加 maven 依赖</h2><blockquote><p>在 pom.xml 中添加 mail 和 thymeleaf 对应的依赖</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-mail<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="邮件服务器属性配置"><a class="markdownIt-Anchor" href="#邮件服务器属性配置"></a> 邮件服务器属性配置</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">mail:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">smtp.163.com</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">username</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">password</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">smtp</span></span><br><span class="line">    <span class="attr">properties:</span></span><br><span class="line">      <span class="attr">mail:</span></span><br><span class="line">        <span class="attr">smtp:</span></span><br><span class="line">          <span class="attr">starttls:</span></span><br><span class="line">            <span class="attr">required:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">auth:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><blockquote><p>本文使用的是 163 邮箱,若使用其他邮箱,修改对应配置即可</p></blockquote><h2 id="测试发送邮件"><a class="markdownIt-Anchor" href="#测试发送邮件"></a> 测试发送邮件</h2><h3 id="发送文本邮件"><a class="markdownIt-Anchor" href="#发送文本邮件"></a> 发送文本邮件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BlogServiceApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JavaMailSender mailSender;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.mail.username&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String sender;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendSimpleEmail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SimpleMailMessage simpleMailMessage = <span class="keyword">new</span> SimpleMailMessage();</span><br><span class="line">        simpleMailMessage.setFrom(sender);</span><br><span class="line">        simpleMailMessage.setTo(sender);</span><br><span class="line">        simpleMailMessage.setSubject(<span class="string">&quot;测试主题&quot;</span>);</span><br><span class="line">        simpleMailMessage.setText(<span class="string">&quot;测试内容&quot;</span>);</span><br><span class="line">        mailSender.send(simpleMailMessage);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>测试给自己发送一个文本邮件</p></blockquote><h3 id="发送-html-邮件"><a class="markdownIt-Anchor" href="#发送-html-邮件"></a> 发送 Html 邮件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BlogServiceApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JavaMailSender mailSender;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.mail.username&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String sender;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendHtmlEmail</span><span class="params">()</span> <span class="keyword">throws</span> MessagingException </span>&#123;</span><br><span class="line">        MimeMessage message = mailSender.createMimeMessage();</span><br><span class="line">        MimeMessageHelper messageHelper = <span class="keyword">new</span> MimeMessageHelper(message);</span><br><span class="line">        messageHelper.setFrom(sender);</span><br><span class="line">        messageHelper.setTo(sender);</span><br><span class="line">        messageHelper.setSubject(<span class="string">&quot;测试主题&quot;</span>);</span><br><span class="line">        messageHelper.setText(<span class="string">&quot;&lt;h1 style=&#x27;color:red;&#x27;&gt;测试内容&lt;/h1&gt;&quot;</span>, <span class="keyword">true</span>);</span><br><span class="line">        mailSender.send(message);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="发送附件邮件"><a class="markdownIt-Anchor" href="#发送附件邮件"></a> 发送附件邮件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BlogServiceApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JavaMailSender mailSender;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.mail.username&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String sender;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendAttachmentsEmail</span><span class="params">()</span> <span class="keyword">throws</span> MessagingException </span>&#123;</span><br><span class="line">        MimeMessage message = mailSender.createMimeMessage();</span><br><span class="line">        MimeMessageHelper messageHelper = <span class="keyword">new</span> MimeMessageHelper(message);</span><br><span class="line">        messageHelper.setFrom(sender);</span><br><span class="line">        messageHelper.setTo(sender);</span><br><span class="line">        messageHelper.setSubject(<span class="string">&quot;测试主题&quot;</span>);</span><br><span class="line">        messageHelper.setText(<span class="string">&quot;测试附件&quot;</span>);</span><br><span class="line">        messageHelper.addAttachment(<span class="string">&quot;image.png&quot;</span>, <span class="keyword">new</span> ClassPathResource(<span class="string">&quot;/images/image.png&quot;</span>));</span><br><span class="line">        mailSender.send(message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="发送模板邮件"><a class="markdownIt-Anchor" href="#发送模板邮件"></a> 发送模板邮件</h3><blockquote><p>这个是 thymeleaf 的 html 模板,resource/template/mail-template.html</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Month<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Savings<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:each</span>=<span class="string">&quot;item:$&#123;data&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;item.name&#125;&quot;</span>&gt;</span>January<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;item.value&#125;&quot;</span>&gt;</span>$100<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BlogServiceApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JavaMailSender mailSender;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.mail.username&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String sender;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    TemplateEngine templateEngine;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendTemplateEmail</span><span class="params">()</span> <span class="keyword">throws</span> MessagingException </span>&#123;</span><br><span class="line">        MimeMessage message = mailSender.createMimeMessage();</span><br><span class="line">        MimeMessageHelper messageHelper = <span class="keyword">new</span> MimeMessageHelper(message);</span><br><span class="line">        messageHelper.setFrom(sender);</span><br><span class="line">        messageHelper.setTo(sender);</span><br><span class="line">        messageHelper.setSubject(<span class="string">&quot;测试主题&quot;</span>);</span><br><span class="line">        Context context = <span class="keyword">new</span> Context();</span><br><span class="line">        context.setVariables(<span class="keyword">new</span> HashMap&lt;String, Object&gt;() &#123;</span><br><span class="line">            &#123;</span><br><span class="line">                put(<span class="string">&quot;data&quot;</span>, Arrays.asList(</span><br><span class="line">                        create(<span class="string">&quot;January&quot;</span>, <span class="string">&quot;$105&quot;</span>),</span><br><span class="line">                        create(<span class="string">&quot;February&quot;</span>, <span class="string">&quot;$80&quot;</span>),</span><br><span class="line">                        create(<span class="string">&quot;Irena&quot;</span>, <span class="string">&quot;$120&quot;</span>),</span><br><span class="line">                        create(<span class="string">&quot;Saint&quot;</span>, <span class="string">&quot;$74&quot;</span>),</span><br><span class="line">                        create(<span class="string">&quot;Enos&quot;</span>, <span class="string">&quot;$151&quot;</span>),</span><br><span class="line">                        create(<span class="string">&quot;Kevan&quot;</span>, <span class="string">&quot;$25&quot;</span>),</span><br><span class="line">                        create(<span class="string">&quot;Suzy&quot;</span>, <span class="string">&quot;$130&quot;</span>),</span><br><span class="line">                        create(<span class="string">&quot;Trish&quot;</span>, <span class="string">&quot;$111&quot;</span>),</span><br><span class="line">                        create(<span class="string">&quot;Rainy&quot;</span>, <span class="string">&quot;$51&quot;</span>),</span><br><span class="line">                        create(<span class="string">&quot;Rance&quot;</span>, <span class="string">&quot;$77&quot;</span>),</span><br><span class="line">                        create(<span class="string">&quot;Rowena&quot;</span>, <span class="string">&quot;$84&quot;</span>)</span><br><span class="line">                ));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        messageHelper.setText(templateEngine.process(<span class="string">&quot;mail-template&quot;</span>, context), <span class="keyword">true</span>);</span><br><span class="line">        mailSender.send(message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>我没在 spring 中配置了视图解析器来解析 thymeleaf 模板,返回视图。<br />spring.thymeleaf.prefix=classpath:/templates/<br />spring.thymeleaf.suffix=.html</p></blockquote><h2 id="完整的-mailutil"><a class="markdownIt-Anchor" href="#完整的-mailutil"></a> 完整的 MailUtil</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MailUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> JavaMailSender mailSender;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送方 默认获取 spring.mail.username</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String sender;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> TemplateEngine templateEngine;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">getSender</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(sender)) &#123;</span><br><span class="line">            sender = SpringContextUtil.getProperty(<span class="string">&quot;spring.mail.username&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> JavaMailSender <span class="title">getMailSender</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (mailSender == <span class="keyword">null</span>) &#123;</span><br><span class="line">            mailSender = SpringContextUtil.getBean(JavaMailSender.class);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> mailSender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> TemplateEngine <span class="title">getTemplateEngine</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (templateEngine == <span class="keyword">null</span>) &#123;</span><br><span class="line">            templateEngine = SpringContextUtil.getBean(TemplateEngine.class);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> templateEngine;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> MailHelper <span class="title">create</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> MailHelper(getSender(), <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> MailHelper <span class="title">create</span><span class="params">(String subject, String... receivers)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> MailHelper(getSender(), subject, receivers);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> MailHelper <span class="title">create</span><span class="params">(String sender, String subject, String... receivers)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> MailHelper(sender, subject, receivers);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">MailHelper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> String sender;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 接收方列表,set 是为了去重</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">private</span> Collection&lt;String&gt; receivers = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 抄送人列表,set 是为了去重</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">private</span> Collection&lt;String&gt; ccs = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 邮件主题</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">private</span> String subject;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 邮件内容</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">private</span> String content;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 是否为 html</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">boolean</span> html;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 附件</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">private</span> Map&lt;String, InputStreamSource&gt; attachments = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 内联资源</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">private</span> Map&lt;String, Resource&gt; inlines = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        MailHelper(String sender, String subject, String... receivers) &#123;</span><br><span class="line">            <span class="keyword">this</span>.sender = sender;</span><br><span class="line">            <span class="keyword">this</span>.receivers.addAll(Arrays.asList(receivers));</span><br><span class="line">            <span class="keyword">this</span>.subject = subject;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> MailHelper <span class="title">receiver</span><span class="params">(String... receivers)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.receivers.addAll(Arrays.asList(receivers));</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 设置主题</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> MailHelper <span class="title">subject</span><span class="params">(String subject)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.subject = subject;</span><br><span class="line">            <span class="keyword">this</span>.html = <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 创建文本邮件</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> content 内容</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> MailSender <span class="title">text</span><span class="params">(String content)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.content = content;</span><br><span class="line">            <span class="keyword">this</span>.html = <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">return</span> createMailSender();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 创建 html 邮件</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> content html</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> MailSender <span class="title">html</span><span class="params">(String content)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.content = content;</span><br><span class="line">            <span class="keyword">this</span>.html = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">return</span> createMailSender();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 创建模板邮件</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> template  模板名称</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> variables 模板变量</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> MailSender <span class="title">template</span><span class="params">(String template, Map&lt;String, Object&gt; variables)</span> </span>&#123;</span><br><span class="line">            Context context = <span class="keyword">new</span> Context();</span><br><span class="line">            context.setVariables(variables);</span><br><span class="line">            <span class="keyword">this</span>.content = getTemplateEngine().process(template, context);</span><br><span class="line">            <span class="keyword">this</span>.html = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">return</span> createMailSender();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 创建 MailSender</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> MailSender <span class="title">createMailSender</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="comment">// 对参数进行校验</span></span><br><span class="line">            Assert.hasLength(sender, <span class="string">&quot;sender 不能为空&quot;</span>);</span><br><span class="line">            Assert.notEmpty(receivers, <span class="string">&quot;receiver 不能为空&quot;</span>);</span><br><span class="line">            Assert.hasLength(subject, <span class="string">&quot;subject 不能为空&quot;</span>);</span><br><span class="line">            Assert.hasLength(content, <span class="string">&quot;content 不能为空&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> MailSender(<span class="keyword">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 添加抄送人</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> ccs 抄送人</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> MailHelper <span class="title">addCc</span><span class="params">(String... ccs)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> addCc(Arrays.asList(ccs));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 添加抄送人</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> ccs 抄送人</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> MailHelper <span class="title">addCc</span><span class="params">(Collection&lt;String&gt; ccs)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ccs.addAll(ccs);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 添加附件</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> name 附件名</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> path 附件本地路径</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> MailHelper <span class="title">addAttachment</span><span class="params">(String name, String path)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> addAttachment(name, <span class="keyword">new</span> File(path));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 添加附件</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> name 附件名</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> file 附件文件</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> MailHelper <span class="title">addAttachment</span><span class="params">(String name, File file)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.attachments.put(name, <span class="keyword">new</span> FileSystemResource(file));</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 添加附件</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> name  附件名</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> bytes 附件数据</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> MailHelper <span class="title">addAttachment</span><span class="params">(String name, <span class="keyword">byte</span>[] bytes)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> addAttachment(name, <span class="keyword">new</span> ByteArrayInputStream(bytes));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 添加附件</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> name        附件名</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> inputStream 文件流</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> MailHelper <span class="title">addAttachment</span><span class="params">(String name, InputStream inputStream)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.attachments.put(name, () -&gt; inputStream);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 添加内联资源</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> name 文件名</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> path 文件本地路径</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> MailHelper <span class="title">addInline</span><span class="params">(String name, String path)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> addInline(name, <span class="keyword">new</span> File(path));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 添加内联资源</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> name 文件名</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> file 文件</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> MailHelper <span class="title">addInline</span><span class="params">(String name, File file)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.inlines.put(name, <span class="keyword">new</span> FileSystemResource(file));</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 添加内联资源</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> name  文件名</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> bytes 文件数据</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> MailHelper <span class="title">addInline</span><span class="params">(String name, <span class="keyword">byte</span>[] bytes)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.inlines.put(name, <span class="keyword">new</span> ByteArrayResource(bytes));</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 添加内联资源</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> name        文件名</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> inputStream 文件流</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> MailHelper <span class="title">addInline</span><span class="params">(String name, InputStream inputStream)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.inlines.put(name, <span class="keyword">new</span> InputStreamResource(inputStream));</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">MailSender</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> MailHelper mailHelper;</span><br><span class="line"></span><br><span class="line">        MailSender(MailHelper mailHelper) &#123;</span><br><span class="line">            <span class="keyword">this</span>.mailHelper = mailHelper;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send</span><span class="params">()</span> <span class="keyword">throws</span> MessagingException </span>&#123;</span><br><span class="line">            MimeMessage message = getMailSender().createMimeMessage();</span><br><span class="line">            MimeMessageHelper helper = <span class="keyword">new</span> MimeMessageHelper(message, <span class="keyword">true</span>);</span><br><span class="line">            <span class="comment">// 设置📧发送方</span></span><br><span class="line">            helper.setFrom(sender);</span><br><span class="line">            <span class="comment">// 设置📧接收方</span></span><br><span class="line">            helper.setTo(mailHelper.receivers.toArray(<span class="keyword">new</span> String[<span class="number">0</span>]));</span><br><span class="line">            <span class="comment">// 设置📧抄送方</span></span><br><span class="line">            helper.setCc(mailHelper.ccs.toArray(<span class="keyword">new</span> String[<span class="number">0</span>]));</span><br><span class="line">            <span class="comment">// 设置📧主题</span></span><br><span class="line">            helper.setSubject(mailHelper.subject);</span><br><span class="line">            <span class="comment">// 设置📧内容</span></span><br><span class="line">            helper.setText(mailHelper.content, mailHelper.html);</span><br><span class="line">            <span class="comment">// 添加📧附件</span></span><br><span class="line">            <span class="keyword">for</span> (String name : mailHelper.attachments.keySet()) &#123;</span><br><span class="line">                helper.addAttachment(name, mailHelper.attachments.get(name));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 添加📧内联元素</span></span><br><span class="line">            <span class="keyword">for</span> (String name : mailHelper.inlines.keySet()) &#123;</span><br><span class="line">                helper.addInline(name, mailHelper.inlines.get(name));</span><br><span class="line">            &#125;</span><br><span class="line">            log.info(<span class="string">&quot;给 &#123;&#125; 发送邮件 `&#123;&#125;` 成功&quot;</span>, String.join(<span class="string">&quot;,&quot;</span>, mailHelper.receivers), mailHelper.subject);</span><br><span class="line">            <span class="comment">// 发送📧</span></span><br><span class="line">            mailSender.send(message);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> spring-boot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac终端工具iTerm2</title>
      <link href="post/mac-terminal-iterm2.html"/>
      <url>post/mac-terminal-iterm2.html</url>
      
        <content type="html"><![CDATA[<h2 id="iterm2"><a class="markdownIt-Anchor" href="#iterm2"></a> iTerm2</h2><blockquote><p><code>Mac OS</code>自带的终端,用起来虽然有些不太方便,界面也不够友好,<code>iTerm2</code>是一款相对比较好用的终端工具.<code>iTerm2</code>常用操作包括主题选择、声明高亮、自动填充建议、隐藏用户名和主机名、分屏效果等.</p></blockquote><p>下载地址: <a href="https://www.iterm2.com/">https://www.iterm2.com/</a></p><h3 id="安装oh-my-zsh"><a class="markdownIt-Anchor" href="#安装oh-my-zsh"></a> 安装Oh my zsh</h3><p>Oh My Zsh</p><p><code>Oh My Zsh</code>它是基于<code>zsh</code>命令行的一个扩展工具集,提供了丰富的扩展功能</p><blockquote><p><code>Mac OS</code>系统默认使用<code>dash</code>作为终端,可以使用命令修改默认使用<code>zsh</code>：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chsh -s &#x2F;bin&#x2F;zsh</span><br></pre></td></tr></table></figure><blockquote><p>curl 安装方式</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c &quot;$(curl -fsSL https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;robbyrussell&#x2F;oh-my-zsh&#x2F;master&#x2F;tools&#x2F;install.sh)&quot;</span><br></pre></td></tr></table></figure><blockquote><p>wget 安装方式</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c &quot;$(wget https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;robbyrussell&#x2F;oh-my-zsh&#x2F;master&#x2F;tools&#x2F;install.sh -O -)&quot;</span><br></pre></td></tr></table></figure><p>oh-my-zsh <a href="https://github.com/robbyrussell/oh-my-zsh">开源地址</a></p><h3 id="安装powerline"><a class="markdownIt-Anchor" href="#安装powerline"></a> 安装<code>Powerline</code></h3><blockquote><p><code>Powerline</code>是一款比较炫酷的状态栏工具<br />使用<code>python</code>的<code>pip</code>命令安装<code>Powerline</code></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install powerline-status --user</span><br></pre></td></tr></table></figure><h3 id="安装powerfonts"><a class="markdownIt-Anchor" href="#安装powerfonts"></a> 安装<code>PowerFonts</code></h3><blockquote><p>安装字体库需要首先将项目git clone至本地，<a href="http://xn--install-f43k205bp38an71anwgsssm2es97e.sh">然后执行源码中的install.sh</a>。</p></blockquote><blockquote><p>安装好字体库之后，我们来设置iTerm2的字体，具体的操作是iTerm2 -&gt; Preferences -&gt; Profiles -&gt; Text,在 Font 区域选中Change Font，然后找到 Meslo LG字体。有L、M、S可选，看个人喜好</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/power-fonts-setting.gif" alt="" /></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/powerline/fonts.git --depth=1</span><br><span class="line"><span class="built_in">cd</span> fonts</span><br><span class="line">./install.sh</span><br></pre></td></tr></table></figure><h3 id="主题选择"><a class="markdownIt-Anchor" href="#主题选择"></a> 主题选择</h3><p>oh-my-zsh <a href="https://github.com/robbyrussell/oh-my-zsh/wiki/Themes">主题选择</a></p><blockquote><p>修改<code>~/.zshrc</code>文件<code>ZSH_THEME=主题</code>,然后执行<code>source</code>命令使配置生效</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/zsh-scheme.jpg" alt="主题选择" /></p><h3 id="安装配色方案"><a class="markdownIt-Anchor" href="#安装配色方案"></a> 安装配色方案</h3><blockquote><p>配色方案在使用<code>VIM</code>或<code>Colorful Log</code>时会变得非常有用,同时界面也不会一片黑绿一样死板。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/altercation/solarized</span><br><span class="line"><span class="built_in">cd</span> solarized/iterm2-colors-solarized/</span><br><span class="line">open .</span><br></pre></td></tr></table></figure><blockquote><p>在打开的<code>Finder</code>窗口中,双击 Solarized Dark.itermcolors 和 Solarized Light.itermcolors 即可安装明暗两种配色<br />进入 iTerm2 -&gt; Preferences -&gt; Profiles -&gt; Colors -&gt; Color Presets 中根据个人喜好选择</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/iterm2-colors-solarized-setting.gif" alt="设置配色方案" /></p><h3 id="命令补全插件"><a class="markdownIt-Anchor" href="#命令补全插件"></a> 命令补全插件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.oh-my-zsh/custom/plugins/</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions</span><br><span class="line">vi ~/.zshrc</span><br></pre></td></tr></table></figure><blockquote><p>打开<code>~/.zshrc</code>文件进行编辑。找到 plugins,加上命令补全插件</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/zsh-autosuggestions.jpg" alt="配置命令补全插件" /></p><h3 id="安装高亮插件"><a class="markdownIt-Anchor" href="#安装高亮插件"></a> 安装高亮插件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.oh-my-zsh/custom/plugins/</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git</span><br><span class="line">vi ~/.zshrc</span><br></pre></td></tr></table></figure><blockquote><p>打开<code>~/.zshrc</code>文件进行编辑。找到 plugins,请把高亮插件放在最后</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/zsh-syntax-highlighting.jpg" alt="配置高亮插件" /></p><h3 id="快捷键"><a class="markdownIt-Anchor" href="#快捷键"></a> 快捷键</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">command</span> + t 新建标签</span><br><span class="line"><span class="built_in">command</span> + w 关闭标签</span><br><span class="line"><span class="built_in">command</span> + 数字 <span class="built_in">command</span> + 左右方向键    切换标签</span><br><span class="line"><span class="built_in">command</span> + enter 切换全屏</span><br><span class="line"><span class="built_in">command</span> + f 查找</span><br><span class="line"><span class="built_in">command</span> + d 水平分屏</span><br><span class="line"><span class="built_in">command</span> + <span class="built_in">shift</span> + d 垂直分屏</span><br><span class="line"><span class="built_in">command</span> + option + 方向键 <span class="built_in">command</span> + [ 或 <span class="built_in">command</span> + ]    切换屏幕</span><br><span class="line"><span class="built_in">command</span> + ; 查看历史命令</span><br><span class="line"><span class="built_in">command</span> + <span class="built_in">shift</span> + h 查看剪贴板历史</span><br><span class="line">ctrl + u    清除当前行</span><br><span class="line">ctrl + l    清屏</span><br><span class="line">ctrl + a    到行首</span><br><span class="line">ctrl + e    到行尾</span><br><span class="line">ctrl + f/b  前进后退</span><br><span class="line">ctrl + p    上一条命令</span><br><span class="line">ctrl + r    搜索命令历史</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客美化</title>
      <link href="post/hexo-optimize.html"/>
      <url>post/hexo-optimize.html</url>
      
        <content type="html"><![CDATA[<p>Hexo 优化</p><h2 id="1-外链跳转插件"><a class="markdownIt-Anchor" href="#1-外链跳转插件"></a> 1. 外链跳转插件</h2><blockquote><p><a href="https://github.com/hvnobug/hexo-external-link">hexo-external-link</a>是一个跳转外链相关插件。自动为所有html文件中外链的a标签生成对应的属性。 比如 设置 target=’_blank’, rel=‘external nofollow noopener noreferrer’ 告诉搜索引擎这是外部链接,不要将该链接计入权重。 同时自动生成外链跳转页面,默认在根目录下 go.html;</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/hexo-external-link.gif" alt="hexo-external-link" title="hexo-external-link" /></p><p>使用 npm 或者 yarn 安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## npm 安装</span></span><br><span class="line">npm install hexo-external-link --save</span><br><span class="line"><span class="comment">## yarn 安装</span></span><br><span class="line">yarn add hexo-external-link</span><br></pre></td></tr></table></figure><p>在<code>Hexo</code>根目录的<code>_config.yml</code>文件中添加如下配置。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">hexo_external_link:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">enable_base64_encode:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">url_param_name:</span> <span class="string">&#x27;u&#x27;</span></span><br><span class="line">  <span class="attr">html_file_name:</span> <span class="string">&#x27;go.html&#x27;</span></span><br><span class="line">  <span class="attr">target_blank:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">link_rel:</span> <span class="string">&#x27;external nofollow noopener noreferrer&#x27;</span></span><br><span class="line">  <span class="attr">domain:</span> <span class="string">&#x27;your_domain&#x27;</span> <span class="comment"># 如果开启了防盗链</span></span><br><span class="line">  <span class="attr">safety_chain:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><ul><li><strong>enable</strong> - 是否开启<code>hexo_external_link</code>插件 - 默认 false</li><li><strong>enable_base64_encode</strong> - 是否对跳转<code>url</code>使用<code>base64编码</code> - 默认 fasle</li><li><strong>url_param_name</strong> - url参数名,在跳转到外链传递给<code>html_file_name</code>的参数名 - 默认 ‘u’</li><li><strong>html_file_name</strong> - 跳转到外链的页面文件路径 - 默认 ‘go.html’</li><li><strong>target_blank</strong> - 是否为外链的<code>a</code>标签添加<code>target='_blank'</code> - 默认 true</li><li><strong>link_rel</strong> - 设置外链的<code>a</code>标签的rel属性 - 默认 ‘external nofollow noopener noreferrer’</li><li><strong>domain</strong> - 如果开启了防盗链,除了 localhost 和 domain 之外调用会跳到主页,同时也是判断链接是否为外链的依据 - 默认 window.location.host</li><li><strong>safety_chain</strong> - go.html 为了防止外链盗用 对域名进行的判断 - 默认 false</li></ul><h2 id="2-aplayer网易云歌单"><a class="markdownIt-Anchor" href="#2-aplayer网易云歌单"></a> 2. APlayer+网易云歌单</h2><blockquote><p><a href="https://aplayer.js.org/">Aplayer</a> 🍭 Wow, such a beautiful HTML5 music player - 一款可爱/漂亮的<code>HTML5</code>音乐播放器</p></blockquote><p>导入 CDN 文件,以下 CDN 请自行选择,本文使用 unpkg。</p><ol><li><a href="https://unpkg.com/browse/aplayer">unpkg</a></li><li><a href="https://cdnjs.com/libraries/aplayer">cdnjs</a></li><li><a href="https://www.jsdelivr.com/package/npm/aplayer">jsdelivr</a></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://unpkg.com/browse/aplayer@1.10.1/dist/APlayer.min.css&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/hls.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/browse/aplayer@1.10.1/dist/APlayer.min.js&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>使用网易云 API 动态加载歌单列表</p></blockquote><p><a href="https://github.com/Binaryify/NeteaseCloudMusicApi">网易云音乐 API</a></p><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/NeteaseCloudMusicApi-github.png" alt="" /></p><p>该项目基于<code>NodeJs</code>的网易云 API 服务,<a href="https://binaryify.github.io/NeteaseCloudMusicApi/#/?id=neteasecloudmusicapi">官方文档</a></p><blockquote><p>通过使用该服务提供的 API 功能就可以实现动态加载歌单列表到 <code>APlayer</code><br />该项目需要部署到服务器,部署参考<a href="https://binaryify.github.io/NeteaseCloudMusicApi/#/?id=%e5%ae%89%e8%a3%85">官方文档</a><br />博主已经部署好服务,没有服务器的小伙伴可以联系博主(需要配置<code>CORS</code>)<a href="https://www.hvnobug.com/netease-music-api/">https://www.hvnobug.com/netease-music-api/</a></p></blockquote><p>创建核心 js 文件<code>aplayer.js</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> neteaseMusics = &#123;&#125;;</span><br><span class="line"><span class="comment">/* 默认APi服务地址 */</span></span><br><span class="line"><span class="keyword">const</span> neteaseMusicApiHost = <span class="string">&#x27;https://hvnobug.com/netease-music-api&#x27;</span>;</span><br><span class="line"><span class="comment">/* 默认歌单 */</span></span><br><span class="line"><span class="keyword">const</span> playerListId = <span class="string">&#x27;3083141942&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> initAPlayer = <span class="function">(<span class="params">id, limit</span>) =&gt;</span> &#123;</span><br><span class="line">    id = id || playerListId;</span><br><span class="line">    <span class="comment">/* 对歌曲数量进行限制 */</span></span><br><span class="line">    limit = limit === <span class="literal">undefined</span> || limit &lt;= <span class="number">0</span> ? <span class="number">10</span> : limit &gt; <span class="number">50</span> ? <span class="number">50</span> : limit;</span><br><span class="line">    <span class="keyword">let</span> player = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;player&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!player) &#123;</span><br><span class="line">        player = <span class="built_in">document</span>.createElement(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        player.id = <span class="string">&#x27;player&#x27;</span>;</span><br><span class="line">        <span class="built_in">document</span>.body.appendChild(player)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* 调用 歌单详情接口 */</span></span><br><span class="line">    $.get(<span class="string">`<span class="subst">$&#123;neteaseMusicApiHost&#125;</span>/playlist/detail?id=<span class="subst">$&#123;id&#125;</span>`</span>, <span class="function">(<span class="params">&#123;playlist: &#123;tracks&#125;&#125;</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (tracks &amp;&amp; tracks.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> musicMap = &#123;&#125;;</span><br><span class="line">            tracks.slice(<span class="number">0</span>, limit).forEach(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">const</span> &#123;id, name, ar, al&#125; = item;</span><br><span class="line">                <span class="keyword">const</span> musicDetail = &#123;name&#125;;</span><br><span class="line">                <span class="keyword">if</span> (ar &amp;&amp; ar.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    musicDetail[<span class="string">&#x27;artist&#x27;</span>] = ar.map(<span class="function"><span class="params">a_r</span> =&gt;</span> a_r.name).join(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (al &amp;&amp; al[<span class="string">&#x27;picUrl&#x27;</span>]) &#123;</span><br><span class="line">                    musicDetail[<span class="string">&#x27;cover&#x27;</span>] = al[<span class="string">&#x27;picUrl&#x27;</span>]</span><br><span class="line">                &#125;</span><br><span class="line">                musicMap[<span class="string">`id_<span class="subst">$&#123;id.toString()&#125;</span>`</span>] = musicDetail</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="comment">/* 调用获取歌曲 Url 接口 */</span></span><br><span class="line">            $.get(<span class="string">`<span class="subst">$&#123;neteaseMusicApiHost&#125;</span>/song/url?id=<span class="subst">$&#123;<span class="built_in">Object</span>.keys(musicMap)</span></span></span><br><span class="line"><span class="string"><span class="subst">                .map(id =&gt; id.substring(<span class="number">3</span>)).join(<span class="string">&#x27;,&#x27;</span>)&#125;</span>`</span>, <span class="function">(<span class="params">&#123;data&#125;</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (data &amp;&amp; data.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    data.forEach(<span class="function"><span class="params">music</span> =&gt;</span> &#123;</span><br><span class="line">                        <span class="keyword">const</span> &#123;id, url&#125; = music;</span><br><span class="line">                        <span class="keyword">const</span> key = <span class="string">`id_<span class="subst">$&#123;id.toString()&#125;</span>`</span>;</span><br><span class="line">                        <span class="keyword">if</span> (url) neteaseMusics[key] = &#123;...musicMap[key], url&#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">                    renderAPlayer();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> renderAPlayer = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">/* HLS 支持,需要导入 hls.js */</span></span><br><span class="line">    <span class="keyword">const</span> customAudioType = &#123;</span><br><span class="line">        <span class="string">&#x27;customHls&#x27;</span>: <span class="function"><span class="keyword">function</span> (<span class="params">audioElement, audio, player</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (Hls.isSupported()) &#123;</span><br><span class="line">                <span class="keyword">const</span> hls = <span class="keyword">new</span> Hls();</span><br><span class="line">                hls.loadSource(audio.url);</span><br><span class="line">                hls.attachMedia(audioElement)</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (audioElement.canPlayType(<span class="string">&#x27;application/x-mpegURL&#x27;</span>) ||</span><br><span class="line">                audioElement.canPlayType(<span class="string">&#x27;application/vnd.apple.mpegURL&#x27;</span>)) &#123;</span><br><span class="line">                audioElement.src = audio.url</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                player.notice(<span class="string">&#x27;Error: HLS is not supported.&#x27;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">/* 参数配置请参考官方文档 */</span></span><br><span class="line">    <span class="keyword">const</span> aPlayer = <span class="keyword">new</span> APlayer(&#123;</span><br><span class="line">        container: player,</span><br><span class="line">        fixed: <span class="literal">true</span>,</span><br><span class="line">        autoplay: <span class="literal">false</span>,</span><br><span class="line">        order: <span class="string">&#x27;random&#x27;</span>,</span><br><span class="line">        customAudioType: customAudioType</span><br><span class="line">    &#125;);</span><br><span class="line">    aPlayer.list.add(<span class="built_in">Object</span>.values(neteaseMusics))</span><br><span class="line">&#125;;</span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">/* 移动端不初始化 APlayer */</span></span><br><span class="line">    ((<span class="built_in">document</span>.body.clientWidth || <span class="built_in">document</span>.body.offsetWidth || <span class="built_in">window</span>.screen.availWidth) &gt; <span class="number">450</span>) &amp;&amp; initAPlayer();</span><br><span class="line">&#125;());</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>此时只需要在公共页面( 例如:layout.ejs )加入如下代码:</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/aplayer-layout.png" alt="" /></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- APlayer --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;//unpkg.com/aplayer/dist/APlayer.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.jsdelivr.net/npm/hls.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//unpkg.com/aplayer/dist/APlayer.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/js/aplayer.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/APlayer.gif" alt="" /></p><h2 id="3-添加-live2d-看板娘"><a class="markdownIt-Anchor" href="#3-添加-live2d-看板娘"></a> 3. 添加 Live2D 看板娘</h2><blockquote><p>看到很多大佬的 blog 有萌萌的看板娘，但是 hexo-helper-live2d 功能不够强大,没有换装的聊天互动等功能</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/hvnobug-live2d.gif" alt="live2d" title="live2d" /></p><blockquote><p>博主使用的是<a href="https://www.fghrsh.net/post/123.html" title="fghrsh">fghrsh</a>根据<code>waifu-tips.js</code>基础上，实现了套 API 加上了切换 Live2D 模型，随机换装 和 顺序换装。</p></blockquote><p>直接上源码 👇</p><blockquote><p>在公共页面( 例如:layout.ejs )加入如下代码:</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/waifu.css&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;waifu&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 提示框 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;waifu-tips&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 看板娘画布 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;live2d&quot;</span> <span class="attr">class</span>=<span class="string">&quot;live2d&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 工具栏 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;waifu-tool&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;fui-home&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;fui-chat&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;fui-eye&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;fui-user&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;fui-photo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;fui-info-circle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;fui-cross&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/js/waifu-tips.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/js/live2d.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 初始化看板娘，加载 waifu-tips.json --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">    live2d_settings[<span class="string">&#x27;modelId&#x27;</span>] = <span class="number">1</span>;                  <span class="comment">// 默认模型 ID</span></span></span><br><span class="line"><span class="javascript">    live2d_settings[<span class="string">&#x27;modelTexturesId&#x27;</span>] = <span class="number">0</span>;          <span class="comment">// 默认材质 ID</span></span></span><br><span class="line"><span class="javascript">    live2d_settings[<span class="string">&#x27;waifuEdgeSide&#x27;</span>] = <span class="string">&#x27;left:0&#x27;</span>;   <span class="comment">// 看板娘贴边方向，例如 &#x27;left:0&#x27;(靠左 0px), &#x27;right:30&#x27;(靠右 30px)</span></span></span><br><span class="line"><span class="javascript">    live2d_settings[<span class="string">&#x27;waifuDraggable&#x27;</span>] = <span class="string">&#x27;disable&#x27;</span>;    <span class="comment">// 拖拽样式，例如 &#x27;disable&#x27;(禁用), &#x27;axis-x&#x27;(只能水平拖拽), &#x27;unlimited&#x27;(自由拖拽)</span></span></span><br><span class="line"><span class="javascript">    live2d_settings[<span class="string">&#x27;homePageUrl&#x27;</span>] = <span class="string">&#x27;https://hvnobug.com&#x27;</span>; <span class="comment">// 主页地址 &#x27;&#123;URL 网址&#125;&#x27;</span></span></span><br><span class="line"><span class="javascript">    live2d_settings[<span class="string">&#x27;aboutPageUrl&#x27;</span>] = <span class="string">&#x27;/about&#x27;</span>; <span class="comment">// 关于页地址, &#x27;&#123;URL 网址&#125;&#x27;</span></span></span><br><span class="line"><span class="javascript">    live2d_settings[<span class="string">&#x27;hitokotoAPI&#x27;</span>] = <span class="string">&#x27;fghrsh.net&#x27;</span> <span class="comment">// 一言 API，可选 &#x27;lwl12.com&#x27;, &#x27;hitokoto.cn&#x27;, &#x27;jinrishici.com&#x27;(古诗词)</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">/* 在 initModel 前添加 */</span></span></span><br><span class="line"><span class="javascript">    initModel(<span class="string">&quot;/waifu-tips.json&quot;</span>);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>更多 live2d_sttings 配置请<a href="#toc-heading-5">点击这里</a></p></blockquote><h3 id="31-waifucss"><a class="markdownIt-Anchor" href="#31-waifucss"></a> 3.1. waifu.css</h3><blockquote><p>waifu.css 文件 👇</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.waifu</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">0</span>;</span><br><span class="line">    -webkit-<span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">3px</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">3px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.waifu</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    -webkit-<span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.waifu-tips</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin</span>: -<span class="number">20px</span> <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">rgba</span>(<span class="number">224</span>, <span class="number">186</span>, <span class="number">140</span>, <span class="number">0.62</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">236</span>, <span class="number">217</span>, <span class="number">188</span>, <span class="number">0.5</span>);</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">3px</span> <span class="number">15px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">191</span>, <span class="number">158</span>, <span class="number">118</span>, <span class="number">0.2</span>);</span><br><span class="line">    <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">animation-delay</span>: <span class="number">5s</span>;</span><br><span class="line">    <span class="attribute">animation-duration</span>: <span class="number">50s</span>;</span><br><span class="line">    <span class="attribute">animation-iteration-count</span>: infinite;</span><br><span class="line">    <span class="attribute">animation-name</span>: shake;</span><br><span class="line">    <span class="attribute">animation-timing-function</span>: ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.waifu-tool</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#aaa</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.waifu</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.waifu-tool</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.waifu-tool</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#5b6c7d</span>;</span><br><span class="line">    <span class="attribute">transition</span>: <span class="number">0.2s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.waifu-tool</span> <span class="selector-tag">span</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#34495e</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.waifu</span> <span class="selector-id">#live2d</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> shake &#123;</span><br><span class="line">    <span class="number">2%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0.5px</span>, -<span class="number">1.5px</span>) <span class="built_in">rotate</span>(-<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">4%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0.5px</span>, <span class="number">1.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">6%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">1.5px</span>, <span class="number">1.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">8%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">2.5px</span>, <span class="number">1.5px</span>) <span class="built_in">rotate</span>(<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">10%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0.5px</span>, <span class="number">2.5px</span>) <span class="built_in">rotate</span>(<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">12%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">1.5px</span>, <span class="number">1.5px</span>) <span class="built_in">rotate</span>(<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">14%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0.5px</span>, <span class="number">0.5px</span>) <span class="built_in">rotate</span>(<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">16%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">1.5px</span>, -<span class="number">0.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">18%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0.5px</span>, <span class="number">0.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">20%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">2.5px</span>, <span class="number">2.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">22%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0.5px</span>, -<span class="number">1.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">24%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">1.5px</span>, <span class="number">1.5px</span>) <span class="built_in">rotate</span>(-<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">26%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">1.5px</span>, <span class="number">0.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">28%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">0.5px</span>, -<span class="number">0.5px</span>) <span class="built_in">rotate</span>(-<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">30%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">1.5px</span>, -<span class="number">0.5px</span>) <span class="built_in">rotate</span>(-<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">32%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">2.5px</span>, -<span class="number">1.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">34%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">2.5px</span>, <span class="number">2.5px</span>) <span class="built_in">rotate</span>(-<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">36%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0.5px</span>, -<span class="number">1.5px</span>) <span class="built_in">rotate</span>(<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">38%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">2.5px</span>, -<span class="number">0.5px</span>) <span class="built_in">rotate</span>(-<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">40%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">0.5px</span>, <span class="number">2.5px</span>) <span class="built_in">rotate</span>(<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">42%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">1.5px</span>, <span class="number">2.5px</span>) <span class="built_in">rotate</span>(<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">44%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">1.5px</span>, <span class="number">1.5px</span>) <span class="built_in">rotate</span>(<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">46%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">1.5px</span>, -<span class="number">0.5px</span>) <span class="built_in">rotate</span>(-<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">48%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">2.5px</span>, -<span class="number">0.5px</span>) <span class="built_in">rotate</span>(<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">50%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">1.5px</span>, <span class="number">1.5px</span>) <span class="built_in">rotate</span>(<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">52%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">0.5px</span>, <span class="number">1.5px</span>) <span class="built_in">rotate</span>(<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">54%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">1.5px</span>, <span class="number">1.5px</span>) <span class="built_in">rotate</span>(<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">56%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0.5px</span>, <span class="number">2.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">58%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">2.5px</span>, <span class="number">2.5px</span>) <span class="built_in">rotate</span>(<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">60%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">2.5px</span>, -<span class="number">1.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">62%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">1.5px</span>, <span class="number">0.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">64%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">1.5px</span>, <span class="number">1.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">66%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0.5px</span>, <span class="number">2.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">68%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">2.5px</span>, -<span class="number">1.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">70%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">2.5px</span>, <span class="number">2.5px</span>) <span class="built_in">rotate</span>(<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">72%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">0.5px</span>, -<span class="number">1.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">74%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">1.5px</span>, <span class="number">2.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">76%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">1.5px</span>, <span class="number">2.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">78%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">1.5px</span>, <span class="number">2.5px</span>) <span class="built_in">rotate</span>(<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">80%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">1.5px</span>, <span class="number">0.5px</span>) <span class="built_in">rotate</span>(-<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">82%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">1.5px</span>, <span class="number">0.5px</span>) <span class="built_in">rotate</span>(-<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">84%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">0.5px</span>, <span class="number">0.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">86%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">2.5px</span>, <span class="number">1.5px</span>) <span class="built_in">rotate</span>(<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">88%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">1.5px</span>, <span class="number">0.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">90%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">1.5px</span>, -<span class="number">0.5px</span>) <span class="built_in">rotate</span>(-<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">92%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">1.5px</span>, -<span class="number">1.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">94%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0.5px</span>, <span class="number">0.5px</span>) <span class="built_in">rotate</span>(-<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">96%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">2.5px</span>, -<span class="number">0.5px</span>) <span class="built_in">rotate</span>(-<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">98%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">1.5px</span>, -<span class="number">1.5px</span>) <span class="built_in">rotate</span>(-<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">0%</span>, <span class="number">100%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0</span>, <span class="number">0</span>) <span class="built_in">rotate</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&#x27;Flat-UI-Icons&#x27;</span>;</span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;flat-ui-icons-regular.eot&#x27;</span>);</span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;flat-ui-icons-regular.eot?#iefix&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;embedded-opentype&#x27;</span>), <span class="built_in">url</span>(<span class="string">&#x27;flat-ui-icons-regular.woff&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;woff&#x27;</span>), <span class="built_in">url</span>(<span class="string">&#x27;flat-ui-icons-regular.ttf&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;truetype&#x27;</span>), <span class="built_in">url</span>(<span class="string">&#x27;flat-ui-icons-regular.svg#flat-ui-icons-regular&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;svg&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[class^=<span class="string">&quot;fui-&quot;</span>]</span>,</span><br><span class="line"><span class="selector-attr">[class*=<span class="string">&quot;fui-&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&#x27;Flat-UI-Icons&#x27;</span>;</span><br><span class="line">  speak: none;</span><br><span class="line">  <span class="attribute">font-style</span>: normal;</span><br><span class="line">  <span class="attribute">font-weight</span>: normal;</span><br><span class="line">  <span class="attribute">font-variant</span>: normal;</span><br><span class="line">  <span class="attribute">text-transform</span>: none;</span><br><span class="line">  -webkit-<span class="attribute">font-smoothing</span>: antialiased;</span><br><span class="line">  -moz-osx-<span class="attribute">font-smoothing</span>: grayscale;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.fui-cross</span>:before &#123;</span><br><span class="line">  content: <span class="string">&quot;\e609&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.fui-info-circle</span>:before &#123;</span><br><span class="line">  content: <span class="string">&quot;\e60f&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.fui-photo</span>:before &#123;</span><br><span class="line">  content: <span class="string">&quot;\e62a&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.fui-eye</span>:before &#123;</span><br><span class="line">  content: <span class="string">&quot;\e62c&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.fui-chat</span>:before &#123;</span><br><span class="line">  content: <span class="string">&quot;\e62d&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.fui-home</span>:before &#123;</span><br><span class="line">  content: <span class="string">&quot;\e62e&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.fui-user</span>:before &#123;</span><br><span class="line">  content: <span class="string">&quot;\e631&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="32-waifu-tipsjs"><a class="markdownIt-Anchor" href="#32-waifu-tipsjs"></a> 3.2. waifu-tips.js</h3><blockquote><p>waifu-tips.js 文件 👇</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.live2d_settings = <span class="built_in">Array</span>(); <span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    く__,.ヘヽ.　　　　/　,ー､ 〉</span></span><br><span class="line"><span class="comment">    　　　　　＼ &#x27;, !-─‐-i　/　/´</span></span><br><span class="line"><span class="comment">    　　　 　 ／｀ｰ&#x27;　　　 L/／｀ヽ､            Live2D 看板娘 参数设置</span></span><br><span class="line"><span class="comment">    　　 　 /　 ／,　 /|　 ,　 ,　　　 &#x27;,                                           Version 1.4.2</span></span><br><span class="line"><span class="comment">    　　　ｲ 　/ /-‐/　ｉ　L_ ﾊ ヽ!　 i                            Update 2018.11.12</span></span><br><span class="line"><span class="comment">    　　　 ﾚ ﾍ 7ｲ｀ﾄ　 ﾚ&#x27;ｧ-ﾄ､!ハ|　 |  </span></span><br><span class="line"><span class="comment">    　　　　 !,/7 &#x27;0&#x27;　　 ´0iソ| 　 |　　　</span></span><br><span class="line"><span class="comment">    　　　　 |.从&quot;　　_　　 ,,,, / |./ 　 |             网页添加 Live2D 看板娘</span></span><br><span class="line"><span class="comment">    　　　　 ﾚ&#x27;| i＞.､,,__　_,.イ / 　.i 　|                    https://www.fghrsh.net/post/123.html</span></span><br><span class="line"><span class="comment">    　　　　　 ﾚ&#x27;| | / k_７_/ﾚ&#x27;ヽ,　ﾊ.　|           </span></span><br><span class="line"><span class="comment">    　　　　　　 | |/i 〈|/　 i　,.ﾍ |　i　|    Thanks</span></span><br><span class="line"><span class="comment">    　　　　　　.|/ /　ｉ： 　 ﾍ!　　＼　|          journey-ad / https://github.com/journey-ad/live2d_src</span></span><br><span class="line"><span class="comment">    　　　 　 　 kヽ&gt;､ﾊ 　 _,.ﾍ､ 　 /､!            xiazeyu / https://github.com/xiazeyu/live2d-widget.js</span></span><br><span class="line"><span class="comment">    　　　　　　 !&#x27;〈//｀Ｔ´&#x27;, ＼ ｀&#x27;7&#x27;ｰr&#x27;          Live2d Cubism SDK WebGL 2.1 Projrct &amp; All model authors.</span></span><br><span class="line"><span class="comment">    　　　　　　 ﾚ&#x27;ヽL__|___i,___,ンﾚ|ノ</span></span><br><span class="line"><span class="comment">    　　　　　 　　　ﾄ-,/　|___./</span></span><br><span class="line"><span class="comment">    　　　　　 　　　&#x27;ｰ&#x27;　　!_,.:*********************************************************************************/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 后端接口</span></span><br><span class="line">live2d_settings[<span class="string">&#x27;modelAPI&#x27;</span>]             = <span class="string">&#x27;//live2d.fghrsh.net/api/&#x27;</span>;   <span class="comment">// 自建 API 修改这里</span></span><br><span class="line">live2d_settings[<span class="string">&#x27;tipsMessage&#x27;</span>]          = <span class="string">&#x27;waifu-tips.json&#x27;</span>;            <span class="comment">// 同目录下可省略路径</span></span><br><span class="line">live2d_settings[<span class="string">&#x27;hitokotoAPI&#x27;</span>]          = <span class="string">&#x27;lwl12.com&#x27;</span>;                  <span class="comment">// 一言 API，可选 &#x27;lwl12.com&#x27;, &#x27;hitokoto.cn&#x27;, &#x27;jinrishici.com&#x27;(古诗词)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 默认模型</span></span><br><span class="line">live2d_settings[<span class="string">&#x27;modelId&#x27;</span>]              = <span class="number">1</span>;            <span class="comment">// 默认模型 ID，可在 F12 控制台找到</span></span><br><span class="line">live2d_settings[<span class="string">&#x27;modelTexturesId&#x27;</span>]      = <span class="number">53</span>;           <span class="comment">// 默认材质 ID，可在 F12 控制台找到</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 工具栏设置</span></span><br><span class="line">live2d_settings[<span class="string">&#x27;showToolMenu&#x27;</span>]         = <span class="literal">true</span>;         <span class="comment">// 显示 工具栏          ，可选 true(真), false(假)</span></span><br><span class="line">live2d_settings[<span class="string">&#x27;canCloseLive2d&#x27;</span>]       = <span class="literal">true</span>;         <span class="comment">// 显示 关闭看板娘  按钮，可选 true(真), false(假)</span></span><br><span class="line">live2d_settings[<span class="string">&#x27;canSwitchModel&#x27;</span>]       = <span class="literal">true</span>;         <span class="comment">// 显示 模型切换    按钮，可选 true(真), false(假)</span></span><br><span class="line">live2d_settings[<span class="string">&#x27;canSwitchTextures&#x27;</span>]    = <span class="literal">true</span>;         <span class="comment">// 显示 材质切换    按钮，可选 true(真), false(假)</span></span><br><span class="line">live2d_settings[<span class="string">&#x27;canSwitchHitokoto&#x27;</span>]    = <span class="literal">true</span>;         <span class="comment">// 显示 一言切换    按钮，可选 true(真), false(假)</span></span><br><span class="line">live2d_settings[<span class="string">&#x27;canTakeScreenshot&#x27;</span>]    = <span class="literal">true</span>;         <span class="comment">// 显示 看板娘截图  按钮，可选 true(真), false(假)</span></span><br><span class="line">live2d_settings[<span class="string">&#x27;canTurnToHomePage&#x27;</span>]    = <span class="literal">true</span>;         <span class="comment">// 显示 返回首页    按钮，可选 true(真), false(假)</span></span><br><span class="line">live2d_settings[<span class="string">&#x27;canTurnToAboutPage&#x27;</span>]   = <span class="literal">true</span>;         <span class="comment">// 显示 跳转关于页  按钮，可选 true(真), false(假)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 模型切换模式</span></span><br><span class="line">live2d_settings[<span class="string">&#x27;modelStorage&#x27;</span>]         = <span class="literal">true</span>;         <span class="comment">// 记录 ID (刷新后恢复)，可选 true(真), false(假)</span></span><br><span class="line">live2d_settings[<span class="string">&#x27;modelRandMode&#x27;</span>]        = <span class="string">&#x27;switch&#x27;</span>;     <span class="comment">// 模型切换，可选 &#x27;rand&#x27;(随机), &#x27;switch&#x27;(顺序)</span></span><br><span class="line">live2d_settings[<span class="string">&#x27;modelTexturesRandMode&#x27;</span>]= <span class="string">&#x27;rand&#x27;</span>;       <span class="comment">// 材质切换，可选 &#x27;rand&#x27;(随机), &#x27;switch&#x27;(顺序)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 提示消息选项</span></span><br><span class="line">live2d_settings[<span class="string">&#x27;showHitokoto&#x27;</span>]         = <span class="literal">true</span>;         <span class="comment">// 显示一言</span></span><br><span class="line">live2d_settings[<span class="string">&#x27;showF12Status&#x27;</span>]        = <span class="literal">true</span>;         <span class="comment">// 显示加载状态</span></span><br><span class="line">live2d_settings[<span class="string">&#x27;showF12Message&#x27;</span>]       = <span class="literal">false</span>;        <span class="comment">// 显示看板娘消息</span></span><br><span class="line">live2d_settings[<span class="string">&#x27;showF12OpenMsg&#x27;</span>]       = <span class="literal">true</span>;         <span class="comment">// 显示控制台打开提示</span></span><br><span class="line">live2d_settings[<span class="string">&#x27;showCopyMessage&#x27;</span>]      = <span class="literal">true</span>;         <span class="comment">// 显示 复制内容 提示</span></span><br><span class="line">live2d_settings[<span class="string">&#x27;showWelcomeMessage&#x27;</span>]   = <span class="literal">true</span>;         <span class="comment">// 显示进入面页欢迎词</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//看板娘样式设置</span></span><br><span class="line">live2d_settings[<span class="string">&#x27;waifuSize&#x27;</span>]            = <span class="string">&#x27;280x250&#x27;</span>;    <span class="comment">// 看板娘大小，例如 &#x27;280x250&#x27;, &#x27;600x535&#x27;</span></span><br><span class="line">live2d_settings[<span class="string">&#x27;waifuTipsSize&#x27;</span>]        = <span class="string">&#x27;250x70&#x27;</span>;     <span class="comment">// 提示框大小，例如 &#x27;250x70&#x27;, &#x27;570x150&#x27;</span></span><br><span class="line">live2d_settings[<span class="string">&#x27;waifuFontSize&#x27;</span>]        = <span class="string">&#x27;12px&#x27;</span>;       <span class="comment">// 提示框字体，例如 &#x27;12px&#x27;, &#x27;30px&#x27;</span></span><br><span class="line">live2d_settings[<span class="string">&#x27;waifuToolFont&#x27;</span>]        = <span class="string">&#x27;14px&#x27;</span>;       <span class="comment">// 工具栏字体，例如 &#x27;14px&#x27;, &#x27;36px&#x27;</span></span><br><span class="line">live2d_settings[<span class="string">&#x27;waifuToolLine&#x27;</span>]        = <span class="string">&#x27;20px&#x27;</span>;       <span class="comment">// 工具栏行高，例如 &#x27;20px&#x27;, &#x27;36px&#x27;</span></span><br><span class="line">live2d_settings[<span class="string">&#x27;waifuToolTop&#x27;</span>]         = <span class="string">&#x27;0px&#x27;</span>         <span class="comment">// 工具栏顶部边距，例如 &#x27;0px&#x27;, &#x27;-60px&#x27;</span></span><br><span class="line">live2d_settings[<span class="string">&#x27;waifuMinWidth&#x27;</span>]        = <span class="string">&#x27;768px&#x27;</span>;      <span class="comment">// 面页小于 指定宽度 隐藏看板娘，例如 &#x27;disable&#x27;(禁用), &#x27;768px&#x27;</span></span><br><span class="line">live2d_settings[<span class="string">&#x27;waifuEdgeSide&#x27;</span>]        = <span class="string">&#x27;left:0&#x27;</span>;     <span class="comment">// 看板娘贴边方向，例如 &#x27;left:0&#x27;(靠左 0px), &#x27;right:30&#x27;(靠右 30px)</span></span><br><span class="line">live2d_settings[<span class="string">&#x27;waifuDraggable&#x27;</span>]       = <span class="string">&#x27;disable&#x27;</span>;    <span class="comment">// 拖拽样式，例如 &#x27;disable&#x27;(禁用), &#x27;axis-x&#x27;(只能水平拖拽), &#x27;unlimited&#x27;(自由拖拽)</span></span><br><span class="line">live2d_settings[<span class="string">&#x27;waifuDraggableRevert&#x27;</span>] = <span class="literal">true</span>;         <span class="comment">// 松开鼠标还原拖拽位置，可选 true(真), false(假)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 其他杂项设置</span></span><br><span class="line">live2d_settings[<span class="string">&#x27;l2dVersion&#x27;</span>]           = <span class="string">&#x27;1.4.2&#x27;</span>;        <span class="comment">// 当前版本</span></span><br><span class="line">live2d_settings[<span class="string">&#x27;l2dVerDate&#x27;</span>]           = <span class="string">&#x27;2018.11.12&#x27;</span>; <span class="comment">// 版本更新日期</span></span><br><span class="line">live2d_settings[<span class="string">&#x27;homePageUrl&#x27;</span>]          = <span class="string">&#x27;auto&#x27;</span>;       <span class="comment">// 主页地址，可选 &#x27;auto&#x27;(自动), &#x27;&#123;URL 网址&#125;&#x27;</span></span><br><span class="line">live2d_settings[<span class="string">&#x27;aboutPageUrl&#x27;</span>]         = <span class="string">&#x27;https://www.fghrsh.net/post/123.html&#x27;</span>;   <span class="comment">// 关于页地址, &#x27;&#123;URL 网址&#125;&#x27;</span></span><br><span class="line">live2d_settings[<span class="string">&#x27;screenshotCaptureName&#x27;</span>]= <span class="string">&#x27;live2d.png&#x27;</span>; <span class="comment">// 看板娘截图文件名，例如 &#x27;live2d.png&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/****************************************************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">String</span>.prototype.render = <span class="function"><span class="keyword">function</span>(<span class="params">context</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> tokenReg = <span class="regexp">/(\\)?\&#123;([^\&#123;\&#125;\\]+)(\\)?\&#125;/g</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.replace(tokenReg, <span class="function"><span class="keyword">function</span> (<span class="params">word, slash1, token, slash2</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (slash1 || slash2) &#123; <span class="keyword">return</span> word.replace(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;&#x27;</span>); &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> variables = token.replace(<span class="regexp">/\s/g</span>, <span class="string">&#x27;&#x27;</span>).split(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> currentObject = context;</span><br><span class="line">        <span class="keyword">var</span> i, length, variable;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>, length = variables.length; i &lt; length; ++i) &#123;</span><br><span class="line">            variable = variables[i];</span><br><span class="line">            currentObject = currentObject[variable];</span><br><span class="line">            <span class="keyword">if</span> (currentObject === <span class="literal">undefined</span> || currentObject === <span class="literal">null</span>) <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> currentObject;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> re = <span class="regexp">/x/</span>;</span><br><span class="line"><span class="built_in">console</span>.log(re);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">empty</span>(<span class="params">obj</span>) </span>&#123;<span class="keyword">return</span> <span class="keyword">typeof</span> obj==<span class="string">&quot;undefined&quot;</span>||obj==<span class="literal">null</span>||obj==<span class="string">&quot;&quot;</span>?<span class="literal">true</span>:<span class="literal">false</span>&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getRandText</span>(<span class="params">text</span>) </span>&#123;<span class="keyword">return</span> <span class="built_in">Array</span>.isArray(text) ? text[<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * text.length + <span class="number">1</span>)-<span class="number">1</span>] : text&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showMessage</span>(<span class="params">text, timeout, flag</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(flag || sessionStorage.getItem(<span class="string">&#x27;waifu-text&#x27;</span>) === <span class="string">&#x27;&#x27;</span> || sessionStorage.getItem(<span class="string">&#x27;waifu-text&#x27;</span>) === <span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">Array</span>.isArray(text)) text = text[<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * text.length + <span class="number">1</span>)-<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span> (live2d_settings.showF12Message) <span class="built_in">console</span>.log(<span class="string">&#x27;[Message]&#x27;</span>, text.replace(<span class="regexp">/&lt;[^&lt;&gt;]+&gt;/g</span>,<span class="string">&#x27;&#x27;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(flag) sessionStorage.setItem(<span class="string">&#x27;waifu-text&#x27;</span>, text);</span><br><span class="line">        </span><br><span class="line">        $(<span class="string">&#x27;.waifu-tips&#x27;</span>).stop();</span><br><span class="line">        $(<span class="string">&#x27;.waifu-tips&#x27;</span>).html(text).fadeTo(<span class="number">200</span>, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (timeout === <span class="literal">undefined</span>) timeout = <span class="number">5000</span>;</span><br><span class="line">        hideMessage(timeout);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hideMessage</span>(<span class="params">timeout</span>) </span>&#123;</span><br><span class="line">    $(<span class="string">&#x27;.waifu-tips&#x27;</span>).stop().css(<span class="string">&#x27;opacity&#x27;</span>,<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (timeout === <span class="literal">undefined</span>) timeout = <span class="number">5000</span>;</span><br><span class="line">    <span class="built_in">window</span>.setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;sessionStorage.removeItem(<span class="string">&#x27;waifu-text&#x27;</span>)&#125;, timeout);</span><br><span class="line">    $(<span class="string">&#x27;.waifu-tips&#x27;</span>).delay(timeout).fadeTo(<span class="number">200</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">initModel</span>(<span class="params">waifuPath, type</span>) </span>&#123;</span><br><span class="line">    <span class="comment">/* console welcome message */</span></span><br><span class="line">    <span class="built_in">eval</span>(<span class="function"><span class="keyword">function</span>(<span class="params">p,a,c,k,e,r</span>)</span>&#123;e=<span class="function"><span class="keyword">function</span>(<span class="params">c</span>)</span>&#123;<span class="keyword">return</span>(c&lt;a?<span class="string">&#x27;&#x27;</span>:e(<span class="built_in">parseInt</span>(c/a)))+((c=c%a)&gt;<span class="number">35</span>?<span class="built_in">String</span>.fromCharCode(c+<span class="number">29</span>):c.toString(<span class="number">36</span>))&#125;;<span class="keyword">if</span>(!<span class="string">&#x27;&#x27;</span>.replace(<span class="regexp">/^/</span>,<span class="built_in">String</span>))&#123;<span class="keyword">while</span>(c--)r[e(c)]=k[c]||e(c);k=[<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> r[e]&#125;];e=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">&#x27;\\w+&#x27;</span>&#125;;c=<span class="number">1</span>&#125;;<span class="keyword">while</span>(c--)<span class="keyword">if</span>(k[c])p=p.replace(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&#x27;\\b&#x27;</span>+e(c)+<span class="string">&#x27;\\b&#x27;</span>,<span class="string">&#x27;g&#x27;</span>),k[c]);<span class="keyword">return</span> p&#125;(<span class="string">&#x27;8.d(&quot; &quot;);8.d(&quot;\\U,.\\y\\5.\\1\\1\\1\\1/\\1,\\u\\2 \\H\\n\\1\\1\\1\\1\\1\\b \&#x27;, !-\\r\\j-i\\1/\\1/\\g\\n\\1\\1\\1 \\1 \\a\\4\\f\&#x27;\\1\\1\\1 L/\\a\\4\\5\\2\\n\\1\\1 \\1 /\\1 \\a,\\1 /|\\1 ,\\1 ,\\1\\1\\1 \&#x27;,\\n\\1\\1\\1\\q \\1/ /-\\j/\\1\\h\\E \\9 \\5!\\1 i\\n\\1\\1\\1 \\3 \\6 7\\q\\4\\c\\1 \\3\&#x27;\\s-\\c\\2!\\t|\\1 |\\n\\1\\1\\1\\1 !,/7 \&#x27;0\&#x27;\\1\\1 \\X\\w| \\1 |\\1\\1\\1\\n\\1\\1\\1\\1 |.\\x\\&quot;\\1\\l\\1\\1 ,,,, / |./ \\1 |\\n\\1\\1\\1\\1 \\3\&#x27;| i\\z.\\2,,A\\l,.\\B / \\1.i \\1|\\n\\1\\1\\1\\1\\1 \\3\&#x27;| | / C\\D/\\3\&#x27;\\5,\\1\\9.\\1|\\n\\1\\1\\1\\1\\1\\1 | |/i \\m|/\\1 i\\1,.\\6 |\\F\\1|\\n\\1\\1\\1\\1\\1\\1.|/ /\\1\\h\\G \\1 \\6!\\1\\1\\b\\1|\\n\\1\\1\\1 \\1 \\1 k\\5&gt;\\2\\9 \\1 o,.\\6\\2 \\1 /\\2!\\n\\1\\1\\1\\1\\1\\1 !\&#x27;\\m//\\4\\I\\g\&#x27;, \\b \\4\&#x27;7\&#x27;\\J\&#x27;\\n\\1\\1\\1\\1\\1\\1 \\3\&#x27;\\K|M,p,\\O\\3|\\P\\n\\1\\1\\1\\1\\1 \\1\\1\\1\\c-,/\\1|p./\\n\\1\\1\\1\\1\\1 \\1\\1\\1\&#x27;\\f\&#x27;\\1\\1!o,.:\\Q \\R\\S\\T v&quot;+e.V+&quot; / W &quot;+e.N);8.d(&quot; &quot;);&#x27;</span>,<span class="number">60</span>,<span class="number">60</span>,<span class="string">&#x27;|u3000|uff64|uff9a|uff40|u30fd|uff8d||console|uff8a|uff0f|uff3c|uff84|log|live2d_settings|uff70|u00b4|uff49||u2010||u3000_|u3008||_|___|uff72|u2500|uff67|u30cf|u30fc||u30bd|u4ece|u30d8|uff1e|__|u30a4|k_|uff17_|u3000L_|u3000i|uff1a|u3009|uff34|uff70r|u30fdL__||___i|l2dVerDate|u30f3|u30ce|nLive2D|u770b|u677f|u5a18|u304f__|l2dVersion|FGHRSH|u00b40i&#x27;</span>.split(<span class="string">&#x27;|&#x27;</span>),<span class="number">0</span>,&#123;&#125;));</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 判断 JQuery */</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span>($.ajax) != <span class="string">&#x27;function&#x27;</span>) <span class="keyword">typeof</span>(jQuery.ajax) == <span class="string">&#x27;function&#x27;</span> ? <span class="built_in">window</span>.$ = jQuery : <span class="built_in">console</span>.log(<span class="string">&#x27;[Error] JQuery is not defined.&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/* 加载看板娘样式 */</span></span><br><span class="line">    live2d_settings.waifuSize = live2d_settings.waifuSize.split(<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">    live2d_settings.waifuTipsSize = live2d_settings.waifuTipsSize.split(<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">    live2d_settings.waifuEdgeSide = live2d_settings.waifuEdgeSide.split(<span class="string">&#x27;:&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    $(<span class="string">&quot;#live2d&quot;</span>).attr(<span class="string">&quot;width&quot;</span>,live2d_settings.waifuSize[<span class="number">0</span>]);</span><br><span class="line">    $(<span class="string">&quot;#live2d&quot;</span>).attr(<span class="string">&quot;height&quot;</span>,live2d_settings.waifuSize[<span class="number">1</span>]);</span><br><span class="line">    $(<span class="string">&quot;.waifu-tips&quot;</span>).width(live2d_settings.waifuTipsSize[<span class="number">0</span>]);</span><br><span class="line">    $(<span class="string">&quot;.waifu-tips&quot;</span>).height(live2d_settings.waifuTipsSize[<span class="number">1</span>]);</span><br><span class="line">    $(<span class="string">&quot;.waifu-tips&quot;</span>).css(<span class="string">&quot;top&quot;</span>,live2d_settings.waifuToolTop);</span><br><span class="line">    $(<span class="string">&quot;.waifu-tips&quot;</span>).css(<span class="string">&quot;font-size&quot;</span>,live2d_settings.waifuFontSize);</span><br><span class="line">    $(<span class="string">&quot;.waifu-tool&quot;</span>).css(<span class="string">&quot;font-size&quot;</span>,live2d_settings.waifuToolFont);</span><br><span class="line">    $(<span class="string">&quot;.waifu-tool span&quot;</span>).css(<span class="string">&quot;line-height&quot;</span>,live2d_settings.waifuToolLine);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (live2d_settings.waifuEdgeSide[<span class="number">0</span>] == <span class="string">&#x27;left&#x27;</span>) $(<span class="string">&quot;.waifu&quot;</span>).css(<span class="string">&quot;left&quot;</span>,live2d_settings.waifuEdgeSide[<span class="number">1</span>]+<span class="string">&#x27;px&#x27;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (live2d_settings.waifuEdgeSide[<span class="number">0</span>] == <span class="string">&#x27;right&#x27;</span>) $(<span class="string">&quot;.waifu&quot;</span>).css(<span class="string">&quot;right&quot;</span>,live2d_settings.waifuEdgeSide[<span class="number">1</span>]+<span class="string">&#x27;px&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">window</span>.waifuResize = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; $(<span class="built_in">window</span>).width() &lt;= <span class="built_in">Number</span>(live2d_settings.waifuMinWidth.replace(<span class="string">&#x27;px&#x27;</span>,<span class="string">&#x27;&#x27;</span>)) ? $(<span class="string">&quot;.waifu&quot;</span>).hide() : $(<span class="string">&quot;.waifu&quot;</span>).show(); &#125;;</span><br><span class="line">    <span class="keyword">if</span> (live2d_settings.waifuMinWidth != <span class="string">&#x27;disable&#x27;</span>) &#123; waifuResize(); $(<span class="built_in">window</span>).resize(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;waifuResize()&#125;); &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (live2d_settings.waifuDraggable == <span class="string">&#x27;axis-x&#x27;</span>) $(<span class="string">&quot;.waifu&quot;</span>).draggable(&#123; <span class="attr">axis</span>: <span class="string">&quot;x&quot;</span>, <span class="attr">revert</span>: live2d_settings.waifuDraggableRevert &#125;);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (live2d_settings.waifuDraggable == <span class="string">&#x27;unlimited&#x27;</span>) $(<span class="string">&quot;.waifu&quot;</span>).draggable(&#123; <span class="attr">revert</span>: live2d_settings.waifuDraggableRevert &#125;);</span><br><span class="line">        <span class="keyword">else</span> $(<span class="string">&quot;.waifu&quot;</span>).css(<span class="string">&quot;transition&quot;</span>, <span class="string">&#x27;all .3s ease-in-out&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span>(err) &#123; <span class="built_in">console</span>.log(<span class="string">&#x27;[Error] JQuery UI is not defined.&#x27;</span>) &#125;</span><br><span class="line">    </span><br><span class="line">    live2d_settings.homePageUrl == <span class="string">&#x27;auto&#x27;</span> ? <span class="built_in">window</span>.location.protocol+<span class="string">&#x27;//&#x27;</span>+<span class="built_in">window</span>.location.hostname+<span class="string">&#x27;/&#x27;</span> : live2d_settings.homePageUrl;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">window</span>.location.protocol == <span class="string">&#x27;file:&#x27;</span> &amp;&amp; live2d_settings.modelAPI.substr(<span class="number">0</span>,<span class="number">2</span>) == <span class="string">&#x27;//&#x27;</span>) live2d_settings.modelAPI = <span class="string">&#x27;http:&#x27;</span>+live2d_settings.modelAPI;</span><br><span class="line">    </span><br><span class="line">    $(<span class="string">&#x27;.waifu-tool .fui-home&#x27;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">//window.location = &#x27;https://www.fghrsh.net/&#x27;;</span></span><br><span class="line">        <span class="built_in">window</span>.location = live2d_settings.homePageUrl;</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    $(<span class="string">&#x27;.waifu-tool .fui-info-circle&#x27;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">//window.open(&#x27;https://imjad.cn/archives/lab/add-dynamic-poster-girl-with-live2d-to-your-blog-02&#x27;);</span></span><br><span class="line">        <span class="built_in">window</span>.open(live2d_settings.aboutPageUrl);</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span>(waifuPath) == <span class="string">&quot;object&quot;</span>) loadTipsMessage(waifuPath); <span class="keyword">else</span> &#123;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            cache: <span class="literal">true</span>,</span><br><span class="line">            url: waifuPath == <span class="string">&#x27;&#x27;</span> ? live2d_settings.tipsMessage : (waifuPath.substr(waifuPath.length-<span class="number">15</span>)==<span class="string">&#x27;waifu-tips.json&#x27;</span>?waifuPath:waifuPath+<span class="string">&#x27;waifu-tips.json&#x27;</span>),</span><br><span class="line">            dataType: <span class="string">&quot;json&quot;</span>,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span> (<span class="params">result</span>)</span>&#123; loadTipsMessage(result); &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (!live2d_settings.showToolMenu) $(<span class="string">&#x27;.waifu-tool&#x27;</span>).hide();</span><br><span class="line">    <span class="keyword">if</span> (!live2d_settings.canCloseLive2d) $(<span class="string">&#x27;.waifu-tool .fui-cross&#x27;</span>).hide();</span><br><span class="line">    <span class="keyword">if</span> (!live2d_settings.canSwitchModel) $(<span class="string">&#x27;.waifu-tool .fui-eye&#x27;</span>).hide();</span><br><span class="line">    <span class="keyword">if</span> (!live2d_settings.canSwitchTextures) $(<span class="string">&#x27;.waifu-tool .fui-user&#x27;</span>).hide();</span><br><span class="line">    <span class="keyword">if</span> (!live2d_settings.canSwitchHitokoto) $(<span class="string">&#x27;.waifu-tool .fui-chat&#x27;</span>).hide();</span><br><span class="line">    <span class="keyword">if</span> (!live2d_settings.canTakeScreenshot) $(<span class="string">&#x27;.waifu-tool .fui-photo&#x27;</span>).hide();</span><br><span class="line">    <span class="keyword">if</span> (!live2d_settings.canTurnToHomePage) $(<span class="string">&#x27;.waifu-tool .fui-home&#x27;</span>).hide();</span><br><span class="line">    <span class="keyword">if</span> (!live2d_settings.canTurnToAboutPage) $(<span class="string">&#x27;.waifu-tool .fui-info-circle&#x27;</span>).hide();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (waifuPath === <span class="literal">undefined</span>) waifuPath = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">var</span> modelId = <span class="built_in">localStorage</span>.getItem(<span class="string">&#x27;modelId&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> modelTexturesId = <span class="built_in">localStorage</span>.getItem(<span class="string">&#x27;modelTexturesId&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (!live2d_settings.modelStorage || modelId == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> modelId = live2d_settings.modelId;</span><br><span class="line">        <span class="keyword">var</span> modelTexturesId = live2d_settings.modelTexturesId;</span><br><span class="line">    &#125; loadModel(modelId, modelTexturesId);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">loadModel</span>(<span class="params">modelId, modelTexturesId=<span class="number">0</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (live2d_settings.modelStorage) &#123;</span><br><span class="line">        <span class="built_in">localStorage</span>.setItem(<span class="string">&#x27;modelId&#x27;</span>, modelId);</span><br><span class="line">        <span class="built_in">localStorage</span>.setItem(<span class="string">&#x27;modelTexturesId&#x27;</span>, modelTexturesId);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        sessionStorage.setItem(<span class="string">&#x27;modelId&#x27;</span>, modelId);</span><br><span class="line">        sessionStorage.setItem(<span class="string">&#x27;modelTexturesId&#x27;</span>, modelTexturesId);</span><br><span class="line">    &#125; loadlive2d(<span class="string">&#x27;live2d&#x27;</span>, live2d_settings.modelAPI+<span class="string">&#x27;get/?id=&#x27;</span>+modelId+<span class="string">&#x27;-&#x27;</span>+modelTexturesId, (live2d_settings.showF12Status ? <span class="built_in">console</span>.log(<span class="string">&#x27;[Status]&#x27;</span>,<span class="string">&#x27;live2d&#x27;</span>,<span class="string">&#x27;模型&#x27;</span>,modelId+<span class="string">&#x27;-&#x27;</span>+modelTexturesId,<span class="string">&#x27;加载完成&#x27;</span>):<span class="literal">null</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">loadTipsMessage</span>(<span class="params">result</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">window</span>.waifu_tips = result;</span><br><span class="line"></span><br><span class="line">    $.each(result.mouseover, <span class="function"><span class="keyword">function</span> (<span class="params">index, tips</span>)</span>&#123;</span><br><span class="line">        $(<span class="built_in">document</span>).on(<span class="string">&quot;mouseover&quot;</span>, tips.selector, <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> text = getRandText(tips.text);</span><br><span class="line">            text = text.render(&#123;<span class="attr">text</span>: $(<span class="built_in">this</span>).text()&#125;);</span><br><span class="line">            showMessage(text, <span class="number">3000</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    $.each(result.click, <span class="function"><span class="keyword">function</span> (<span class="params">index, tips</span>)</span>&#123;</span><br><span class="line">        $(<span class="built_in">document</span>).on(<span class="string">&quot;click&quot;</span>, tips.selector, <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> text = getRandText(tips.text);</span><br><span class="line">            text = text.render(&#123;<span class="attr">text</span>: $(<span class="built_in">this</span>).text()&#125;);</span><br><span class="line">            showMessage(text, <span class="number">3000</span>, <span class="literal">true</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    $.each(result.seasons, <span class="function"><span class="keyword">function</span> (<span class="params">index, tips</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">        <span class="keyword">var</span> after = tips.date.split(<span class="string">&#x27;-&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">var</span> before = tips.date.split(<span class="string">&#x27;-&#x27;</span>)[<span class="number">1</span>] || after;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>((after.split(<span class="string">&#x27;/&#x27;</span>)[<span class="number">0</span>] &lt;= now.getMonth()+<span class="number">1</span> &amp;&amp; now.getMonth()+<span class="number">1</span> &lt;= before.split(<span class="string">&#x27;/&#x27;</span>)[<span class="number">0</span>]) &amp;&amp; </span><br><span class="line">           (after.split(<span class="string">&#x27;/&#x27;</span>)[<span class="number">1</span>] &lt;= now.getDate() &amp;&amp; now.getDate() &lt;= before.split(<span class="string">&#x27;/&#x27;</span>)[<span class="number">1</span>]))&#123;</span><br><span class="line">            <span class="keyword">var</span> text = getRandText(tips.text);</span><br><span class="line">            text = text.render(&#123;<span class="attr">year</span>: now.getFullYear()&#125;);</span><br><span class="line">            showMessage(text, <span class="number">6000</span>, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (live2d_settings.showF12OpenMsg) &#123;</span><br><span class="line">        re.toString = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            showMessage(getRandText(result.waifu.console_open_msg), <span class="number">5000</span>, <span class="literal">true</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (live2d_settings.showCopyMessage) &#123;</span><br><span class="line">        $(<span class="built_in">document</span>).on(<span class="string">&#x27;copy&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            showMessage(getRandText(result.waifu.copy_message), <span class="number">5000</span>, <span class="literal">true</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    $(<span class="string">&#x27;.waifu-tool .fui-photo&#x27;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        showMessage(getRandText(result.waifu.screenshot_message), <span class="number">5000</span>, <span class="literal">true</span>);</span><br><span class="line">        <span class="built_in">window</span>.Live2D.captureName = live2d_settings.screenshotCaptureName;</span><br><span class="line">        <span class="built_in">window</span>.Live2D.captureFrame = <span class="literal">true</span>;</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    $(<span class="string">&#x27;.waifu-tool .fui-cross&#x27;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        sessionStorage.setItem(<span class="string">&#x27;waifu-dsiplay&#x27;</span>, <span class="string">&#x27;none&#x27;</span>);</span><br><span class="line">        showMessage(getRandText(result.waifu.hidden_message), <span class="number">1300</span>, <span class="literal">true</span>);</span><br><span class="line">        <span class="built_in">window</span>.setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;$(<span class="string">&#x27;.waifu&#x27;</span>).hide();&#125;, <span class="number">1300</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">window</span>.showWelcomeMessage = <span class="function"><span class="keyword">function</span>(<span class="params">result</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> text;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">window</span>.location.href == live2d_settings.homePageUrl) &#123;</span><br><span class="line">            <span class="keyword">var</span> now = (<span class="keyword">new</span> <span class="built_in">Date</span>()).getHours();</span><br><span class="line">            <span class="keyword">if</span> (now &gt; <span class="number">23</span> || now &lt;= <span class="number">5</span>) text = getRandText(result.waifu.hour_tips.t23-<span class="number">5</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (now &gt; <span class="number">5</span> &amp;&amp; now &lt;= <span class="number">7</span>) text = getRandText(result.waifu.hour_tips.t5-<span class="number">7</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (now &gt; <span class="number">7</span> &amp;&amp; now &lt;= <span class="number">11</span>) text = getRandText(result.waifu.hour_tips.t7-<span class="number">11</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (now &gt; <span class="number">11</span> &amp;&amp; now &lt;= <span class="number">14</span>) text = getRandText(result.waifu.hour_tips.t11-<span class="number">14</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (now &gt; <span class="number">14</span> &amp;&amp; now &lt;= <span class="number">17</span>) text = getRandText(result.waifu.hour_tips.t14-<span class="number">17</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (now &gt; <span class="number">17</span> &amp;&amp; now &lt;= <span class="number">19</span>) text = getRandText(result.waifu.hour_tips.t17-<span class="number">19</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (now &gt; <span class="number">19</span> &amp;&amp; now &lt;= <span class="number">21</span>) text = getRandText(result.waifu.hour_tips.t19-<span class="number">21</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (now &gt; <span class="number">21</span> &amp;&amp; now &lt;= <span class="number">23</span>) text = getRandText(result.waifu.hour_tips.t21-<span class="number">23</span>);</span><br><span class="line">            <span class="keyword">else</span> text = getRandText(result.waifu.hour_tips.default);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">var</span> referrer_message = result.waifu.referrer_message;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">document</span>.referrer !== <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> referrer = <span class="built_in">document</span>.createElement(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">                referrer.href = <span class="built_in">document</span>.referrer;</span><br><span class="line">                <span class="keyword">var</span> domain = referrer.hostname.split(<span class="string">&#x27;.&#x27;</span>)[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">window</span>.location.hostname == referrer.hostname)</span><br><span class="line">                    text = referrer_message.localhost[<span class="number">0</span>] + <span class="built_in">document</span>.title.split(referrer_message.localhost[<span class="number">2</span>])[<span class="number">0</span>] + referrer_message.localhost[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (domain == <span class="string">&#x27;baidu&#x27;</span>)</span><br><span class="line">                    text = referrer_message.baidu[<span class="number">0</span>] + referrer.search.split(<span class="string">&#x27;&amp;wd=&#x27;</span>)[<span class="number">1</span>].split(<span class="string">&#x27;&amp;&#x27;</span>)[<span class="number">0</span>] + referrer_message.baidu[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (domain == <span class="string">&#x27;so&#x27;</span>)</span><br><span class="line">                    text = referrer_message.so[<span class="number">0</span>] + referrer.search.split(<span class="string">&#x27;&amp;q=&#x27;</span>)[<span class="number">1</span>].split(<span class="string">&#x27;&amp;&#x27;</span>)[<span class="number">0</span>] + referrer_message.so[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (domain == <span class="string">&#x27;google&#x27;</span>)</span><br><span class="line">                    text = referrer_message.google[<span class="number">0</span>] + <span class="built_in">document</span>.title.split(referrer_message.google[<span class="number">2</span>])[<span class="number">0</span>] + referrer_message.google[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    $.each(result.waifu.referrer_hostname, <span class="function"><span class="keyword">function</span>(<span class="params">i,val</span>) </span>&#123;<span class="keyword">if</span> (i==referrer.hostname) referrer.hostname = getRandText(val)&#125;);</span><br><span class="line">                    text = referrer_message.default[<span class="number">0</span>] + referrer.hostname + referrer_message.default[<span class="number">1</span>];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> text = referrer_message.none[<span class="number">0</span>] + <span class="built_in">document</span>.title.split(referrer_message.none[<span class="number">2</span>])[<span class="number">0</span>] + referrer_message.none[<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        showMessage(text, <span class="number">6000</span>);</span><br><span class="line">    &#125;; <span class="keyword">if</span> (live2d_settings.showWelcomeMessage) showWelcomeMessage(result);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> waifu_tips = result.waifu;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">loadOtherModel</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> modelId = modelStorageGetItem(<span class="string">&#x27;modelId&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> modelRandMode = live2d_settings.modelRandMode;</span><br><span class="line">        </span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            cache: modelRandMode == <span class="string">&#x27;switch&#x27;</span> ? <span class="literal">true</span> : <span class="literal">false</span>,</span><br><span class="line">            url: live2d_settings.modelAPI+modelRandMode+<span class="string">&#x27;/?id=&#x27;</span>+modelId,</span><br><span class="line">            dataType: <span class="string">&quot;json&quot;</span>,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span>(<span class="params">result</span>) </span>&#123;</span><br><span class="line">                loadModel(result.model[<span class="string">&#x27;id&#x27;</span>]);</span><br><span class="line">                <span class="keyword">var</span> message = result.model[<span class="string">&#x27;message&#x27;</span>];</span><br><span class="line">                $.each(waifu_tips.model_message, <span class="function"><span class="keyword">function</span>(<span class="params">i,val</span>) </span>&#123;<span class="keyword">if</span> (i==result.model[<span class="string">&#x27;id&#x27;</span>]) message = getRandText(val)&#125;);</span><br><span class="line">                showMessage(message, <span class="number">3000</span>, <span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">loadRandTextures</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> modelId = modelStorageGetItem(<span class="string">&#x27;modelId&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> modelTexturesId = modelStorageGetItem(<span class="string">&#x27;modelTexturesId&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> modelTexturesRandMode = live2d_settings.modelTexturesRandMode;</span><br><span class="line">        </span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            cache: modelTexturesRandMode == <span class="string">&#x27;switch&#x27;</span> ? <span class="literal">true</span> : <span class="literal">false</span>,</span><br><span class="line">            url: live2d_settings.modelAPI+modelTexturesRandMode+<span class="string">&#x27;_textures/?id=&#x27;</span>+modelId+<span class="string">&#x27;-&#x27;</span>+modelTexturesId,</span><br><span class="line">            dataType: <span class="string">&quot;json&quot;</span>,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span>(<span class="params">result</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (result.textures[<span class="string">&#x27;id&#x27;</span>] == <span class="number">1</span> &amp;&amp; (modelTexturesId == <span class="number">1</span> || modelTexturesId == <span class="number">0</span>))</span><br><span class="line">                    showMessage(waifu_tips.load_rand_textures[<span class="number">0</span>], <span class="number">3000</span>, <span class="literal">true</span>);</span><br><span class="line">                <span class="keyword">else</span> showMessage(waifu_tips.load_rand_textures[<span class="number">1</span>], <span class="number">3000</span>, <span class="literal">true</span>);</span><br><span class="line">                loadModel(modelId, result.textures[<span class="string">&#x27;id&#x27;</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">modelStorageGetItem</span>(<span class="params">key</span>) </span>&#123; <span class="keyword">return</span> live2d_settings.modelStorage ? <span class="built_in">localStorage</span>.getItem(key) : sessionStorage.getItem(key); &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/* 检测用户活动状态，并在空闲时显示一言 */</span></span><br><span class="line">    <span class="keyword">if</span> (live2d_settings.showHitokoto) &#123;</span><br><span class="line">        <span class="built_in">window</span>.getActed = <span class="literal">false</span>; <span class="built_in">window</span>.hitokotoTimer = <span class="number">0</span>; <span class="built_in">window</span>.hitokotoInterval = <span class="literal">false</span>;</span><br><span class="line">        $(<span class="built_in">document</span>).mousemove(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;getActed = <span class="literal">true</span>;&#125;).keydown(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;getActed = <span class="literal">true</span>;&#125;);</span><br><span class="line">        <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; <span class="keyword">if</span> (!getActed) ifActed(); <span class="keyword">else</span> elseActed(); &#125;, <span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ifActed</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!hitokotoInterval) &#123;</span><br><span class="line">            hitokotoInterval = <span class="literal">true</span>;</span><br><span class="line">            hitokotoTimer = <span class="built_in">window</span>.setInterval(showHitokotoActed, <span class="number">30000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">elseActed</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        getActed = hitokotoInterval = <span class="literal">false</span>;</span><br><span class="line">        <span class="built_in">window</span>.clearInterval(hitokotoTimer);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">showHitokotoActed</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ($(<span class="built_in">document</span>)[<span class="number">0</span>].visibilityState == <span class="string">&#x27;visible&#x27;</span>) showHitokoto();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">showHitokoto</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">switch</span>(live2d_settings.hitokotoAPI) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;lwl12.com&#x27;</span>:</span><br><span class="line">            $.getJSON(<span class="string">&#x27;https://api.lwl12.com/hitokoto/v1?encode=realjson&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params">result</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (!empty(result.source)) &#123;</span><br><span class="line">                        <span class="keyword">var</span> text = waifu_tips.hitokoto_api_message[<span class="string">&#x27;lwl12.com&#x27;</span>][<span class="number">0</span>];</span><br><span class="line">                        <span class="keyword">if</span> (!empty(result.author)) text += waifu_tips.hitokoto_api_message[<span class="string">&#x27;lwl12.com&#x27;</span>][<span class="number">1</span>];</span><br><span class="line">                        text = text.render(&#123;<span class="attr">source</span>: result.source, <span class="attr">creator</span>: result.author&#125;);</span><br><span class="line">                        <span class="built_in">window</span>.setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;showMessage(text+waifu_tips.hitokoto_api_message[<span class="string">&#x27;lwl12.com&#x27;</span>][<span class="number">2</span>], <span class="number">3000</span>, <span class="literal">true</span>);&#125;, <span class="number">5000</span>);</span><br><span class="line">                    &#125; showMessage(result.text, <span class="number">5000</span>, <span class="literal">true</span>);</span><br><span class="line">                &#125;);<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;fghrsh.net&#x27;</span>:</span><br><span class="line">            $.getJSON(<span class="string">&#x27;https://api.fghrsh.net/hitokoto/rand/?encode=jsc&amp;uid=3335&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params">result</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (!empty(result.source)) &#123;</span><br><span class="line">                        <span class="keyword">var</span> text = waifu_tips.hitokoto_api_message[<span class="string">&#x27;fghrsh.net&#x27;</span>][<span class="number">0</span>];</span><br><span class="line">                        text = text.render(&#123;<span class="attr">source</span>: result.source, <span class="attr">date</span>: result.date&#125;);</span><br><span class="line">                        <span class="built_in">window</span>.setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;showMessage(text, <span class="number">3000</span>, <span class="literal">true</span>);&#125;, <span class="number">5000</span>);</span><br><span class="line">                        showMessage(result.hitokoto, <span class="number">5000</span>, <span class="literal">true</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                &#125;);<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;jinrishici.com&#x27;</span>:</span><br><span class="line">                $.ajax(&#123;</span><br><span class="line">                    url: <span class="string">&#x27;https://v2.jinrishici.com/one.json&#x27;</span>,</span><br><span class="line">                    xhrFields: &#123;<span class="attr">withCredentials</span>: <span class="literal">true</span>&#125;,</span><br><span class="line">                    success: <span class="function"><span class="keyword">function</span> (<span class="params">result, status</span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">if</span> (!empty(result.data.origin.title)) &#123;</span><br><span class="line">                            <span class="keyword">var</span> text = waifu_tips.hitokoto_api_message[<span class="string">&#x27;jinrishici.com&#x27;</span>][<span class="number">0</span>];</span><br><span class="line">                            text = text.render(&#123;<span class="attr">title</span>: result.data.origin.title, <span class="attr">dynasty</span>: result.data.origin.dynasty, <span class="attr">author</span>:result.data.origin.author&#125;);</span><br><span class="line">                            <span class="built_in">window</span>.setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;showMessage(text, <span class="number">3000</span>, <span class="literal">true</span>);&#125;, <span class="number">5000</span>);</span><br><span class="line">                        &#125; showMessage(result.data.content, <span class="number">5000</span>, <span class="literal">true</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            $.getJSON(<span class="string">&#x27;https://v1.hitokoto.cn&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params">result</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (!empty(result.from)) &#123;</span><br><span class="line">                        <span class="keyword">var</span> text = waifu_tips.hitokoto_api_message[<span class="string">&#x27;hitokoto.cn&#x27;</span>][<span class="number">0</span>];</span><br><span class="line">                        text = text.render(&#123;<span class="attr">source</span>: result.from, <span class="attr">creator</span>: result.creator&#125;);</span><br><span class="line">                        <span class="built_in">window</span>.setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;showMessage(text, <span class="number">3000</span>, <span class="literal">true</span>);&#125;, <span class="number">5000</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                    showMessage(result.hitokoto, <span class="number">5000</span>, <span class="literal">true</span>);</span><br><span class="line">                &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    $(<span class="string">&#x27;.waifu-tool .fui-eye&#x27;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;loadOtherModel()&#125;);</span><br><span class="line">    $(<span class="string">&#x27;.waifu-tool .fui-user&#x27;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;loadRandTextures()&#125;);</span><br><span class="line">    $(<span class="string">&#x27;.waifu-tool .fui-chat&#x27;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;showHitokoto()&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="33-waifu-tipsjson"><a class="markdownIt-Anchor" href="#33-waifu-tipsjson"></a> 3.3. waifu-tips.json</h3><blockquote><p>waifu-tips.json 文件 👇</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;waifu&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;console_open_msg&quot;</span>: [<span class="string">&quot;哈哈，你打开了控制台，是想要看看我的秘密吗？&quot;</span>],</span><br><span class="line">        <span class="attr">&quot;copy_message&quot;</span>: [<span class="string">&quot;你都复制了些什么呀，转载要记得加上出处哦&quot;</span>],</span><br><span class="line">        <span class="attr">&quot;screenshot_message&quot;</span>: [<span class="string">&quot;照好了嘛，是不是很可爱呢？&quot;</span>],</span><br><span class="line">        <span class="attr">&quot;hidden_message&quot;</span>: [<span class="string">&quot;我们还能再见面的吧…&quot;</span>],</span><br><span class="line">        <span class="attr">&quot;load_rand_textures&quot;</span>: [<span class="string">&quot;我还没有其他衣服呢&quot;</span>, <span class="string">&quot;我的新衣服好看嘛&quot;</span>],</span><br><span class="line">        <span class="attr">&quot;hour_tips&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;t5-7&quot;</span>: [<span class="string">&quot;早上好！一日之计在于晨，美好的一天就要开始了&quot;</span>],</span><br><span class="line">            <span class="attr">&quot;t7-11&quot;</span>: [<span class="string">&quot;上午好！工作顺利嘛，不要久坐，多起来走动走动哦！&quot;</span>],</span><br><span class="line">            <span class="attr">&quot;t11-14&quot;</span>: [<span class="string">&quot;中午了，工作了一个上午，现在是午餐时间！&quot;</span>],</span><br><span class="line">            <span class="attr">&quot;t14-17&quot;</span>: [<span class="string">&quot;午后很容易犯困呢，今天的运动目标完成了吗？&quot;</span>],</span><br><span class="line">            <span class="attr">&quot;t17-19&quot;</span>: [<span class="string">&quot;傍晚了！窗外夕阳的景色很美丽呢，最美不过夕阳红~&quot;</span>],</span><br><span class="line">            <span class="attr">&quot;t19-21&quot;</span>: [<span class="string">&quot;晚上好，今天过得怎么样？&quot;</span>],</span><br><span class="line">            <span class="attr">&quot;t21-23&quot;</span>: [<span class="string">&quot;已经这么晚了呀，早点休息吧，晚安~&quot;</span>],</span><br><span class="line">            <span class="attr">&quot;t23-5&quot;</span>: [<span class="string">&quot;你是夜猫子呀？这么晚还不睡觉，明天起的来嘛&quot;</span>],</span><br><span class="line">            <span class="attr">&quot;default&quot;</span>: [<span class="string">&quot;嗨~ 快来逗我玩吧！&quot;</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;referrer_message&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;localhost&quot;</span>: [<span class="string">&quot;欢迎阅读&lt;span style=\&quot;color:#0099cc;\&quot;&gt;『&quot;</span>, <span class="string">&quot;』&lt;/span&gt;&quot;</span>, <span class="string">&quot; - &quot;</span>],</span><br><span class="line">            <span class="attr">&quot;baidu&quot;</span>: [<span class="string">&quot;Hello! 来自 百度搜索 的朋友&lt;br&gt;你是搜索 &lt;span style=\&quot;color:#0099cc;\&quot;&gt;&quot;</span>, <span class="string">&quot;&lt;/span&gt; 找到的我吗？&quot;</span>],</span><br><span class="line">            <span class="attr">&quot;so&quot;</span>: [<span class="string">&quot;Hello! 来自 360搜索 的朋友&lt;br&gt;你是搜索 &lt;span style=\&quot;color:#0099cc;\&quot;&gt;&quot;</span>, <span class="string">&quot;&lt;/span&gt; 找到的我吗？&quot;</span>],</span><br><span class="line">            <span class="attr">&quot;google&quot;</span>: [<span class="string">&quot;Hello! 来自 谷歌搜索 的朋友&lt;br&gt;欢迎阅读&lt;span style=\&quot;color:#0099cc;\&quot;&gt;『&quot;</span>, <span class="string">&quot;』&lt;/span&gt;&quot;</span>, <span class="string">&quot; - &quot;</span>],</span><br><span class="line">            <span class="attr">&quot;default&quot;</span>: [<span class="string">&quot;Hello! 来自 &lt;span style=\&quot;color:#0099cc;\&quot;&gt;&quot;</span>, <span class="string">&quot;&lt;/span&gt; 的朋友&quot;</span>],</span><br><span class="line">            <span class="attr">&quot;none&quot;</span>: [<span class="string">&quot;欢迎阅读&lt;span style=\&quot;color:#0099cc;\&quot;&gt;『&quot;</span>, <span class="string">&quot;』&lt;/span&gt;&quot;</span>, <span class="string">&quot; - &quot;</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;referrer_hostname&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;example.com&quot;</span>: [<span class="string">&quot;示例网站&quot;</span>],</span><br><span class="line">            <span class="attr">&quot;www.fghrsh.net&quot;</span>: [<span class="string">&quot;FGHRSH 的博客&quot;</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;model_message&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;1&quot;</span>: [<span class="string">&quot;来自 Potion Maker 的 Pio 酱 ~&quot;</span>],</span><br><span class="line">            <span class="attr">&quot;2&quot;</span>: [<span class="string">&quot;来自 Potion Maker 的 Tia 酱 ~&quot;</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;hitokoto_api_message&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;lwl12.com&quot;</span>: [<span class="string">&quot;这句一言来自 &lt;span style=\&quot;color:#0099cc;\&quot;&gt;『&#123;source&#125;』&lt;/span&gt;&quot;</span>, <span class="string">&quot;，是 &lt;span style=\&quot;color:#0099cc;\&quot;&gt;&#123;creator&#125;&lt;/span&gt; 投稿的&quot;</span>, <span class="string">&quot;。&quot;</span>],</span><br><span class="line">            <span class="attr">&quot;fghrsh.net&quot;</span>: [<span class="string">&quot;这句一言出处是 &lt;span style=\&quot;color:#0099cc;\&quot;&gt;『&#123;source&#125;』&lt;/span&gt;，是 &lt;span style=\&quot;color:#0099cc;\&quot;&gt;FGHRSH&lt;/span&gt; 在 &#123;date&#125; 收藏的！&quot;</span>],</span><br><span class="line">            <span class="attr">&quot;jinrishici.com&quot;</span>: [<span class="string">&quot;这句诗词出自 &lt;span style=\&quot;color:#0099cc;\&quot;&gt;《&#123;title&#125;》&lt;/span&gt;，是 &#123;dynasty&#125;诗人 &#123;author&#125; 创作的！&quot;</span>],</span><br><span class="line">            <span class="attr">&quot;hitokoto.cn&quot;</span>: [<span class="string">&quot;这句一言来自 &lt;span style=\&quot;color:#0099cc;\&quot;&gt;『&#123;source&#125;』&lt;/span&gt;，是 &lt;span style=\&quot;color:#0099cc;\&quot;&gt;&#123;creator&#125;&lt;/span&gt; 在 hitokoto.cn 投稿的。&quot;</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;mouseover&quot;</span>: [</span><br><span class="line">        &#123; <span class="attr">&quot;selector&quot;</span>: <span class="string">&quot;.container a[href^=&#x27;http&#x27;]&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;要看看 &lt;span style=\&quot;color:#0099cc;\&quot;&gt;&#123;text&#125;&lt;/span&gt; 么？&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;selector&quot;</span>: <span class="string">&quot;.fui-home&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;点击前往首页，想回到上一页可以使用浏览器的后退功能哦&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;selector&quot;</span>: <span class="string">&quot;.fui-chat&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;一言一语，一颦一笑。一字一句，一颗赛艇。&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;selector&quot;</span>: <span class="string">&quot;.fui-eye&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;嗯··· 要切换 看板娘 吗？&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;selector&quot;</span>: <span class="string">&quot;.fui-user&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;喜欢换装 Play 吗？&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;selector&quot;</span>: <span class="string">&quot;.fui-photo&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;要拍张纪念照片吗？&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;selector&quot;</span>: <span class="string">&quot;.fui-info-circle&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;这里有关于我的信息呢&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;selector&quot;</span>: <span class="string">&quot;.fui-cross&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;你不喜欢我了吗...&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;selector&quot;</span>: <span class="string">&quot;#tor_show&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;翻页比较麻烦吗，点击可以显示这篇文章的目录呢&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;selector&quot;</span>: <span class="string">&quot;#comment_go&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;想要去评论些什么吗？&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;selector&quot;</span>: <span class="string">&quot;#night_mode&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;深夜时要爱护眼睛呀&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;selector&quot;</span>: <span class="string">&quot;#qrcode&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;手机扫一下就能继续看，很方便呢&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;selector&quot;</span>: <span class="string">&quot;.comment_reply&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;要吐槽些什么呢&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;selector&quot;</span>: <span class="string">&quot;#back-to-top&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;回到开始的地方吧&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;selector&quot;</span>: <span class="string">&quot;#author&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;该怎么称呼你呢&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;selector&quot;</span>: <span class="string">&quot;#mail&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;留下你的邮箱，不然就是无头像人士了&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;selector&quot;</span>: <span class="string">&quot;#url&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;你的家在哪里呢，好让我去参观参观&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;selector&quot;</span>: <span class="string">&quot;#textarea&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;认真填写哦，垃圾评论是禁止事项&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;selector&quot;</span>: <span class="string">&quot;.OwO-logo&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;要插入一个表情吗&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;selector&quot;</span>: <span class="string">&quot;#csubmit&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;要[提交]^(Commit)了吗，首次评论需要审核，请耐心等待~&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;selector&quot;</span>: <span class="string">&quot;.ImageBox&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;点击图片可以放大呢&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;selector&quot;</span>: <span class="string">&quot;input[name=s]&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;找不到想看的内容？搜索看看吧&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;selector&quot;</span>: <span class="string">&quot;.previous&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;去上一页看看吧&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;selector&quot;</span>: <span class="string">&quot;.next&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;去下一页看看吧&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;selector&quot;</span>: <span class="string">&quot;.dropdown-toggle&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;这里是菜单&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;selector&quot;</span>: <span class="string">&quot;c-player a.play-icon&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;想要听点音乐吗&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;selector&quot;</span>: <span class="string">&quot;c-player div.time&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;在这里可以调整&lt;span style=\&quot;color:#0099cc;\&quot;&gt;播放进度&lt;/span&gt;呢&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;selector&quot;</span>: <span class="string">&quot;c-player div.volume&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;在这里可以调整&lt;span style=\&quot;color:#0099cc;\&quot;&gt;音量&lt;/span&gt;呢&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;selector&quot;</span>: <span class="string">&quot;c-player div.list-button&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;&lt;span style=\&quot;color:#0099cc;\&quot;&gt;播放列表&lt;/span&gt;里都有什么呢&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;selector&quot;</span>: <span class="string">&quot;c-player div.lyric-button&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;有&lt;span style=\&quot;color:#0099cc;\&quot;&gt;歌词&lt;/span&gt;的话就能跟着一起唱呢&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;selector&quot;</span>: <span class="string">&quot;.waifu #live2d&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;干嘛呢你，快把手拿开&quot;</span>, <span class="string">&quot;鼠…鼠标放错地方了！&quot;</span>] &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">&quot;click&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;selector&quot;</span>: <span class="string">&quot;.waifu #live2d&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;text&quot;</span>: [</span><br><span class="line">                <span class="string">&quot;是…是不小心碰到了吧&quot;</span>,</span><br><span class="line">                <span class="string">&quot;萝莉控是什么呀&quot;</span>,</span><br><span class="line">                <span class="string">&quot;你看到我的小熊了吗&quot;</span>,</span><br><span class="line">                <span class="string">&quot;再摸的话我可要报警了！⌇●﹏●⌇&quot;</span>,</span><br><span class="line">                <span class="string">&quot;110吗，这里有个变态一直在摸我(ó﹏ò｡)&quot;</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">&quot;seasons&quot;</span>: [</span><br><span class="line">        &#123; <span class="attr">&quot;date&quot;</span>: <span class="string">&quot;01/01&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;&lt;span style=\&quot;color:#0099cc;\&quot;&gt;元旦&lt;/span&gt;了呢，新的一年又开始了，今年是&#123;year&#125;年~&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;date&quot;</span>: <span class="string">&quot;02/14&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;又是一年&lt;span style=\&quot;color:#0099cc;\&quot;&gt;情人节&lt;/span&gt;，&#123;year&#125;年找到对象了嘛~&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;date&quot;</span>: <span class="string">&quot;03/08&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;今天是&lt;span style=\&quot;color:#0099cc;\&quot;&gt;妇女节&lt;/span&gt;！&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;date&quot;</span>: <span class="string">&quot;03/12&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;今天是&lt;span style=\&quot;color:#0099cc;\&quot;&gt;植树节&lt;/span&gt;，要保护环境呀&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;date&quot;</span>: <span class="string">&quot;04/01&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;悄悄告诉你一个秘密~&lt;span style=\&quot;background-color:#34495e;\&quot;&gt;今天是愚人节，不要被骗了哦~&lt;/span&gt;&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;date&quot;</span>: <span class="string">&quot;05/01&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;今天是&lt;span style=\&quot;color:#0099cc;\&quot;&gt;五一劳动节&lt;/span&gt;，计划好假期去哪里了吗~&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;date&quot;</span>: <span class="string">&quot;06/01&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;&lt;span style=\&quot;color:#0099cc;\&quot;&gt;儿童节&lt;/span&gt;了呢，快活的时光总是短暂，要是永远长不大该多好啊…&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;date&quot;</span>: <span class="string">&quot;09/03&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;&lt;span style=\&quot;color:#0099cc;\&quot;&gt;中国人民抗日战争胜利纪念日&lt;/span&gt;，铭记历史、缅怀先烈、珍爱和平、开创未来。&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;date&quot;</span>: <span class="string">&quot;09/10&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;&lt;span style=\&quot;color:#0099cc;\&quot;&gt;教师节&lt;/span&gt;，在学校要给老师问声好呀~&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;date&quot;</span>: <span class="string">&quot;10/01&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;&lt;span style=\&quot;color:#0099cc;\&quot;&gt;国庆节&lt;/span&gt;，新中国已经成立69年了呢&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;date&quot;</span>: <span class="string">&quot;11/05-11/12&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;今年的&lt;span style=\&quot;color:#0099cc;\&quot;&gt;双十一&lt;/span&gt;是和谁一起过的呢~&quot;</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">&quot;date&quot;</span>: <span class="string">&quot;12/20-12/31&quot;</span>, <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;这几天是&lt;span style=\&quot;color:#0099cc;\&quot;&gt;圣诞节&lt;/span&gt;，主人肯定又去剁手买买买了~&quot;</span>] &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="34-下载地址"><a class="markdownIt-Anchor" href="#34-下载地址"></a> 3.4. 下载⏬地址</h3><blockquote><p>文件可以下载到项目中,也可以直接导入</p></blockquote><table><thead><tr><th style="text-align:center">文件名</th><th style="text-align:left">下载地址</th></tr></thead><tbody><tr><td style="text-align:center">waifu.css</td><td style="text-align:left"><a href="https://www.fghrsh.net/zb_users/plugin/live2d/assets/waifu.min.css?v=1.4.2">https://www.fghrsh.net/zb_users/plugin/live2d/assets/waifu.min.css?v=1.4.2</a></td></tr><tr><td style="text-align:center">live2d.min.js</td><td style="text-align:left"><a href="https://www.fghrsh.net/zb_users/plugin/live2d/assets/live2d.min.js?v=1.0.5">https://www.fghrsh.net/zb_users/plugin/live2d/assets/live2d.min.js?v=1.0.5</a></td></tr><tr><td style="text-align:center">waifu-tips.min.js</td><td style="text-align:left"><a href="https://www.fghrsh.net/zb_users/plugin/live2d/assets/waifu-tips.min.js?v=1.4.2-fix3">https://www.fghrsh.net/zb_users/plugin/live2d/assets/waifu-tips.min.js?v=1.4.2-fix3</a></td></tr><tr><td style="text-align:center">waifu-tips.json</td><td style="text-align:left"><a href="https://www.fghrsh.net/zb_users/plugin/live2d/assets/waifu-tips.json?v=1.4.2">https://www.fghrsh.net/zb_users/plugin/live2d/assets/waifu-tips.json?v=1.4.2</a></td></tr></tbody></table><blockquote><p>也可以去 <a href="https://github.com/fghrsh/live2d_demo" title="github">github</a><a href="https://github.com/fghrsh/live2d_demo" target="_blank">下载源码</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 免费搭建个人博客网站</title>
      <link href="post/hexo-free.html"/>
      <url>post/hexo-free.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>本站使用的 <a href="https://hexo.io/zh-cn/">Hexo</a> + <a href="https://pages.github.com/">Github Page</a> 搭建的个人技术博客网站。<br />博主之前使用的是 <a href="https://cn.wordpress.org/">Wordpress</a> 搭建个人博客, 因为对 php 不是很熟,就转战<code>Hexo</code>。<br /><code>Hexo</code> 的优点:</p></blockquote><p>1.使用 npm 方式构建(Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。)<br />2.支持 <code>Markdown</code> 语法(<code>Hexo</code>支持<code>GitHub Flavored Markdown</code>的所有功能，甚至可以整合<code>Octopress</code>的大多数插件。)<br />3.可以一键部署到 <code>Github</code>(只需一条指令即可部署到 GitHub Pages, Heroku 或其他网站。)<br />4.拥有有强大的插件系统。(Hexo 拥有强大的插件系统，安装插件可以让<code>Hexo</code>支持<code>Jade</code>,<code>CoffeeScript</code>。)</p><blockquote><p><code>Hexo</code>的缺点:生产纯静态页面,无需后台系统,那么就没法对站点进行 request、session 作用域的操作,也就是说无法实现登录,鉴权等操作。</p></blockquote><h2 id="1-构建-hexo-博客系统"><a class="markdownIt-Anchor" href="#1-构建-hexo-博客系统"></a> 1. 构建 Hexo 博客系统</h2><h3 id="11-安装-nodejs"><a class="markdownIt-Anchor" href="#11-安装-nodejs"></a> 1.1 安装 nodejs</h3><p><code>nodejs</code>官网 <a href="https://nodejs.org/zh-cn/">https://nodejs.org/zh-cn/</a></p><p>windows 安装 <code>nodejs</code>请参考 <a href="https://blog.csdn.net/cai454692590/article/details/86093297">Windows安装NodeJS</a></p><p>mac 安装<code>nodejs</code>请参考 <a href="https://blog.csdn.net/qq_32407233/article/details/83758899">Mac 如何安装 nodejs</a></p><blockquote><p>centos 可以使用<code>yum</code>命令安装</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install nodejs</span><br></pre></td></tr></table></figure><blockquote><p>ubuntu 可以使用<code>apt-get</code>命令安装</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install nodejs</span><br></pre></td></tr></table></figure><h3 id="12-安装-git"><a class="markdownIt-Anchor" href="#12-安装-git"></a> 1.2 安装 git</h3><p><code>git</code>官网 <a href="https://git-scm.com/">https://git-scm.com/</a></p><p><code>windows</code>、<code>mac</code>可以直接去 <a href="https://git-scm.com/downloads">官网</a>下载安装版即可</p><blockquote><p>centos 可以使用<code>yum</code>命令安装</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install git</span><br></pre></td></tr></table></figure><blockquote><p>ubuntu 可以使用<code>apt-get</code>命令安装</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install git</span><br></pre></td></tr></table></figure><h3 id="12-创建-github-page-仓库"><a class="markdownIt-Anchor" href="#12-创建-github-page-仓库"></a> 1.2 创建 Github Page 仓库</h3><p>关于如何创建 Github Page 请参考<a href="https://blog.csdn.net/KNIGH_YUN/article/details/79774344"> 搭建 Github Pages 个人博客网站</a></p><h3 id="13-使用-npm-安装-hexo"><a class="markdownIt-Anchor" href="#13-使用-npm-安装-hexo"></a> 1.3 使用 npm 安装 Hexo</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><blockquote><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init &lt;folder&gt;</span><br><span class="line">cd &lt;folder&gt;</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><h2 id="2-创建-github-仓库"><a class="markdownIt-Anchor" href="#2-创建-github-仓库"></a> 2. 创建 Github 仓库</h2><blockquote><p>新建一个 Github Page 仓库,仓库名为 <code>github用户名.github.io</code>,仓库必须为 public</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/create-github-page.png" alt="" /></p><h2 id="3-配置-hexo"><a class="markdownIt-Anchor" href="#3-配置-hexo"></a> 3. 配置 Hexo</h2><blockquote><p>Hexo 配置 相关可以参照 <a href="https://hexo.io/zh-cn/docs/configuration">Hexo 官网</a>。<br />我们这里主要介绍如何一键部署到 Github Page</p></blockquote><p>在根目录的 _config.yml 文件中配置 deploy。</p><blockquote><p>Hexo 提供了快速方便的一键部署功能，让您只需一条命令就能将网站部署到服务器上。</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:你的GitHub用户名/你的GitHub用户名.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>这时候我们只需要使用<code>Hexo</code>部署到<code>Github</code>,可以参考<a href="https://hexo.io/zh-cn/docs/deployment#Git">官方文档</a>。</p><p>部署到<code>GitHub</code>需要 <code>hexo-deployer-git</code> 插件支持。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>您可执行下列的其中一个命令,让<code>Hexo</code>在生成完毕后自动部署网站，两个命令的作用是相同的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate --deploy</span><br><span class="line">hexo deploy --generate</span><br></pre></td></tr></table></figure><p>上面两个命令可以简写为:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d</span><br><span class="line">hexo d -g</span><br></pre></td></tr></table></figure><h2 id="3-高级配置"><a class="markdownIt-Anchor" href="#3-高级配置"></a> 3. 高级配置</h2><blockquote><p>当我们部署到刚刚我们创建到 GitHub Page 仓库之后,打开仓库的 Settings 配置页面</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/github-page-settings.png" alt="" /></p><blockquote><p>拉到 GitHub Pages 选项</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/settings-github-pages.png" alt="" /></p><blockquote><p>这时我们发现 GitHub 自动为部署页面到 <a href="http://github.io">github.io</a> 了,此时浏览器输入 <code>github用户名.github.io</code> 即可访问</p></blockquote><h3 id="31-强制-https-访问"><a class="markdownIt-Anchor" href="#31-强制-https-访问"></a> 3.1 强制 HTTPS 访问</h3><blockquote><p>进入你的 github page 仓库设置页面,找到 GitHub Pages 栏,勾选 Enforce HTTPS 。</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/settings-github-pages-enforce-https.jpg" alt="" /></p><h3 id="32-使用自定义域名"><a class="markdownIt-Anchor" href="#32-使用自定义域名"></a> 3.2 使用自定义域名</h3><blockquote><p>进入你的 github page 仓库设置页面,找到 GitHub Pages 栏,在 Custom domain 选项输入你的自定义域名。</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/settings-github-pages-custom-domain.jpg" alt="" /></p><blockquote><p>在你的<code>Hexo</code>的 source 目录中创建 CNAME 文件,添加你的域名。</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/settings-github-pages-custom-domain-cname.jpg" alt="" /></p><blockquote><p>在你的域名解析中 配置 CNAME 解析到 <code>github用户名.github.io</code> (也就是你的 Github Page 的仓库地址)</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/custom-domain-config.jpg" alt="" /></p><blockquote><p>这时在浏览器访问你的 GitHub Page 时会重定向到自定义域名</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/github-page-custom-domain-redirect.gif" alt="" /></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot之SpringApplication</title>
      <link href="post/spring-boot-springapplication.html"/>
      <url>post/spring-boot-springapplication.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>SpringApplication类提供了一种方便的方法来引导从main()方法开始的Spring应用程序。在许多情况下，你可以委托给静态SpringApplication.run方法</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(DemoApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>本文主要根据对<code>SpringApplication</code>类的源码阅读来了解<code>SpringApplication</code>的启动流程。</p></blockquote><ol><li>启动<code>StopWatch</code>用于记录应用启动时长</li><li>配置<code>headless</code>属性(AWT 相关属性)</li><li>获取应用监听器<code>SpringApplicationRunListeners</code>并启动</li><li>初始化<code>ApplicationArguments</code>(提供对用于运行 SpringApplication 的参数的访问)</li><li>初始化<code>ConfigurableEnvironment</code>(加载所有的 environment,包括 application.properties/application.yml 以及其他外部的属性配置 )</li><li>打印<code>Banner</code></li><li>创建应用上下文<code>ApplicationContext</code></li><li>初始化<code>exceptionReporters</code>(记录启动过程中的异常信息)</li><li>准备 ApplicationContext 对象,初始化一些属性</li><li>启动(刷新)Spring 容器</li><li>执行 Spring 容器的初始化的后置逻辑</li><li>结束<code>StopWatch</code>统计</li><li>通知监听器,Spring 容器启动完成</li><li>调用 <code>ApplicationRunner</code>,<code>CommandLineRunner</code> 的 run 方法</li><li>通知监听器,Spring 容器正在运行</li></ol><h2 id="构造函数"><a class="markdownIt-Anchor" href="#构造函数"></a> 构造函数</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ConfigurableApplicationContext <span class="title">run</span><span class="params">(Class&lt;?&gt;[] primarySources, String[] args)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> SpringApplication(primarySources).run(args);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">SpringApplication</span><span class="params">(Class&lt;?&gt;... primarySources)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>(<span class="keyword">null</span>, primarySources);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">SpringApplication</span><span class="params">(ResourceLoader resourceLoader, Class&lt;?&gt;... primarySources)</span> </span>&#123;</span><br><span class="line">  <span class="comment">/* 初始化资源加载器 */</span></span><br><span class="line">  <span class="keyword">this</span>.resourceLoader = resourceLoader;</span><br><span class="line">  Assert.notNull(primarySources, <span class="string">&quot;PrimarySources must not be null&quot;</span>);</span><br><span class="line">  <span class="comment">/* 初始化 primarySources */</span></span><br><span class="line">  <span class="keyword">this</span>.primarySources = <span class="keyword">new</span> LinkedHashSet&lt;&gt;(Arrays.asList(primarySources));</span><br><span class="line">  <span class="comment">/* 获取 web 应用的类型 */</span></span><br><span class="line">  <span class="keyword">this</span>.webApplicationType = WebApplicationType.deduceFromClasspath();</span><br><span class="line">  <span class="comment">/* 初始化 initializers(ApplicationContextInitializer 类型的 bean) */</span></span><br><span class="line">  setInitializers((Collection) getSpringFactoriesInstances(ApplicationContextInitializer.class));</span><br><span class="line">  <span class="comment">/* 初始化 setListeners(ApplicationListener 类型的 bean) */</span></span><br><span class="line">  setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class));</span><br><span class="line">  <span class="comment">/* 推断 main 方法 Application 的 Class */</span></span><br><span class="line">  <span class="keyword">this</span>.mainApplicationClass = deduceMainApplicationClass();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="deducefromclasspath"><a class="markdownIt-Anchor" href="#deducefromclasspath"></a> deduceFromClasspath</h2><blockquote><p>通过检查 classpath 推断出当前 web 环境</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> WebApplicationType <span class="title">deduceFromClasspath</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">/* 判断是否存在是否是 webflux */</span></span><br><span class="line">  <span class="keyword">if</span> (ClassUtils.isPresent(WEBFLUX_INDICATOR_CLASS, <span class="keyword">null</span>) &amp;&amp; !ClassUtils.isPresent(WEBMVC_INDICATOR_CLASS, <span class="keyword">null</span>)</span><br><span class="line">      &amp;&amp; !ClassUtils.isPresent(JERSEY_INDICATOR_CLASS, <span class="keyword">null</span>)) &#123;</span><br><span class="line">    <span class="keyword">return</span> WebApplicationType.REACTIVE;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (String className : SERVLET_INDICATOR_CLASSES) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!ClassUtils.isPresent(className, <span class="keyword">null</span>)) &#123;</span><br><span class="line">      <span class="keyword">return</span> WebApplicationType.NONE;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> WebApplicationType.SERVLET;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="deducemainapplicationclass"><a class="markdownIt-Anchor" href="#deducemainapplicationclass"></a> deduceMainApplicationClass</h2><blockquote><p>推断是哪个类调用了 main 方法</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Class&lt;?&gt; deduceMainApplicationClass() &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    StackTraceElement[] stackTrace = <span class="keyword">new</span> RuntimeException().getStackTrace();</span><br><span class="line">    <span class="keyword">for</span> (StackTraceElement stackTraceElement : stackTrace) &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="string">&quot;main&quot;</span>.equals(stackTraceElement.getMethodName())) &#123;</span><br><span class="line">        <span class="keyword">return</span> Class.forName(stackTraceElement.getClassName());</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">catch</span> (ClassNotFoundException ex) &#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="getspringfactoriesinstances"><a class="markdownIt-Anchor" href="#getspringfactoriesinstances"></a> getSpringFactoriesInstances</h2><blockquote><p>根据给定的 class 类型,获取对应 factories 中的实例</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> &lt;T&gt; <span class="function">Collection&lt;T&gt; <span class="title">getSpringFactoriesInstances</span><span class="params">(Class&lt;T&gt; type)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> getSpringFactoriesInstances(type, <span class="keyword">new</span> Class&lt;?&gt;[] &#123;&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> &lt;T&gt; <span class="function">Collection&lt;T&gt; <span class="title">getSpringFactoriesInstances</span><span class="params">(Class&lt;T&gt; type,</span></span></span><br><span class="line"><span class="function"><span class="params">    Class&lt;?&gt;[] parameterTypes, Object... args)</span> </span>&#123;</span><br><span class="line">  <span class="comment">/* 获取类加载器 */</span></span><br><span class="line">  ClassLoader classLoader = getClassLoader();</span><br><span class="line">  <span class="comment">/* Set 类型的 names 确保惟一，以防止重复 */</span></span><br><span class="line">  <span class="comment">/* 加载 `META-INF/spring.factories` 里的 class */</span></span><br><span class="line">  Set&lt;String&gt; names = <span class="keyword">new</span> LinkedHashSet&lt;&gt;(</span><br><span class="line">      SpringFactoriesLoader.loadFactoryNames(type, classLoader));</span><br><span class="line">  <span class="comment">/* 为他们创建实例 */</span></span><br><span class="line">  List&lt;T&gt; instances = createSpringFactoriesInstances(type, parameterTypes,</span><br><span class="line">      classLoader, args, names);</span><br><span class="line">  <span class="comment">/* 为他们进行排序 */</span></span><br><span class="line">  AnnotationAwareOrderComparator.sort(instances);</span><br><span class="line">  <span class="keyword">return</span> instances;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="run方法"><a class="markdownIt-Anchor" href="#run方法"></a> run方法</h2><blockquote><p>运行 Spring 应用</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ConfigurableApplicationContext <span class="title">run</span><span class="params">(Class&lt;?&gt; primarySource, String... args)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> run(<span class="keyword">new</span> Class&lt;?&gt;[] &#123; primarySource &#125;, args);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ConfigurableApplicationContext <span class="title">run</span><span class="params">(Class&lt;?&gt;[] primarySources, String[] args)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> SpringApplication(primarySources).run(args);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> ConfigurableApplicationContext <span class="title">run</span><span class="params">(String... args)</span> </span>&#123;</span><br><span class="line">  <span class="comment">/* stopWatch 对象,用于统计指定任务的运行时间 */</span></span><br><span class="line">  StopWatch stopWatch = <span class="keyword">new</span> StopWatch();</span><br><span class="line">  <span class="comment">/* 开始 stopWatch 统计 */</span></span><br><span class="line">  stopWatch.start();</span><br><span class="line">  ConfigurableApplicationContext context = <span class="keyword">null</span>;</span><br><span class="line">  Collection&lt;SpringBootExceptionReporter&gt; exceptionReporters = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">  <span class="comment">/* 配置 headless 属性 */</span></span><br><span class="line">  configureHeadlessProperty();</span><br><span class="line">  <span class="comment">/* 获取 SpringApplicationRunListener 类型的 bean 实例列表 */</span></span><br><span class="line">  SpringApplicationRunListeners listeners = getRunListeners(args);</span><br><span class="line">  <span class="comment">/* 启动监听器 */</span></span><br><span class="line">  listeners.starting();</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">/* 创建默认 applicationArguments,提供对用于运行 SpringApplication 的参数的访问。*/</span></span><br><span class="line">    ApplicationArguments applicationArguments = <span class="keyword">new</span> DefaultApplicationArguments(args);</span><br><span class="line">    <span class="comment">/* 加载所有的 environment,包括 application.properties/application.yml 以及其他外部的属性配置 */</span></span><br><span class="line">    ConfigurableEnvironment environment = prepareEnvironment(listeners, applicationArguments);</span><br><span class="line">    configureIgnoreBeanInfo(environment);</span><br><span class="line">    <span class="comment">/* 打印 banner 信息 */</span></span><br><span class="line">    Banner printedBanner = printBanner(environment);</span><br><span class="line">    <span class="comment">/* 创建应用上下文 */</span></span><br><span class="line">    context = createApplicationContext();</span><br><span class="line">    <span class="comment">/* 创建异常报告器 */</span></span><br><span class="line">    exceptionReporters = getSpringFactoriesInstances(SpringBootExceptionReporter.class,</span><br><span class="line">        <span class="keyword">new</span> Class[] &#123; ConfigurableApplicationContext.class &#125;, context);</span><br><span class="line">    prepareContext(context, environment, listeners, applicationArguments, printedBanner);</span><br><span class="line">    <span class="comment">/* 初始化 Spring 容器。 */</span></span><br><span class="line">    refreshContext(context);</span><br><span class="line">    <span class="comment">/* 执行 Spring 容器的初始化的后置逻辑 */</span></span><br><span class="line">    afterRefresh(context, applicationArguments);</span><br><span class="line">    <span class="comment">/* 停止 stopWatch 统计 */</span></span><br><span class="line">    stopWatch.stop();</span><br><span class="line">    <span class="comment">/* 打印 Spring Boot 启动日志。 */</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.logStartupInfo) &#123;</span><br><span class="line">      <span class="keyword">new</span> StartupInfoLogger(<span class="keyword">this</span>.mainApplicationClass).logStarted(getApplicationLog(), stopWatch);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* 通知 SpringApplicationRunListener,Spring 容器启动完成。 */</span></span><br><span class="line">    listeners.started(context);</span><br><span class="line">    <span class="comment">/* 调用 ApplicationRunner 或者 CommandLineRunner 的运行方法。 */</span></span><br><span class="line">    callRunners(context, applicationArguments);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">catch</span> (Throwable ex) &#123;</span><br><span class="line">    <span class="comment">/* 如果发生异常，则进行处理，并抛出 IllegalStateException 异常 */</span></span><br><span class="line">    handleRunFailure(context, ex, exceptionReporters, listeners);</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(ex);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* SpringApplicationRunListener 的数组，Spring 容器运行中。 */</span></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    listeners.running(context);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">catch</span> (Throwable ex) &#123;</span><br><span class="line">    <span class="comment">/* 如果发生异常，则进行处理，并抛出 IllegalStateException 异常 */</span></span><br><span class="line">    handleRunFailure(context, ex, exceptionReporters, <span class="keyword">null</span>);</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(ex);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> context;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="prepareenvironment"><a class="markdownIt-Anchor" href="#prepareenvironment"></a> prepareEnvironment</h2><blockquote><p>准备 environment,加载属性配置</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> ConfigurableEnvironment <span class="title">prepareEnvironment</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">    SpringApplicationRunListeners listeners,</span></span></span><br><span class="line"><span class="function"><span class="params">    ApplicationArguments applicationArguments)</span> </span>&#123;</span><br><span class="line">  <span class="comment">/* 创建并配置 ConfigurableEnvironment 对象*/</span></span><br><span class="line">  ConfigurableEnvironment environment = getOrCreateEnvironment();</span><br><span class="line">  configureEnvironment(environment, applicationArguments.getSourceArgs());</span><br><span class="line">  <span class="comment">/* 通知 SpringApplicationRunListeners,环境变量已经准备完成。 */</span></span><br><span class="line">  listeners.environmentPrepared(environment);</span><br><span class="line">  <span class="comment">/* 绑定 environment 到 SpringApplication */</span></span><br><span class="line">  bindToSpringApplication(environment);</span><br><span class="line">  <span class="comment">/* 如果非自定义 environment ，则根据条件转换 */</span></span><br><span class="line">  <span class="keyword">if</span> (!<span class="keyword">this</span>.isCustomEnvironment) &#123;</span><br><span class="line">    environment = <span class="keyword">new</span> EnvironmentConverter(getClassLoader())</span><br><span class="line">        .convertEnvironmentIfNecessary(environment, deduceEnvironmentClass());</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* 如果有 attach 到 environment 上的 MutablePropertySources ，则添加到 environment 的 PropertySource 中。 */</span></span><br><span class="line">  ConfigurationPropertySources.attach(environment);</span><br><span class="line">  <span class="keyword">return</span> environment;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="createapplicationcontext"><a class="markdownIt-Anchor" href="#createapplicationcontext"></a> createApplicationContext</h2><blockquote><p>创建应用上下文</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> ConfigurableApplicationContext <span class="title">createApplicationContext</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Class&lt;?&gt; contextClass = <span class="keyword">this</span>.applicationContextClass;</span><br><span class="line">  <span class="keyword">if</span> (contextClass == <span class="keyword">null</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">switch</span> (<span class="keyword">this</span>.webApplicationType) &#123;</span><br><span class="line">      <span class="comment">/* web 应用环境,AnnotationConfigServletWebServerApplicationContext */</span></span><br><span class="line">      <span class="keyword">case</span> SERVLET:</span><br><span class="line">        contextClass = Class.forName(DEFAULT_SERVLET_WEB_CONTEXT_CLASS);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="comment">/* webflux 应用环境,AnnotationConfigReactiveWebServerApplicationContext */</span></span><br><span class="line">      <span class="keyword">case</span> REACTIVE:</span><br><span class="line">        contextClass = Class.forName(DEFAULT_REACTIVE_WEB_CONTEXT_CLASS);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="comment">/* 非 web 应用环境,AnnotationConfigApplicationContext */</span></span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        contextClass = Class.forName(DEFAULT_CONTEXT_CLASS);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (ClassNotFoundException ex) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(</span><br><span class="line">          <span class="string">&quot;Unable create a default ApplicationContext, &quot;</span></span><br><span class="line">              + <span class="string">&quot;please specify an ApplicationContextClass&quot;</span>,</span><br><span class="line">          ex);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* 返回对应应用上下文实例 */</span></span><br><span class="line">  <span class="keyword">return</span> (ConfigurableApplicationContext) BeanUtils.instantiateClass(contextClass);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="preparecontext"><a class="markdownIt-Anchor" href="#preparecontext"></a> prepareContext</h2><blockquote><p>准备 ApplicationContext 对象,初始化它的一些属性</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">prepareContext</span><span class="params">(ConfigurableApplicationContext context,</span></span></span><br><span class="line"><span class="function"><span class="params">    ConfigurableEnvironment environment, SpringApplicationRunListeners listeners,</span></span></span><br><span class="line"><span class="function"><span class="params">    ApplicationArguments applicationArguments, Banner printedBanner)</span> </span>&#123;</span><br><span class="line">  <span class="comment">/* 设置 context 的 environment 属性 */</span></span><br><span class="line">  context.setEnvironment(environment);</span><br><span class="line">  <span class="comment">/* 设置 context 的一些属性 */</span></span><br><span class="line">  postProcessApplicationContext(context);</span><br><span class="line">  <span class="comment">/* 初始化 ApplicationContextInitializer */</span></span><br><span class="line">  applyInitializers(context);</span><br><span class="line">  <span class="comment">/* 通知 SpringApplicationRunListeners,Spring 容器准备完成。 */</span></span><br><span class="line">  listeners.contextPrepared(context);</span><br><span class="line">  <span class="comment">/* 打印日志 */</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">this</span>.logStartupInfo) &#123;</span><br><span class="line">    logStartupInfo(context.getParent() == <span class="keyword">null</span>);</span><br><span class="line">    logStartupProfileInfo(context);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* 获取 beanFactory */</span></span><br><span class="line">  ConfigurableListableBeanFactory beanFactory = context.getBeanFactory();</span><br><span class="line">  <span class="comment">/* 注册单例 springApplicationArguments bean */</span></span><br><span class="line">  beanFactory.registerSingleton(<span class="string">&quot;springApplicationArguments&quot;</span>, applicationArguments);</span><br><span class="line">  <span class="comment">/* 注册单例 printedBanner bean */</span></span><br><span class="line">  <span class="keyword">if</span> (printedBanner != <span class="keyword">null</span>) &#123;</span><br><span class="line">    beanFactory.registerSingleton(<span class="string">&quot;springBootBanner&quot;</span>, printedBanner);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (beanFactory <span class="keyword">instanceof</span> DefaultListableBeanFactory) &#123;</span><br><span class="line">    ((DefaultListableBeanFactory) beanFactory)</span><br><span class="line">        .setAllowBeanDefinitionOverriding(<span class="keyword">this</span>.allowBeanDefinitionOverriding);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* 加载 BeanDefinition */</span></span><br><span class="line">  Set&lt;Object&gt; sources = getAllSources();</span><br><span class="line">  Assert.notEmpty(sources, <span class="string">&quot;Sources must not be empty&quot;</span>);</span><br><span class="line">  load(context, sources.toArray(<span class="keyword">new</span> Object[<span class="number">0</span>]));</span><br><span class="line">  <span class="comment">/* 通知 SpringApplicationRunListeners,Spring 容器加载完成。 */</span></span><br><span class="line">  listeners.contextLoaded(context);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="callrunners"><a class="markdownIt-Anchor" href="#callrunners"></a> callRunners</h2><blockquote><p>调用 ApplicationRunner 或者 CommandLineRunner 的 run 方法</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">callRunners</span><span class="params">(ApplicationContext context, ApplicationArguments args)</span> </span>&#123;</span><br><span class="line">List&lt;Object&gt; runners = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">   <span class="comment">/* 获取所有的 ApplicationRunner 类型的 bean 加入到 runners */</span></span><br><span class="line">runners.addAll(context.getBeansOfType(ApplicationRunner.class).values());</span><br><span class="line">   <span class="comment">/* 获取所有的 CommandLineRunner 类型的 bean 加入到 runners */</span></span><br><span class="line">runners.addAll(context.getBeansOfType(CommandLineRunner.class).values());</span><br><span class="line">   <span class="comment">/* 排序 runners */</span></span><br><span class="line">AnnotationAwareOrderComparator.sort(runners);</span><br><span class="line">   <span class="comment">/* LinkedHashSet 去重并遍历 */</span></span><br><span class="line"><span class="keyword">for</span> (Object runner : <span class="keyword">new</span> LinkedHashSet&lt;&gt;(runners)) &#123;</span><br><span class="line">     <span class="comment">/* ApplicationRunner 类型 runner */</span></span><br><span class="line"><span class="keyword">if</span> (runner <span class="keyword">instanceof</span> ApplicationRunner) &#123;</span><br><span class="line">callRunner((ApplicationRunner) runner, args);</span><br><span class="line">&#125;</span><br><span class="line">     <span class="comment">/* CommandLineRunner 类型 runner */</span></span><br><span class="line"><span class="keyword">if</span> (runner <span class="keyword">instanceof</span> CommandLineRunner) &#123;</span><br><span class="line">callRunner((CommandLineRunner) runner, args);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">callRunner</span><span class="params">(ApplicationRunner runner, ApplicationArguments args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">(runner).run(args);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception ex) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">&quot;Failed to execute ApplicationRunner&quot;</span>, ex);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">callRunner</span><span class="params">(CommandLineRunner runner, ApplicationArguments args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">(runner).run(args.getSourceArgs());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception ex) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">&quot;Failed to execute CommandLineRunner&quot;</span>, ex);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> spring-boot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot Jpa多数据源配置</title>
      <link href="post/spring-boot-jpa-multiple-datasource.html"/>
      <url>post/spring-boot-jpa-multiple-datasource.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-添加-maven-依赖"><a class="markdownIt-Anchor" href="#1-添加-maven-依赖"></a> 1. 添加 maven 依赖</h2><blockquote><p>在 pom.xml 中添加对应的依赖</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- alibaba的druid数据库连接池 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-配置-configuration"><a class="markdownIt-Anchor" href="#2-配置-configuration"></a> 2. 配置 configuration</h2><h3 id="21-配置-datasource-数据源"><a class="markdownIt-Anchor" href="#21-配置-datasource-数据源"></a> 2.1 配置 dataSource 数据源</h3><blockquote><p>我们这里使用的是<code>druid</code>数据库连接池<br />Druid 是目前最好的数据库连接池，在功能、性能、扩展性方面，都超过其他数据库连接池，包括DBCP、C3P0、BoneCP、Proxool、JBoss DataSource。Druid 已经在阿里巴巴部署了超过600个应用，经过一年多生产环境大规模部署的严苛考验。Druid 是阿里巴巴开发的号称为监控而生的数据库连接池！</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataSourceConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Environment environment;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DataSourceConfig</span><span class="params">(Environment environment)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.environment = environment;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(&quot;primaryDataSource&quot;)</span></span><br><span class="line">    <span class="function">DataSource <span class="title">primaryDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        DruidDataSource dataSource = DruidDataSourceBuilder.create().build();</span><br><span class="line">        dataSource.setUrl(environment.getProperty(<span class="string">&quot;spring.datasource.druid.primary.url&quot;</span>));</span><br><span class="line">        dataSource.setUsername(environment.getProperty(<span class="string">&quot;spring.datasource.druid.primary.username&quot;</span>));</span><br><span class="line">        dataSource.setPassword(environment.getProperty(<span class="string">&quot;spring.datasource.druid.primary.password&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span> dataSource;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(&quot;secondDataSource&quot;)</span></span><br><span class="line">    <span class="function">DataSource <span class="title">secondDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        DruidDataSource dataSource = DruidDataSourceBuilder.create().build();</span><br><span class="line">        dataSource.setUrl(environment.getProperty(<span class="string">&quot;spring.datasource.druid.second.url&quot;</span>));</span><br><span class="line">        dataSource.setUsername(environment.getProperty(<span class="string">&quot;spring.datasource.druid.second.username&quot;</span>));</span><br><span class="line">        dataSource.setPassword(environment.getProperty(<span class="string">&quot;spring.datasource.druid.second.password&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span> dataSource;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="22-在-applicationyml-中添加对应配置"><a class="markdownIt-Anchor" href="#22-在-applicationyml-中添加对应配置"></a> 2.2 在 application.yml 中添加对应配置</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">    <span class="attr">driverClassName:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">druid:</span></span><br><span class="line">      <span class="attr">primary:</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/primary?useUnicode=true&amp;characterEncoding=UTF-8&amp;allowMultiQueries=true&amp;useSSL=false</span></span><br><span class="line">        <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">        <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">      <span class="attr">second:</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/second?useUnicode=true&amp;characterEncoding=UTF-8&amp;allowMultiQueries=true&amp;useSSL=false</span></span><br><span class="line">        <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">        <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">      <span class="attr">initial-size:</span> <span class="number">10</span></span><br><span class="line">      <span class="attr">max-active:</span> <span class="number">100</span></span><br><span class="line">      <span class="attr">min-idle:</span> <span class="number">10</span></span><br><span class="line">      <span class="attr">max-wait:</span> <span class="number">60000</span></span><br><span class="line">      <span class="attr">pool-prepared-statements:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">max-pool-prepared-statement-per-connection-size:</span> <span class="number">20</span></span><br><span class="line">      <span class="attr">time-between-eviction-runs-millis:</span> <span class="number">60000</span></span><br><span class="line">      <span class="attr">min-evictable-idle-time-millis:</span> <span class="number">300000</span></span><br><span class="line">      <span class="attr">validation-query:</span> <span class="string">SELECT</span> <span class="number">1</span> <span class="string">FROM</span> <span class="string">DUAL</span></span><br><span class="line">      <span class="attr">test-while-idle:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">test-on-borrow:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">test-on-return:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">stat-view-servlet:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">url-pattern:</span> <span class="string">/druid/*</span></span><br><span class="line">        <span class="attr">login-username:</span> <span class="string">admin</span></span><br><span class="line">        <span class="attr">login-password:</span> <span class="string">admin</span></span><br><span class="line">      <span class="attr">filter:</span></span><br><span class="line">        <span class="attr">stat:</span></span><br><span class="line">          <span class="attr">log-slow-sql:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">slow-sql-millis:</span> <span class="number">1000</span></span><br><span class="line">          <span class="attr">merge-sql:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">wall:</span></span><br><span class="line">          <span class="attr">config:</span></span><br><span class="line">            <span class="attr">multi-statement-allow:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">jpa:</span></span><br><span class="line">    <span class="attr">hibernate:</span></span><br><span class="line">      <span class="attr">ddl-auto:</span> <span class="string">none</span></span><br><span class="line">    <span class="attr">show-sql:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">open-in-view:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">database:</span> <span class="string">mysql</span></span><br></pre></td></tr></table></figure><h3 id="23-为每一个数据源创建-jpa-配置类"><a class="markdownIt-Anchor" href="#23-为每一个数据源创建-jpa-配置类"></a> 2.3 为每一个数据源创建 jpa 配置类</h3><blockquote><p>配置 Primary 数据源</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EntityScan(basePackages = &quot;com.hvnobug.jmds.entity.primary&quot;)</span></span><br><span class="line"><span class="comment">//1、实体扫描</span></span><br><span class="line"><span class="comment">//2、实体管理 ref</span></span><br><span class="line"><span class="comment">//3、事务管理</span></span><br><span class="line"><span class="meta">@EnableJpaRepositories(</span></span><br><span class="line"><span class="meta">        basePackages = &quot;com.hvnobug.jmds.repository.primary&quot;,</span></span><br><span class="line"><span class="meta">        entityManagerFactoryRef = &quot;primaryEntityManagerFactory&quot;,</span></span><br><span class="line"><span class="meta">        transactionManagerRef = &quot;primaryTransactionManager&quot;)</span></span><br><span class="line"><span class="meta">@EnableTransactionManagement</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PrimaryJpaConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> DataSource dataSource;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> JpaProperties jpaProperties;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PrimaryJpaConfig</span><span class="params">(<span class="meta">@Qualifier(&quot;primaryDataSource&quot;)</span> DataSource dataSource, JpaProperties jpaProperties)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.dataSource = dataSource;</span><br><span class="line">        <span class="keyword">this</span>.jpaProperties = jpaProperties;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(&quot;primaryEntityManagerFactory&quot;)</span></span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> LocalContainerEntityManagerFactoryBean <span class="title">primaryEntityManagerFactory</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        LocalContainerEntityManagerFactoryBean factory =</span><br><span class="line">                <span class="keyword">new</span> LocalContainerEntityManagerFactoryBean();</span><br><span class="line">        factory.setDataSource(dataSource);</span><br><span class="line">        factory.setPackagesToScan(<span class="string">&quot;com.hvnobug.jmds.repository.primary&quot;</span>,<span class="string">&quot;com.hvnobug.jmds.entity.primary&quot;</span>);</span><br><span class="line">        factory.setJpaVendorAdapter(<span class="keyword">new</span> HibernateJpaVendorAdapter());</span><br><span class="line">        factory.setJpaProperties(jpaProperties());</span><br><span class="line">        <span class="keyword">return</span> factory;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// EntityManager 不过解释，用过 jpa 的应该都了解</span></span><br><span class="line">    <span class="meta">@Bean(name = &quot;primaryEntityManager&quot;)</span></span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> EntityManager <span class="title">entityManager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Objects.requireNonNull(primaryEntityManagerFactory().getObject()).createEntityManager();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// jpa 事务管理</span></span><br><span class="line">    <span class="meta">@Bean(name = &quot;primaryTransactionManager&quot;)</span></span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> JpaTransactionManager <span class="title">transactionManager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        JpaTransactionManager jpaTransactionManager = <span class="keyword">new</span> JpaTransactionManager();</span><br><span class="line">        jpaTransactionManager.setEntityManagerFactory(primaryEntityManagerFactory().getObject());</span><br><span class="line">        <span class="keyword">return</span> jpaTransactionManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>配置 Second 数据源</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EntityScan(basePackages = &quot;com.hvnobug.jmds.entity.second&quot;)</span></span><br><span class="line"><span class="comment">//1、实体扫描</span></span><br><span class="line"><span class="comment">//2、实体管理 ref</span></span><br><span class="line"><span class="comment">//3、事务管理</span></span><br><span class="line"><span class="meta">@EnableJpaRepositories(</span></span><br><span class="line"><span class="meta">        basePackages = &quot;com.hvnobug.jmds.repository.second&quot;,</span></span><br><span class="line"><span class="meta">        entityManagerFactoryRef = &quot;secondEntityManagerFactory&quot;,</span></span><br><span class="line"><span class="meta">        transactionManagerRef = &quot;secondTransactionManager&quot;)</span></span><br><span class="line"><span class="meta">@EnableTransactionManagement</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecondJpaConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> DataSource dataSource;</span><br><span class="line">        </span><br><span class="line">    <span class="meta">@Autowired</span> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SecondJpaConfig</span><span class="params">(<span class="meta">@Qualifier(&quot;secondDataSource&quot;)</span> DataSource dataSource, JpaProperties jpaProperties)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.dataSource = dataSource;</span><br><span class="line">        <span class="keyword">this</span>.jpaProperties = jpaProperties;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Bean(&quot;secondEntityManagerFactory&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> LocalContainerEntityManagerFactoryBean <span class="title">secondEntityManagerFactory</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        LocalContainerEntityManagerFactoryBean factory =</span><br><span class="line">                <span class="keyword">new</span> LocalContainerEntityManagerFactoryBean();</span><br><span class="line">        factory.setDataSource(dataSource);</span><br><span class="line">        factory.setPackagesToScan(<span class="string">&quot;com.hvnobug.jmds.repository.second&quot;</span>,<span class="string">&quot;com.hvnobug.jmds.entity.second&quot;</span>);</span><br><span class="line">        factory.setJpaVendorAdapter(<span class="keyword">new</span> HibernateJpaVendorAdapter());</span><br><span class="line">        factory.setJpaProperties(jpaProperties());</span><br><span class="line">        <span class="keyword">return</span> factory;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// EntityManager 不过解释，用过 jpa 的应该都了解</span></span><br><span class="line">    <span class="meta">@Bean(name = &quot;secondEntityManager&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> EntityManager <span class="title">entityManager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Objects.requireNonNull(secondEntityManagerFactory().getObject()).createEntityManager();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// jpa 事务管理</span></span><br><span class="line">    <span class="meta">@Bean(name = &quot;secondTransactionManager&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> JpaTransactionManager <span class="title">transactionManager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        JpaTransactionManager jpaTransactionManager = <span class="keyword">new</span> JpaTransactionManager();</span><br><span class="line">        jpaTransactionManager.setEntityManagerFactory(secondEntityManagerFactory().getObject());</span><br><span class="line">        <span class="keyword">return</span> jpaTransactionManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>此时 Spring 会为 com.hvnobug.jmds.repository.primary 包下的 Repository 注入 Primary 数据源<br />会为 com.hvnobug.jmds.repository.second 包下的 Repository 注入 Second 数据源</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> spring-boot </tag>
            
            <tag> druid </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot+Quartz+Druid实现动态定时任务</title>
      <link href="post/spring-boot-quartz.html"/>
      <url>post/spring-boot-quartz.html</url>
      
        <content type="html"><![CDATA[<h2 id="添加-maven-依赖"><a class="markdownIt-Anchor" href="#添加-maven-依赖"></a> 添加 maven 依赖</h2><blockquote><p>在 pom.xml 中添加 quartz 对应的依赖</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- alibaba 的 druid 数据库连接池 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-quartz<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="首先启动类中添加-enablescheduling"><a class="markdownIt-Anchor" href="#首先启动类中添加-enablescheduling"></a> 首先启动类中添加 @EnableScheduling</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableScheduling</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyApplication</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(MyApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="添加-applicationyml-的配置"><a class="markdownIt-Anchor" href="#添加-applicationyml-的配置"></a> 添加 application.yml 的配置</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">    <span class="attr">driverClassName:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">druid:</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/qrtz?useUnicode=true&amp;characterEncoding=UTF-8&amp;allowMultiQueries=true&amp;useSSL=false</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">      <span class="attr">initial-size:</span> <span class="number">10</span></span><br><span class="line">      <span class="attr">max-active:</span> <span class="number">100</span></span><br><span class="line">      <span class="attr">min-idle:</span> <span class="number">10</span></span><br><span class="line">      <span class="attr">max-wait:</span> <span class="number">60000</span></span><br><span class="line">      <span class="attr">pool-prepared-statements:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">max-pool-prepared-statement-per-connection-size:</span> <span class="number">20</span></span><br><span class="line">      <span class="attr">time-between-eviction-runs-millis:</span> <span class="number">60000</span></span><br><span class="line">      <span class="attr">min-evictable-idle-time-millis:</span> <span class="number">300000</span></span><br><span class="line">      <span class="attr">validation-query:</span> <span class="string">SELECT</span> <span class="number">1</span> <span class="string">FROM</span> <span class="string">DUAL</span></span><br><span class="line">      <span class="attr">test-while-idle:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">test-on-borrow:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">test-on-return:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">stat-view-servlet:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">url-pattern:</span> <span class="string">/druid/*</span></span><br><span class="line">        <span class="attr">login-username:</span> <span class="string">admin</span></span><br><span class="line">        <span class="attr">login-password:</span> <span class="string">admin</span></span><br><span class="line">      <span class="attr">filter:</span></span><br><span class="line">        <span class="attr">stat:</span></span><br><span class="line">          <span class="attr">log-slow-sql:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">slow-sql-millis:</span> <span class="number">1000</span></span><br><span class="line">          <span class="attr">merge-sql:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">wall:</span></span><br><span class="line">          <span class="attr">config:</span></span><br><span class="line">            <span class="attr">multi-statement-allow:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">quartz:</span></span><br><span class="line">    <span class="attr">defaultJobGroupName:</span> <span class="string">HVNOBUG_JOB_GROUP</span></span><br><span class="line">    <span class="attr">defaultTriggerGroupName:</span> <span class="string">HVNOBUG_TRIGGER_GROUP</span></span><br><span class="line">    <span class="attr">properties:</span></span><br><span class="line">      <span class="attr">org:</span></span><br><span class="line">        <span class="attr">quartz:</span></span><br><span class="line">          <span class="attr">scheduler:</span></span><br><span class="line">            <span class="attr">instanceName:</span> <span class="string">clusteredScheduler</span></span><br><span class="line">            <span class="attr">instanceId:</span> <span class="string">AUTO</span></span><br><span class="line">          <span class="attr">jobStore:</span></span><br><span class="line">            <span class="attr">dataSource:</span> <span class="string">qrtz</span></span><br><span class="line">            <span class="attr">class:</span> <span class="string">org.quartz.impl.jdbcjobstore.JobStoreTX</span></span><br><span class="line">            <span class="attr">driverDelegateClass:</span> <span class="string">org.quartz.impl.jdbcjobstore.StdJDBCDelegate</span></span><br><span class="line">            <span class="attr">tablePrefix:</span> <span class="string">QRTZ_</span></span><br><span class="line">            <span class="attr">isClustered:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">clusterCheckinInterval:</span> <span class="number">10000</span></span><br><span class="line">            <span class="attr">useProperties:</span> <span class="literal">false</span></span><br><span class="line">          <span class="attr">threadPool:</span></span><br><span class="line">            <span class="attr">class:</span> <span class="string">org.quartz.simpl.SimpleThreadPool</span></span><br><span class="line">            <span class="attr">threadCount:</span> <span class="number">10</span></span><br><span class="line">            <span class="attr">threadPriority:</span> <span class="number">5</span></span><br><span class="line">            <span class="attr">threadsInheritContextClassLoaderOfInitializingThread:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">job-store-type:</span> <span class="string">jdbc</span></span><br><span class="line">    <span class="attr">jdbc:</span></span><br><span class="line">      <span class="attr">initialize-schema:</span> <span class="string">never</span></span><br><span class="line">    <span class="attr">datasource:</span></span><br><span class="line">      <span class="attr">qrtz:</span></span><br><span class="line">        <span class="attr">connection-provider:</span></span><br><span class="line">          <span class="attr">class:</span> <span class="string">com.hvnobug.quartz.demo.config.DruidConnectionProvider</span></span><br></pre></td></tr></table></figure><h3 id="创建-druidconnectionprovider"><a class="markdownIt-Anchor" href="#创建-druidconnectionprovider"></a> 创建 DruidConnectionProvider</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DruidConnectionProvider</span> <span class="keyword">implements</span> <span class="title">ConnectionProvider</span>, <span class="title">ApplicationContextAware</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ApplicationContext applicationContext;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> DruidDataSource dataSource;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dataSource.getConnection();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">shutdown</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        dataSource.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initialize</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        dataSource = (DruidDataSource) applicationContext.getBean(DataSource.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setApplicationContext</span><span class="params">(ApplicationContext applicationContext)</span> <span class="keyword">throws</span> BeansException </span>&#123;</span><br><span class="line">        DruidConnectionProvider.applicationContext = applicationContext;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="创建-quartzservice"><a class="markdownIt-Anchor" href="#创建-quartzservice"></a> 创建 QuartzService</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QuartzService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">QuartzService</span><span class="params">(Scheduler scheduler)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.scheduler = scheduler;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Scheduler scheduler;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.quartz.defaultJobGroupName&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String jobGroupName;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.quartz.defaultTriggerGroupName&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String triggerGroupName;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addJob</span><span class="params">(String jobName, Class&lt;? extends Job&gt; cls, String time)</span> </span>&#123;</span><br><span class="line">        addJob(jobName, cls, time, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addJob</span><span class="params">(String jobName, Class&lt;? extends Job&gt; cls, String time, Map&lt;String, Object&gt; parameter)</span> </span>&#123;</span><br><span class="line">        addJob(jobName, jobGroupName, jobName, triggerGroupName, cls, time, parameter);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addJob</span><span class="params">(String jobName, String jobGroupName,</span></span></span><br><span class="line"><span class="function"><span class="params">                       String triggerName, String triggerGroupName, Class&lt;? extends Job&gt; jobClass,</span></span></span><br><span class="line"><span class="function"><span class="params">                       String time)</span> </span>&#123;</span><br><span class="line">        addJob(jobName, jobGroupName, triggerName, triggerGroupName, jobClass, time, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addJob</span><span class="params">(String jobName, String jobGroupName,</span></span></span><br><span class="line"><span class="function"><span class="params">                       String triggerName, String triggerGroupName, Class&lt;? extends Job&gt; jobClass,</span></span></span><br><span class="line"><span class="function"><span class="params">                       String time, Map&lt;String, Object&gt; parameter)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            JobDetail jobDetail = JobBuilder.newJob(jobClass).withIdentity(jobName, jobGroupName).build();</span><br><span class="line">            <span class="keyword">if</span> (parameter != <span class="keyword">null</span> &amp;&amp; !parameter.isEmpty())</span><br><span class="line">                jobDetail.getJobDataMap().put(<span class="string">&quot;parameterList&quot;</span>, parameter);                            </span><br><span class="line">            CronTrigger trigger = TriggerBuilder     </span><br><span class="line">                    .newTrigger()</span><br><span class="line">                    .withIdentity(triggerName, triggerGroupName)</span><br><span class="line">                    .withSchedule(CronScheduleBuilder.cronSchedule(time))</span><br><span class="line">                    .build();</span><br><span class="line">            scheduler.scheduleJob(jobDetail, trigger);</span><br><span class="line">            <span class="keyword">if</span> (!scheduler.isShutdown()) &#123;</span><br><span class="line">                scheduler.start();     </span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">modifyJobTime</span><span class="params">(String jobName, String time)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            TriggerKey triggerKey = TriggerKey.triggerKey(jobName, triggerGroupName);        </span><br><span class="line">            CronTrigger trigger = (CronTrigger) scheduler.getTrigger(triggerKey);               </span><br><span class="line">            <span class="keyword">if</span> (trigger == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            String oldTime = trigger.getCronExpression();</span><br><span class="line">            <span class="keyword">if</span> (!oldTime.equalsIgnoreCase(time)) &#123;</span><br><span class="line">                JobKey jobKey = JobKey.jobKey(jobName, jobGroupName);                       </span><br><span class="line">                JobDetail jobDetail = scheduler.getJobDetail(jobKey);</span><br><span class="line">                Class&lt;? extends Job&gt; objJobClass = jobDetail.getJobClass();</span><br><span class="line">                removeJob(jobName);</span><br><span class="line">                addJob(jobName, objJobClass, time);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">modifyJobTime</span><span class="params">(String triggerName, String triggerGroupName, String time)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            TriggerKey triggerKey = TriggerKey.triggerKey(triggerName, triggerGroupName);   </span><br><span class="line">            CronTrigger trigger = (CronTrigger) scheduler.getTrigger(triggerKey);               </span><br><span class="line">            <span class="keyword">if</span> (trigger == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            CronScheduleBuilder scheduleBuilder = CronScheduleBuilder.cronSchedule(trigger.getCronExpression());</span><br><span class="line">            String oldTime = trigger.getCronExpression();</span><br><span class="line">            <span class="keyword">if</span> (!oldTime.equalsIgnoreCase(time)) &#123;</span><br><span class="line">                trigger = trigger.getTriggerBuilder()        </span><br><span class="line">                        .withIdentity(triggerKey)</span><br><span class="line">                        .withSchedule(scheduleBuilder)</span><br><span class="line">                        .withSchedule(CronScheduleBuilder.cronSchedule(time))</span><br><span class="line">                        .build();</span><br><span class="line">                scheduler.rescheduleJob(triggerKey, trigger);                </span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeJob</span><span class="params">(String jobName)</span> </span>&#123;</span><br><span class="line">        removeJob(jobName, jobGroupName, jobName, triggerGroupName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeJob</span><span class="params">(String jobName, String triggerName)</span> </span>&#123;</span><br><span class="line">        removeJob(jobName, jobGroupName, triggerName, triggerGroupName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeJob</span><span class="params">(String jobName, String jobGroupName, String triggerName, String triggerGroupName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            TriggerKey triggerKey = TriggerKey.triggerKey(triggerName, triggerGroupName);   </span><br><span class="line">            JobKey jobKey = JobKey.jobKey(jobName, jobGroupName);                           </span><br><span class="line">            scheduler.pauseTrigger(triggerKey);    </span><br><span class="line">            scheduler.unscheduleJob(triggerKey);</span><br><span class="line">            scheduler.deleteJob(jobKey); </span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startJobs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            scheduler.start();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">shutdownJobs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (!scheduler.isShutdown()) &#123;</span><br><span class="line">                scheduler.shutdown();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建-job"><a class="markdownIt-Anchor" href="#创建-job"></a> 创建 Job</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoJob</span> <span class="keyword">extends</span> <span class="title">QuartzJobBean</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">executeInternal</span><span class="params">(JobExecutionContext context)</span> <span class="keyword">throws</span> JobExecutionException </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(String.format(<span class="string">&quot;now is %d&quot;</span>, System.currentTimeMillis()));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="启动-job"><a class="markdownIt-Anchor" href="#启动-job"></a> 启动 Job</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">QuartzService quartzService;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 每五秒执行一次</span></span><br><span class="line">quartzService.addJob(<span class="string">&quot;demoJob&quot;</span>,DemoJob.class,<span class="string">&quot;1/5 * * * * ?&quot;</span>);</span><br></pre></td></tr></table></figure><blockquote><p>此时我们可以创建一个 web 页面,通过调用 QuartzService 来实现动态定时任务</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> spring-boot </tag>
            
            <tag> druid </tag>
            
            <tag> quartz </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Javascript数组操作</title>
      <link href="post/es6-array.html"/>
      <url>post/es6-array.html</url>
      
        <content type="html"><![CDATA[<h2 id="es5"><a class="markdownIt-Anchor" href="#es5"></a> ES5</h2><h3 id="pop"><a class="markdownIt-Anchor" href="#pop"></a> pop</h3><blockquote><p>从数组中删除最后一个元素并返回。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">const</span> removedItem = arr.pop(); <span class="comment">// 3</span></span><br></pre></td></tr></table></figure><h3 id="shift"><a class="markdownIt-Anchor" href="#shift"></a> shift</h3><blockquote><p>从数组中删除第一个元素并返回它。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">const</span> removedItem = arr.shift(); <span class="comment">// 1</span></span><br></pre></td></tr></table></figure><h3 id="push"><a class="markdownIt-Anchor" href="#push"></a> push</h3><blockquote><p>向数组追加新元素，并返回数组的新长度。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">const</span> newLength = arr.push(<span class="number">4</span>); <span class="comment">// 4</span></span><br></pre></td></tr></table></figure><h3 id="unshift"><a class="markdownIt-Anchor" href="#unshift"></a> unshift</h3><blockquote><p>在数组的开头插入新元素。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line">arr.unshift(<span class="number">4</span>); <span class="comment">// [4, 1, 2, 3]</span></span><br></pre></td></tr></table></figure><h3 id="indexof"><a class="markdownIt-Anchor" href="#indexof"></a> indexOf</h3><blockquote><p>返回数组中第一个出现值的索引。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">1</span>];</span><br><span class="line">arr.indexOf(<span class="number">3</span>, <span class="number">0</span>); <span class="comment">// 2</span></span><br></pre></td></tr></table></figure><h3 id="lastindexof"><a class="markdownIt-Anchor" href="#lastindexof"></a> lastIndexOf</h3><blockquote><p>返回数组中指定值的最后一次出现的索引。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">1</span>];</span><br><span class="line">arr.lastIndexOf(<span class="number">3</span>); <span class="comment">// 5</span></span><br></pre></td></tr></table></figure><h3 id="every"><a class="markdownIt-Anchor" href="#every"></a> every</h3><blockquote><p>检测数值元素的每个元素是否都符合条件。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line">arr.every(<span class="function"><span class="params">item</span>=&gt;</span> item &amp; <span class="number">1</span>); <span class="comment">// false</span></span><br></pre></td></tr></table></figure><h3 id="some"><a class="markdownIt-Anchor" href="#some"></a> some</h3><blockquote><p>检测数组元素中是否有元素符合指定条件。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line">arr.some(<span class="function"><span class="params">item</span>=&gt;</span> item &amp; <span class="number">1</span>); <span class="comment">// true</span></span><br></pre></td></tr></table></figure><h3 id="reduce"><a class="markdownIt-Anchor" href="#reduce"></a> reduce</h3><blockquote><p>将数组元素计算为一个值（从左到右）。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"><span class="keyword">const</span> reduceArr = arr.reduce(<span class="function">(<span class="params">previousValue, currentValue, currentIndex, array</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> previousValue * currentValue &lt;&lt; <span class="number">1</span>;</span><br><span class="line">&#125;, <span class="number">1</span>); <span class="comment">// 384 = 1 * 2 * 3 * 4 &lt;&lt; arr.length</span></span><br></pre></td></tr></table></figure><h3 id="reduceright"><a class="markdownIt-Anchor" href="#reduceright"></a> reduceRight</h3><blockquote><p>将数组元素计算为一个值（从右到左）。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"><span class="keyword">const</span> reduceRightArr = arr.reduceRight(<span class="function">(<span class="params">previousValue, currentValue, currentIndex, array</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> previousValue * currentValue &lt;&lt; <span class="number">1</span>;</span><br><span class="line">&#125;, <span class="number">1</span>); <span class="comment">// 384 = 4 * 3 * 2 * 1 &lt;&lt; arr.length</span></span><br></pre></td></tr></table></figure><h3 id="concat"><a class="markdownIt-Anchor" href="#concat"></a> concat</h3><blockquote><p>用于连接两个或多个数组。该方法不会改变现有的数组，而仅仅会返回被连接数组的一个副本。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr1 = [<span class="number">1</span>, <span class="number">2</span>];</span><br><span class="line"><span class="keyword">const</span> arr2 = [<span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"><span class="keyword">const</span> concatArr = arr1.concat(arr2); <span class="comment">// [1, 2, 3, 4]</span></span><br></pre></td></tr></table></figure><h3 id="join"><a class="markdownIt-Anchor" href="#join"></a> join</h3><blockquote><p>添加由指定分隔符字符串分隔的数组的所有元素。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">const</span> joinStr = arr.join(<span class="string">&#x27;-&#x27;</span>); <span class="comment">// &#x27;1-2-3&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="sort"><a class="markdownIt-Anchor" href="#sort"></a> sort</h3><blockquote><p>根据指定规则对数组排序</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> users = [<span class="string">&#x27;Esther&#x27;</span>, <span class="string">&#x27;Emil&#x27;</span>, <span class="string">&#x27;Amy&#x27;</span>];</span><br><span class="line">users.sort(<span class="function">(<span class="params">u1, u2</span>)=&gt;</span> u1.length - u2.length); <span class="comment">// [&quot;Amy&quot;, &quot;Emil&quot;, &quot;Esther&quot;] 按字符长度正序</span></span><br></pre></td></tr></table></figure><h3 id="reverse"><a class="markdownIt-Anchor" href="#reverse"></a> reverse</h3><blockquote><p>反转数组中的元素。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">const</span> reverseArr = arr.reverse(); <span class="comment">// [3, 2, 1]</span></span><br></pre></td></tr></table></figure><h3 id="slice"><a class="markdownIt-Anchor" href="#slice"></a> slice</h3><blockquote><p>截取数组中的一部分</p></blockquote><p>参数列表</p><blockquote><ul><li><strong>start</strong> 可选。规定从何处开始选取。如果是负数，那么它规定从数组尾部开始算起的位置。也就是说，-1 指最后一个元素，-2 指倒数第二个元素，以此类推。</li><li><strong>end</strong> 可选。规定从何处结束选取。该参数是数组片断结束处的数组下标。如果没有指定该参数，那么切分的数组包含从 start 到数组结束的所有元素。如果这个参数是负数，那么它规定的是从数组尾部开始算起的元素。</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"><span class="keyword">const</span> sliceArr = arr.slice(-<span class="number">3</span>, -<span class="number">1</span>); <span class="comment">// [2, 3]</span></span><br></pre></td></tr></table></figure><h3 id="splice"><a class="markdownIt-Anchor" href="#splice"></a> splice</h3><p>参数列表</p><blockquote><ul><li><strong>index</strong> 必需。规定从何处添加/删除元素。该参数是开始插入和（或）删除的数组元素的下标，必须是数字。</li><li><strong>deleteCount</strong> 可选。规定应该删除多少元素。必须是数字，但可以是 “0”。如果未规定此参数，则删除从 index 开始到原数组结尾的所有元素。</li><li><strong>…items</strong> 可选。要添加到数组的新元素</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;4&#x27;</span>];</span><br><span class="line">arr.splice(<span class="number">2</span>, <span class="number">1</span>, <span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;8&#x27;</span>); <span class="comment">// [&quot;1&quot;, &quot;2&quot;, &quot;7&quot;, &quot;8&quot;, &quot;4&quot;]</span></span><br></pre></td></tr></table></figure><h3 id="foreach"><a class="markdownIt-Anchor" href="#foreach"></a> forEach</h3><blockquote><p>对数组进行遍历,不能中断,没有返回值</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line">arr.forEach(<span class="function">(<span class="params">item, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`item:<span class="subst">$&#123;item&#125;</span>,index:<span class="subst">$&#123;index&#125;</span>`</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="map"><a class="markdownIt-Anchor" href="#map"></a> map</h3><blockquote><p>对数组中的每个元素进行处理,得到新的数组。不改变原有数据的结构和数据。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">const</span> mapArr = arr.map(<span class="function"><span class="params">item</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> item * <span class="number">2</span>;</span><br><span class="line">&#125;); <span class="comment">// [2, 4, 6]</span></span><br></pre></td></tr></table></figure><h3 id="filter"><a class="markdownIt-Anchor" href="#filter"></a> filter</h3><blockquote><p>检测数值元素，并返回符合条件所有元素的数组。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"><span class="keyword">const</span> filterArr = arr.filter(<span class="function"><span class="params">item</span>=&gt;</span> item &amp; <span class="number">1</span>); <span class="comment">// [1, 3]</span></span><br></pre></td></tr></table></figure><h2 id="es6"><a class="markdownIt-Anchor" href="#es6"></a> ES6</h2><h3 id="of"><a class="markdownIt-Anchor" href="#of"></a> of</h3><blockquote><p>将参数中所有值作为元素形成数组。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr1 = <span class="built_in">Array</span>.of(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>); <span class="comment">// [1, 2, 3, 4]</span></span><br><span class="line"><span class="comment">// 参数值可为不同类型</span></span><br><span class="line"><span class="keyword">const</span> arr2 = <span class="built_in">Array</span>.of(<span class="number">1</span>, <span class="string">&#x27;2&#x27;</span>, <span class="literal">false</span>); <span class="comment">// [1, &#x27;2&#x27;, false]</span></span><br><span class="line"><span class="comment">// 参数为空时返回空数组</span></span><br><span class="line"><span class="keyword">const</span> arr3 = <span class="built_in">Array</span>.of(); <span class="comment">// []</span></span><br></pre></td></tr></table></figure><h3 id="from"><a class="markdownIt-Anchor" href="#from"></a> from</h3><blockquote><p>将类数组对象或可迭代对象转化为数组。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 参数为数组,返回与原数组一样的数组</span></span><br><span class="line"><span class="keyword">const</span> arr1 = <span class="built_in">Array</span>.from([<span class="number">1</span>,<span class="number">2</span>]); <span class="comment">// [1, 2]</span></span><br><span class="line"><span class="comment">// 参数含空位</span></span><br><span class="line"><span class="keyword">const</span> arr2 = <span class="built_in">Array</span>.from([<span class="number">1</span>,<span class="number">2</span>,]); <span class="comment">// [1, 2, undefined]</span></span><br></pre></td></tr></table></figure><h3 id="find"><a class="markdownIt-Anchor" href="#find"></a> find</h3><blockquote><p>查找数组中符合条件的元素,若有多个符合条件的元素，则返回第一个元素。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = <span class="built_in">Array</span>.of(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line"><span class="keyword">const</span> findArr = arr.find(<span class="function"><span class="params">item</span>=&gt;</span> item &amp; <span class="number">1</span>); <span class="comment">// [1]</span></span><br></pre></td></tr></table></figure><h3 id="findindex"><a class="markdownIt-Anchor" href="#findindex"></a> findIndex</h3><blockquote><p>查找数组中符合条件的元素索引，若有多个符合条件的元素，则返回第一个元素索引。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = <span class="built_in">Array</span>.of(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line"><span class="keyword">const</span> findArr = arr.findIndex(<span class="function"><span class="params">item</span>=&gt;</span> item &amp; <span class="number">1</span>); <span class="comment">// 0</span></span><br></pre></td></tr></table></figure><h3 id="fill"><a class="markdownIt-Anchor" href="#fill"></a> fill</h3><blockquote><p>将一定范围索引的数组元素内容填充为单个指定的值。</p></blockquote><p>参数列表</p><blockquote><ul><li><strong>value</strong> 必需。填充的值。</li><li><strong>start</strong> 可选。元素复制的起始位置。</li><li><strong>end</strong> 可选。停止复制的索引位置 (默认为 array.length)。如果为负值，表示倒数。</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = <span class="built_in">Array</span>.of(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line"><span class="keyword">const</span> fillArr = arr.fill(<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>); <span class="comment">// [1, 0, 3, 4]</span></span><br></pre></td></tr></table></figure><h3 id="copywithin"><a class="markdownIt-Anchor" href="#copywithin"></a> copyWithin</h3><blockquote><p>复制数组的前面两个元素到后面两个元素上：</p></blockquote><p>参数列表</p><blockquote><ul><li><strong>target</strong> 必需。复制到指定目标索引位置。</li><li><strong>start</strong> 可选。元素复制的起始位置。</li><li><strong>end</strong> 可选。停止复制的索引位置 (默认为 array.length)。如果为负值，表示倒数。</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = <span class="built_in">Array</span>.of(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>);</span><br><span class="line"><span class="keyword">const</span> copyWithinArr = arr.copyWithin(<span class="number">2</span>, <span class="number">0</span>); <span class="comment">// [1, 2, 1, 2, 3, 4]</span></span><br></pre></td></tr></table></figure><h3 id="includes"><a class="markdownIt-Anchor" href="#includes"></a> includes</h3><blockquote><p>判断一个数组是否包含一个指定的值</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = <span class="built_in">Array</span>.of(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>); <span class="comment">// [1, 2, 3, 4]</span></span><br><span class="line"><span class="keyword">const</span> isIncluded = arr.includes(<span class="number">5</span>); <span class="comment">// false</span></span><br></pre></td></tr></table></figure><h2 id="es2019"><a class="markdownIt-Anchor" href="#es2019"></a> ES2019</h2><h3 id="flat"><a class="markdownIt-Anchor" href="#flat"></a> flat</h3><blockquote><p>嵌套数组转一维数组</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr1 = [<span class="number">1</span>, [<span class="number">2</span>, <span class="number">3</span>]];</span><br><span class="line"><span class="keyword">const</span> flatArr1 = arr1.flat(); <span class="comment">// [1, 2, 3]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 指定转换的嵌套层数</span></span><br><span class="line"><span class="keyword">const</span> arr2 = [<span class="number">1</span>, [<span class="number">2</span>, [<span class="number">3</span>]]];</span><br><span class="line"><span class="keyword">const</span> flatArr2 = arr2.flat(); <span class="comment">// [1, 2, 3]</span></span><br></pre></td></tr></table></figure><h3 id="flatmap"><a class="markdownIt-Anchor" href="#flatmap"></a> flatMap</h3><blockquote><p>先对数组中每个元素进行了的处理，再对数组执行 flat() 方法。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, [<span class="number">2</span>, <span class="number">3</span>]];</span><br><span class="line"><span class="keyword">const</span> mapArr = arr.flatMap(<span class="function"><span class="params">item</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> item * <span class="number">2</span>;</span><br><span class="line">&#125;); <span class="comment">// [2, 4, 6]</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java反射之Type接口</title>
      <link href="post/java-reflect-type.html"/>
      <url>post/java-reflect-type.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-type接口简介"><a class="markdownIt-Anchor" href="#1-type接口简介"></a> 1. Type接口简介</h2><blockquote><p>Type 是 Java 编程语言中所有类型的公共高级接口。它们包括原始类型、参数化类型、数组类型、类型变量和基本类型。(从JDK1.5开始使用。)</p></blockquote><p>Type体系中类型的包括:</p><ul><li>原始类型(Type):不仅仅包含我们平常所指的类，还包括枚举、数组、注解等</li><li>参数化类型(ParameterizedType):就是我们平常所用到的泛型List<String>、Map&lt;K,V&gt;、Set<T>、Class&lt;?&gt;</li><li>数组类型(GenericArrayType):并不是我们工作中所使用的数组 String[] 、byte[]，而是带有泛型的数组，即T[]</li><li>类型变量(TypeVariable):比如 T a</li><li>基本类型(Class):原始类型，每个类(貌似接口也有)都会有个 Class 对象</li><li><s>通配符表达式，或泛型表达式，它虽然是 Type 的一个子接口，但并不是 Java 类型中的一种，表示的仅仅是类似 ? extends T、? super K这样的通配符表达式。</s></li></ul><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/type.png" alt="Type" title="Type" /></p><p>本文参考<a href="https://www.jianshu.com/u/c98c50394601">贾博岩</a>的<a href="https://www.jianshu.com/p/7649f86614d3">我眼中的Java-Type体系</a>。</p><h2 id="2-获取type类型"><a class="markdownIt-Anchor" href="#2-获取type类型"></a> 2. 获取Type类型</h2><blockquote><p>获取<code>Type</code>类型对象</p></blockquote><ol><li>调用 Class.getGenericInterfaces()方法获取该类实现接口的 Type 类型列表。</li><li>调用 Class.getDeclaredFields()方法获取该类 File 字段列表。调用 File.getGenericType()方法得到这个属性的 Type类 型。</li><li>调用 Method.getGenericParameterTypes()方法获得获取该方法参数 Type 类型列表。</li></ol><h2 id="3-type的子接口"><a class="markdownIt-Anchor" href="#3-type的子接口"></a> 3. Type的子接口</h2><h3 id="31-parameterizedtype"><a class="markdownIt-Anchor" href="#31-parameterizedtype"></a> 3.1 ParameterizedType</h3><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/ParameterizedType.png" alt="ParameterizedType" title="ParameterizedType" /></p><blockquote><p>参数化类型，即泛型；例如：List&lt;T&gt;、Map&lt;K,V&gt;等带有参数化的对象<br />在<code>ParameterizedType</code>接口中，有3个方法，分别是 getActualTypeArguments()、 getRawType()、 getOwnerType();</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ParameterizedType</span> <span class="keyword">extends</span> <span class="title">Type</span> </span>&#123;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** 获取范型 &lt;&gt; 中的实际类型 */</span></span><br><span class="line">    Type[] getActualTypeArguments();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 获取范型 &lt;&gt; 前面的实际类型 */</span> </span><br><span class="line">    <span class="function">Type <span class="title">getRawType</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 获取该类型所属,没有返回🈳️ */</span></span><br><span class="line">    <span class="function">Type <span class="title">getOwnerType</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="311-getactualtypearguments"><a class="markdownIt-Anchor" href="#311-getactualtypearguments"></a> 3.1.1 getActualTypeArguments</h4><blockquote><p>获取泛型中的实际类型，可能会存在多个泛型，例如Map&lt;K,V&gt;,所以会返回Type[]数组；</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/ParameterizedType-getActualTypeArguments.png" alt="ParameterizedType-getActualTypeArguments" title="ParameterizedType-getActualTypeArguments" /></p><blockquote><p>值得注意的是，无论&lt;&gt;中有几层嵌套(List&lt;Map&lt;String,Integer&gt;)，getActualTypeArguments()方法永远都是脱去最外层的&lt;&gt;(也就是List&lt;&gt;)，将括号内的内容（Map&lt;String,Integer&gt;）返回；</p></blockquote><blockquote><p>我们经常遇到的 List<T>，通过 getActualTypeArguments()   方法，得到的返回值是 TypeVariableImpl 对象，也就是 TypeVariable 类型(后面介绍);</p></blockquote><h4 id="312-getownertype"><a class="markdownIt-Anchor" href="#312-getownertype"></a> 3.1.2 getOwnerType</h4><blockquote><p>获取声明泛型的类或者接口，也就是泛型中&lt;&gt;前面的那个值；</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/ParameterizedType-getOwnerType.png" alt="ParameterizedType-getOwnerType" title="ParameterizedType-getOwnerType" /></p><h4 id="313-getrawtype"><a class="markdownIt-Anchor" href="#313-getrawtype"></a> 3.1.3 getRawType</h4><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/ParameterizedType-getRawType.png" alt="ParameterizedType-getRawType" title="ParameterizedType-getRawType" /></p><blockquote><p>通过方法的名称，我们大概了解到，此方法是获取泛型的拥有者，那么拥有者是个什么意思？</p></blockquote><blockquote><p>Returns a {@code Type} object representing the type that this type     * is a member of.  For example, if this type is {@code O.I},     * return a representation of {@code O}.  （摘自JDK注释）</p></blockquote><blockquote><p>通过注解，我们得知，“拥有者”表示的含义–内部类的“父类”，通过 getOwnerType()方法可以获取到内部类的“拥有者”；例如： Map  就是 Map.Entry&lt;String,String&gt; 的拥有者；</p></blockquote><h3 id="32-genericarraytype"><a class="markdownIt-Anchor" href="#32-genericarraytype"></a> 3.2 GenericArrayType</h3><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/GenericArrayType.png" alt="GenericArrayType" title="GenericArrayType" /></p><blockquote><p>泛型数组类型，用来描述<code>ParameterizedType</code>、<code>TypeVariable</code>类型的数组；即 List&lt;T&gt;[] 、T[]等<br />在<code>GenericArrayType</code>接口中，仅有1个方法，就是 getGenericComponentType()</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">GenericArrayType</span> <span class="keyword">extends</span> <span class="title">Type</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/** 获得这个数组元素类型,即获得: A&lt;T&gt; (A&lt;T&gt;[]) 或 (T[]) */</span></span><br><span class="line">    <span class="function">Type <span class="title">getGenericComponentType</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="321-getgenericcomponenttype"><a class="markdownIt-Anchor" href="#321-getgenericcomponenttype"></a> 3.2.1 getGenericComponentType</h4><blockquote><p>返回泛型数组中元素的Type类型，即 List&lt;String&gt;[] 中的 List&lt;String&gt;（ParameterizedTypeImpl）、T[] 中的T（TypeVariableImpl）</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/GenericArrayType-getGenericComponentType.png" alt="GenericArrayType-getGenericComponentType" title="GenericArrayType-getGenericComponentType" /></p><blockquote><p>值得注意的是，无论是几维数组，getGenericComponentType() 方法都只会脱去最右边的[]，返回剩下的值</p></blockquote><h3 id="33-typevariable"><a class="markdownIt-Anchor" href="#33-typevariable"></a> 3.3 TypeVariable</h3><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/TypeVariable.png" alt="TypeVariable" title="TypeVariable" /></p><blockquote><p>类型变量，即泛型中的变量；例如：T、K、V等变量，可以表示任何类；在这需要强调的是，<code>TypeVariable</code>代表着泛型中的变量，而<code>ParameterizedType</code>则代表整个泛型<br />在<code>TypeVariable</code>接口中，有4个方法，分别为 getBounds()、getGenericDeclaration()、getAnnotatedBounds、getName()</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TypeVariable</span>&lt;<span class="title">D</span> <span class="keyword">extends</span> <span class="title">GenericDeclaration</span>&gt; <span class="keyword">extends</span> <span class="title">Type</span>, <span class="title">AnnotatedElement</span> </span>&#123;</span><br><span class="line">   </span><br><span class="line">    <span class="comment">/** 获取范型上限,无显式定义(extends),默认为Object */</span></span><br><span class="line">    Type[] getBounds();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 获得声明该类型变量的实体(获得类、方法或者构造器) */</span></span><br><span class="line">    <span class="function">D <span class="title">getGenericDeclaration</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 获得名称,即K、V、E之类的 */</span></span><br><span class="line">    <span class="function">String <span class="title">getName</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 获取类型变量上限的对象数组 */</span></span><br><span class="line">     AnnotatedType[] getAnnotatedBounds();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="331-getbounds"><a class="markdownIt-Anchor" href="#331-getbounds"></a> 3.3.1 getBounds</h4><blockquote><p>获得该类型变量的上限（上边界），若无显式定义（extends），默认为 Object，类型变量的上限可能不止一个，因为可以用&amp;符号限定多个（这其中有且只能有一个为类或抽象类，且必须放在extends后的第一个，即若有多个上边界，则第一个&amp;后必为接口）。</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/TypeVariable-getBounds-1.png" alt="TypeVariable-getBounds" title="TypeVariable-getBounds" /></p><blockquote><p>无显式定义extends：</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/TypeVariable-getBounds-2.png" alt="TypeVariable-getBounds" title="TypeVariable-getBounds" /></p><blockquote><p>值得注意的是，类型变量的上限可以为多个，必须使用&amp;符号相连接，例如 List&lt;T extends Number &amp; Serializable&gt;；其中，&amp; 后必须为接口</p></blockquote><h4 id="332-getgenericdeclaration"><a class="markdownIt-Anchor" href="#332-getgenericdeclaration"></a> 3.3.2 getGenericDeclaration</h4><blockquote><p>获取声明该类型变量实体，也就是 TypeVariableTest&lt;T&gt; 中的<code>TypeVariableTest</code></p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/TypeVariable-getGenericDeclaration.png" alt="TypeVariable-getGenericDeclaration" title="TypeVariable-getGenericDeclaration" /></p><h4 id="333-getannotatedbounds"><a class="markdownIt-Anchor" href="#333-getannotatedbounds"></a> 3.3.3 getAnnotatedBounds</h4><blockquote><p>返回一个<code>AnnotatedType</code>对象的数组，表示使用类型来表示此<code>TypeVariable</code>表示的类型参数的上限。 数组中的对象的顺序对应于 type 参数的声明中的边界的顺序。 如果 type 参数声明没有边界，则返回长度为 0 的数组。</p></blockquote><h4 id="334-getname"><a class="markdownIt-Anchor" href="#334-getname"></a> 3.3.4 getName</h4><blockquote><p>获取类型变量在源码中定义的名称</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/TypeVariable-getName.png" alt="TypeVariable-getName" title="TypeVariable-getName" /></p><blockquote><p>说到<code>TypeVariable</code>类，就不得不提及 Java-Type 体系中另一个比较重要的接口—<code>GenericDeclaration</code>。含义为：声明类型变量的所有实体的公共接口；也就是说该接口定义了哪些地方可以定义类型变量（泛型）</p></blockquote><blockquote><p>通过查看源码发现，<code>GenericDeclaration</code>下有四个子类，分别为 Class、Executable、Method、Constructor。其中 Method、Constructor 继承自 Executable 表示可执行。</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/GenericDeclaration.png" alt="GenericDeclaration" title="GenericDeclaration" /></p><p>此时，我们不禁要问，我们不是经常在类中的属性声明泛型吗，怎么 Field 没有实现<code>GenericDeclaration</code>接口呢？</p><p>其实，我们在 Field 中并没有声明泛型，而是在使用泛型而已！不信，我们实际上代码来看看！</p><blockquote><ol><li>首先在 Class 上定义泛型:</li></ol></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/GenericDeclaration-Class.png" alt="GenericDeclaration-Class" title="GenericDeclaration-Class" /></p><blockquote><ol start="2"><li>我们没有在 Class 上定义泛型，直接在构造方法上定义泛型:</li></ol></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/GenericDeclaration-Constructor.png" alt="GenericDeclaration-Constructor" title="GenericDeclaration-Constructor" /></p><blockquote><ol start="3"><li>我们直接在属性上定义:</li></ol></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/GenericDeclaration-Field.png" alt="GenericDeclaration-Field" title="GenericDeclaration-Field" /></p><p>我们看到，如果不在 Class 上定义，属性上并不能直接使用！所以，这也是我之前说的属性上并不是定义泛型，而是使用泛型，所以 Field 并没有实现<code>GenericDeclaration</code>接口！</p><h3 id="34-wildcardtype"><a class="markdownIt-Anchor" href="#34-wildcardtype"></a> 3.4 WildcardType</h3><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/WildcardType.png" alt="WildcardType" title="WildcardType" /></p><blockquote><p>？—通配符表达式，表示通配符泛型，但是<code>WildcardType</code>并不属于 Java-Type 中的一种。例如：List&lt;? extends Number&gt; 和 List&lt;? super Integer&gt;</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">WildcardType</span> <span class="keyword">extends</span> <span class="title">Type</span> </span>&#123;</span><br><span class="line">    <span class="comment">/** 获取范型表达式上界(上限extends) */</span></span><br><span class="line">    Type[] getUpperBounds();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 获取范型表达式下界(下限super) */</span></span><br><span class="line">    Type[] getLowerBounds();</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>在<code>WildcardType</code>接口中，有2个方法，分别为 getUpperBounds()、getLowerBounds()</p></blockquote><h4 id="341-getupperbounds"><a class="markdownIt-Anchor" href="#341-getupperbounds"></a> 3.4.1 getUpperBounds</h4><blockquote><p>获取泛型变量的上边界（extends）</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/WildcardType-getUpperBounds.png" alt="WildcardType-getUpperBounds" title="WildcardType-getUpperBounds" /></p><h4 id="342-getlowerbounds"><a class="markdownIt-Anchor" href="#342-getlowerbounds"></a> 3.4.2 getLowerBounds</h4><blockquote><p>获取泛型变量的下边界（super）</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/WildcardType-getLowerBounds.png" alt="WildcardType-getLowerBounds" title="WildcardType-getLowerBounds" /></p><h2 id="4-type-的实现-class"><a class="markdownIt-Anchor" href="#4-type-的实现-class"></a> 4. Type 的实现 Class</h2><blockquote><p><code>Type</code>接口的实现类，是我们工作中常用到的一个对象；在 Java 中，每个 .class 文件在程序运行期间，都对应着一个<code>Class</code>对象，这个对象保存有这个类的全部信息；因此，<code>Class</code>对象也称之为 Java 反射的基础</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/11.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/Class.png" alt="Class" title="Class" /></p><blockquote><p>通过上面的例子，可以看出，当我们没有声明泛型的时候，我们普通的对象就是一个 Class 类型，是 Type 中的一种</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu Nginx 安装免费SSL证书</title>
      <link href="post/ubuntu-nginx-certbot.html"/>
      <url>post/ubuntu-nginx-certbot.html</url>
      
        <content type="html"><![CDATA[<h1 id="安装-nginx"><a class="markdownIt-Anchor" href="#安装-nginx"></a> 安装 nginx</h1><blockquote><p>更新 apt 源,安装 nginx 服务</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install -y nginx</span><br></pre></td></tr></table></figure><h1 id="安装certbot"><a class="markdownIt-Anchor" href="#安装certbot"></a> 安装certbot</h1><blockquote><p>certbot 是维护 Let’s Encrypt 的 Package。<br />添加 package repository</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:certbot&#x2F;certbot</span><br></pre></td></tr></table></figure><blockquote><p>然后更新 apt 源</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><blockquote><p>然后安装 Certbot 的 Nginx package</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install python-certbot-nginx -y</span><br></pre></td></tr></table></figure><h1 id="签发-ssl-证书"><a class="markdownIt-Anchor" href="#签发-ssl-证书"></a> 签发 ssl 证书</h1><blockquote><p>现在使用 Let’s Encrypt 签发 ssl 证书：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo certbot --nginx -d your-domain</span><br></pre></td></tr></table></figure><blockquote><p>注意这里的 <code>your-domain</code> 是你自己的域名，如果你第一次运行<code>certbot</code>的话，会让你输入邮箱，还要接受<code>Let's Encrypt</code>的协议,最后会让你选择是否重定向<code>http</code>到<code>https</code></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Please choose whether or not to redirect HTTP traffic to HTTPS, removing HTTP access.</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">1: No redirect - Make no further changes to the webserver configuration.</span><br><span class="line">2: Redirect - Make all requests redirect to secure HTTPS access. Choose this for</span><br><span class="line">new sites, or if you&#39;re confident your site works on HTTPS. You can undo this</span><br><span class="line">change by editing your web server&#39;s configuration.</span><br></pre></td></tr></table></figure><blockquote><p>选2,重定向即可。<br />最后可以看到生成的证书的位置</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">IMPORTANT NOTES:</span><br><span class="line"> - Congratulations! Your certificate and chain have been saved at:</span><br><span class="line">   &#x2F;etc&#x2F;letsencrypt&#x2F;live&#x2F;hvnobug.com&#x2F;fullchain.pem</span><br><span class="line">   Your key file has been saved at:</span><br><span class="line">   &#x2F;etc&#x2F;letsencrypt&#x2F;live&#x2F;hvnobug.com&#x2F;privkey.pem</span><br><span class="line">   Your cert will expire on 2019-10-28. To obtain a new or tweaked</span><br><span class="line">   version of this certificate in the future, simply run certbot again</span><br><span class="line">   with the &quot;certonly&quot; option. To non-interactively renew *all* of</span><br><span class="line">   your certificates, run &quot;certbot renew&quot;</span><br><span class="line"> - Your account credentials have been saved in your Certbot</span><br><span class="line">   configuration directory at &#x2F;etc&#x2F;letsencrypt. You should make a</span><br><span class="line">   secure backup of this folder now. This configuration directory will</span><br><span class="line">   also contain certificates and private keys obtained by Certbot so</span><br><span class="line">   making regular backups of this folder is ideal.</span><br><span class="line"> - If you like Certbot, please consider supporting our work by:</span><br><span class="line"></span><br><span class="line">   Donating to ISRG &#x2F; Let&#39;s Encrypt:   https:&#x2F;&#x2F;letsencrypt.org&#x2F;donate</span><br><span class="line">   Donating to EFF:                    https:&#x2F;&#x2F;eff.org&#x2F;donate-le</span><br></pre></td></tr></table></figure><p>查看 nginx 配置文件<code>/etc/nginx/sites-available/default</code></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">listen</span> [::]:<span class="number">443</span> ssl ipv6only=<span class="literal">on</span>; <span class="comment"># managed by Certbot</span></span><br><span class="line"><span class="attribute">listen</span> <span class="number">443</span> ssl; <span class="comment"># managed by Certbot</span></span><br><span class="line"><span class="attribute">ssl_certificate</span> /etc/letsencrypt/live/hvnobug.com/fullchain.pem; <span class="comment"># managed by Certbot</span></span><br><span class="line"><span class="attribute">ssl_certificate_key</span> /etc/letsencrypt/live/hvnobug.com/privkey.pem; <span class="comment"># managed by Certbot</span></span><br><span class="line"><span class="attribute">include</span> /etc/letsencrypt/options-ssl-nginx.conf; <span class="comment"># managed by Certbot</span></span><br><span class="line"><span class="attribute">ssl_dhparam</span> /etc/letsencrypt/ssl-dhparams.pem; <span class="comment"># managed by Certbot</span></span><br></pre></td></tr></table></figure><blockquote><p>这是我们发现已经配置了 ssl 证书，监听 443 端口。我们在浏览器访问<code>http</code>会自动重定向到<code>https</code>。</p></blockquote><h1 id="自动更新证书"><a class="markdownIt-Anchor" href="#自动更新证书"></a> 自动更新证书</h1><blockquote><p>因为 Let’s Encrypt 签发的<code>SSL</code>证书有效期只有 90 天，所有在过期之前，我们需要自动更新<code>SSL</code>证书，而如果你使用最新的<code>certbot</code>的话，Let’s Encrypt 会帮你添加自动更新的脚本到 /etc/cron.d 里，你只需要去检测一下这个命令是否生效就 OK ！</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo certbot renew --dry-run</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> ubuntu </tag>
            
            <tag> https </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES6之Promise</title>
      <link href="post/es6-promise.html"/>
      <url>post/es6-promise.html</url>
      
        <content type="html"><![CDATA[<h2 id="什么是promise"><a class="markdownIt-Anchor" href="#什么是promise"></a> 什么是Promise</h2><blockquote><p><code>Promise</code>是异步编程的一种解决方案：从语法上讲,<code>promise</code>是一个对象，从它可以获取异步操作的消息；从本意上讲，它是承诺，承诺它过一段时间会给你一个结果。<code>promise</code>有三种状态：<code>pending</code>(等待态)，<code>fulfiled</code>(成功态)，<code>rejected</code>(失败态)；状态一旦改变，就不会再变。创造<code>promise</code>实例后，它会立即执行</p></blockquote><h2 id="promise-的优点"><a class="markdownIt-Anchor" href="#promise-的优点"></a> Promise 的优点</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> test=<span class="function">(<span class="params">args,callback</span>)=&gt;</span>&#123;  </span><br><span class="line">    <span class="keyword">if</span>(args &amp;&amp; callback &amp;&amp; <span class="keyword">typeof</span> callback ===<span class="string">&#x27;function&#x27;</span>)&#123; callback(); &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">test(<span class="string">&#x27;test&#x27;</span>,<span class="function">()=&gt;</span><span class="built_in">console</span>.info(<span class="string">&#x27;this is a callback&#x27;</span>));  </span><br></pre></td></tr></table></figure><p>我们一定见过如上的代码，但是如果回调嵌套很多时，代码就会非常繁琐，会给我们的编程带来很多的麻烦，这种情况俗称——回调地狱。</p><p><code>promise</code>是用来解决两个问题的：</p><blockquote><p>回调地狱,代码难以维护， 常常第一个的函数的输出是第二个函数的输入这种现象<br /><code>promise</code> 可以支持多个并发的请求,获取并发请求中的数据<br />这个<code>promise</code>可以解决异步的问题,本身不能说promise是异步的</p></blockquote><h2 id="promise-的用法"><a class="markdownIt-Anchor" href="#promise-的用法"></a> Promise 的用法</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>)</span>&#123;</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;执行完成Promise&#x27;</span>);</span><br><span class="line">        <span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random())?resolve(<span class="string">&#x27;执行成功&#x27;</span>):reject(<span class="string">&#x27;执行失败&#x27;</span>);</span><br><span class="line">&#125;, <span class="number">2000</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>其执行过程是：执行了一个异步操作，也就是 setTimeout，2秒后，输出“执行完成”，然后随机调用<code>resolve</code>或者<code>reject</code>方法。</p><blockquote><p><code>Promise</code>的构造函数接收一个参数：函数,并且这个函数需要传入两个参数:</p><ul><li>resolve ：异步操作执行成功后的回调函数</li><li>reject：异步操作执行失败后的回调函数</li></ul></blockquote><h3 id="then-链式操作的用法"><a class="markdownIt-Anchor" href="#then-链式操作的用法"></a> then 链式操作的用法</h3><blockquote><p>所以,从表面上看,<code>Promise</code>只是能够简化层层回调的写法，而实质上,<code>Promise</code>的精髓是“状态”，用维护状态、传递状态的方式来使得回调函数能够及时调用，它比传递callback函数要简单、灵活的多。所以使用<code>Promise</code>的正确场景是这样的：</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">promise.then(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">     <span class="built_in">console</span>.log(<span class="string">&#x27;resolved&#x27;</span>, data);</span><br><span class="line">&#125;).then(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">     <span class="built_in">console</span>.log(<span class="string">&#x27;resolved&#x27;</span>, data);</span><br><span class="line">&#125;).then(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">     <span class="built_in">console</span>.log(<span class="string">&#x27;resolved&#x27;</span>, data);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="catch-的用法"><a class="markdownIt-Anchor" href="#catch-的用法"></a> catch 的用法</h3><blockquote><p>我们知道 <code>Promise</code> 对象除了 then 方法，还有一个 catch 方法,它是做什么用的呢？其实它和 then 的第二个参数一样,用来指定 <code>reject</code> 的回调。用法是这样：</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">promise.then(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;resolved&#x27;</span>,data);</span><br><span class="line">&#125;).catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;rejected&#x27;</span>,err);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="all-的用法"><a class="markdownIt-Anchor" href="#all-的用法"></a> all 的用法</h3><blockquote><p>Promise.all 可以将多个<code>Promise</code>实例包装成一个新的<code>Promise</code>实例。同时,成功和失败的返回值是不同的,成功的时候返回的是一个结果数组，而失败的时候则返回最先被<code>reject</code>失败状态的值。</p></blockquote><p>说白了就是谁跑的慢，以谁为准执行回调。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> p1 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>)</span>&#123;&#125;)</span><br><span class="line"><span class="keyword">const</span> p2 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>)</span>&#123;&#125;)</span><br><span class="line"><span class="keyword">const</span> p3 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>)</span>&#123;&#125;)  </span><br><span class="line"><span class="keyword">let</span> p = <span class="built_in">Promise</span>.all([p1, p2, p3]);</span><br><span class="line"></span><br><span class="line">p.then(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;  </span><br><span class="line">    <span class="built_in">console</span>.info(<span class="string">&#x27;success&#x27;</span>,data);  </span><br><span class="line">&#125;).catch(<span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;  </span><br><span class="line">    <span class="built_in">console</span>.error(<span class="string">&#x27;error&#x27;</span>,err);  </span><br><span class="line">&#125;);  </span><br></pre></td></tr></table></figure><p>只有当 p1,p2,p3 都成功才会执行<code>then</code>,有任意一个promise失败都会执行<code>catch</code>。</p><h3 id="race-的用法"><a class="markdownIt-Anchor" href="#race-的用法"></a> race 的用法</h3><blockquote><p>race 就是赛跑的意思,意思就是说,Promise.race([p1, p2, p3])里面哪个结果获得的快，就返回那个结果，不管结果本身是成功状态还是失败状态。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> p1 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>)</span>&#123;&#125;)</span><br><span class="line"><span class="keyword">const</span> p2 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>)</span>&#123;&#125;)</span><br><span class="line"><span class="keyword">const</span> p3 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>)</span>&#123;&#125;)  </span><br><span class="line"><span class="keyword">let</span> p = <span class="built_in">Promise</span>.race([p1, p2, p3]);</span><br><span class="line"></span><br><span class="line">p.then(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;  </span><br><span class="line">    <span class="built_in">console</span>.info(<span class="string">&#x27;success&#x27;</span>,data);  </span><br><span class="line">&#125;).catch(<span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;  </span><br><span class="line">    <span class="built_in">console</span>.error(<span class="string">&#x27;error&#x27;</span>,err);  </span><br><span class="line">&#125;);  </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> javascript </tag>
            
            <tag> es6 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
